webpackHotUpdate("andes",{

/***/ "./packages/andes-theme/src/TerritoriosCulturales.js":
/*!***********************************************************!*\
  !*** ./packages/andes-theme/src/TerritoriosCulturales.js ***!
  \***********************************************************/
/*! exports provided: SubSectionTitle, BriefSection, InfoItem, FontAwesomeIconStyled, FontAwesomeIconList, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SubSectionTitle\", function() { return SubSectionTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BriefSection\", function() { return BriefSection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InfoItem\", function() { return InfoItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FontAwesomeIconStyled\", function() { return FontAwesomeIconStyled; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FontAwesomeIconList\", function() { return FontAwesomeIconList; });\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var _Filosofia__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Filosofia */ \"./packages/andes-theme/src/Filosofia.js\");\n/* harmony import */ var _potatoPark__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./potatoPark */ \"./packages/andes-theme/src/potatoPark.js\");\n/* harmony import */ var _fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @fortawesome/react-fontawesome */ \"./node_modules/@fortawesome/react-fontawesome/index.es.js\");\n/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ \"./node_modules/@fortawesome/free-solid-svg-icons/index.es.js\");\n/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Dropdown */ \"./packages/andes-theme/src/Dropdown.js\");\n/* harmony import */ var _static_images_link2_jpg__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./static/images/link2.jpg */ \"./packages/andes-theme/src/static/images/link2.jpg\");\n/* harmony import */ var _static_images_link2_jpg__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_static_images_link2_jpg__WEBPACK_IMPORTED_MODULE_9__);\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module './static/images/estudioparquedemaiz.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var SubSectionTitle=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"h2\",{target:\"e2aopyk0\",label:\"SubSectionTitle\"})( false?undefined:{name:\"13kq6dj\",styles:\"color:#44841a;padding:2rem 1rem 0 1rem;font-size:1.8rem;text-align:center;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var BriefSection=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e2aopyk1\",label:\"BriefSection\"})( false?undefined:{name:\"gtr356\",styles:\"display:flex;padding:2rem 4rem;@media(max-width:768px){flex-direction:column;padding:2rem 1rem;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var InfoItem=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e2aopyk2\",label:\"InfoItem\"})( false?undefined:{name:\"1du135w\",styles:\"flex-basis:33.33%;padding:0 2rem;text-align:center;@media(max-width:768px){padding:1rem 1rem;}p{line-height:1.5;}h3{color:#44841a;padding:0 1rem 0 1rem;}ul{margin-top:2rem;padding-left:0;text-align:left;}li{list-style:none;margin-top:1rem;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var FontAwesomeIconStyled=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__[\"FontAwesomeIcon\"],{target:\"e2aopyk3\",label:\"FontAwesomeIconStyled\"})( false?undefined:{name:\"1e6kuzn\",styles:\"color:#44841a;font-size:3rem;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FsZXhmL3JlYWN0XzIwMjAvYW5kZXMvcGFja2FnZXMvYW5kZXMtdGhlbWUvc3JjL1RlcnJpdG9yaW9zQ3VsdHVyYWxlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwRDREIiwiZmlsZSI6Ii9ob21lL2FsZXhmL3JlYWN0XzIwMjAvYW5kZXMvcGFja2FnZXMvYW5kZXMtdGhlbWUvc3JjL1RlcnJpdG9yaW9zQ3VsdHVyYWxlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge2Nvbm5lY3QsIGNzcywgc3R5bGVkIH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQge0hlYWRDb250YWluZXIsIFRpdGxlLCBTdWJUaXRsZSwgU2VwYXJhdG9yLCBNYXJnaW5Ub3BDb250YWluZXJ9IGZyb20gJy4vRmlsb3NvZmlhJztcbmltcG9ydCB7U2VjdGlvbkNvbnRhaW5lciwgQ2FyZHNDb250YWluZXIsIENhcmQsIE1haW5QYXJhZ3JhcGh9IGZyb20gJy4vcG90YXRvUGFyayc7XG5pbXBvcnQgeyBGb250QXdlc29tZUljb24gfSBmcm9tICdAZm9ydGF3ZXNvbWUvcmVhY3QtZm9udGF3ZXNvbWUnO1xuaW1wb3J0IHsgZmFRdWVzdGlvbkNpcmNsZSwgZmFMaXN0QWx0LCBmYUxlYWYsIGZhQXJyb3dBbHRDaXJjbGVSaWdodCB9IGZyb20gJ0Bmb3J0YXdlc29tZS9mcmVlLXNvbGlkLXN2Zy1pY29ucyc7XG5pbXBvcnQgeyBWZXJ0aWNhbEJvcmRlciB9IGZyb20gJy4vRHJvcGRvd24nO1xuaW1wb3J0IGltZ1Jlc2VhcmNoIGZyb20gJy4vc3RhdGljL2ltYWdlcy9saW5rMi5qcGcnO1xuaW1wb3J0IHBhcnF1ZWRlbWFpeiBmcm9tICcuL3N0YXRpYy9pbWFnZXMvZXN0dWRpb3BhcnF1ZWRlbWFpei5wbmcnXG5cblxuZXhwb3J0IGNvbnN0IFN1YlNlY3Rpb25UaXRsZSA9IHN0eWxlZC5oMmBcbiAgICAgICBjb2xvcjogIzQ0ODQxYTtcbiAgICAgICBwYWRkaW5nOiAycmVtIDFyZW0gMCAxcmVtO1xuICAgICAgIGZvbnQtc2l6ZTogMS44cmVtO1xuICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbmA7XG5cbmV4cG9ydCBjb25zdCBCcmllZlNlY3Rpb24gPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcGFkZGluZzogMnJlbSA0cmVtO1xuXG4gICAgQG1lZGlhKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgcGFkZGluZzogMnJlbSAxcmVtO1xuICAgIH1cbmBcblxuZXhwb3J0IGNvbnN0IEluZm9JdGVtID0gc3R5bGVkLmRpdmBcbiAgICBmbGV4LWJhc2lzOiAzMy4zMyU7XG4gICAgcGFkZGluZzogMCAycmVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIEBtZWRpYShtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIHBhZGRpbmc6IDFyZW0gMXJlbTtcbiAgICB9XG5cbiAgICBwIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICB9XG4gICAgXG4gICAgaDMge1xuICAgICAgICBjb2xvcjogIzQ0ODQxYTtcbiAgICAgICAgcGFkZGluZzogMCAxcmVtIDAgMXJlbTtcbiAgICB9XG5cbiAgICB1bCB7XG4gICAgICAgIG1hcmdpbi10b3A6IDJyZW07XG4gICAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICB9XG5cbiAgICBsaSB7XG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgIG1hcmdpbi10b3A6IDFyZW07XG4gICAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IEZvbnRBd2Vzb21lSWNvblN0eWxlZCA9IHN0eWxlZChGb250QXdlc29tZUljb24pYFxuICAgIGNvbG9yOiAjNDQ4NDFhO1xuICAgIGZvbnQtc2l6ZTogM3JlbTtcbmA7XG5cbmV4cG9ydCBjb25zdCBGb250QXdlc29tZUljb25MaXN0ID0gc3R5bGVkKEZvbnRBd2Vzb21lSWNvbilgXG4gICAgY29sb3I6ICM0NDg0MWE7XG4gICAgbWFyZ2luLXJpZ2h0OiAuNXJlbTtcbmA7XG5cbmNvbnN0IFRlcnJpdG9yaW9zQ3VsdHVyYWxlcyA9ICh7c3RhdGV9KSA9PiB7XG4gICAgcmV0dXJuICggXG4gICAgICAgIDxNYXJnaW5Ub3BDb250YWluZXI+XG4gICAgICAgICAgICA8SGVhZENvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8VGl0bGU+XG4gICAgICAgICAgICAgICAgICAgIFRlcnJpdG9yaW9zIEJpb2N1bHR1cmFsZXNcbiAgICAgICAgICAgICAgICA8L1RpdGxlPlxuICAgICAgICAgICAgICAgIDxTdWJUaXRsZT5cbiAgICAgICAgICAgICAgICAgICAgRGVzYXJyb2xsbyBlbmTDs2dlbm8gPGJyPjwvYnI+IENvbnNlcnZhY2nDs24gZGUgbGEgYmlvZGl2ZXJzaWRhZFxuICAgICAgICAgICAgICAgIDwvU3ViVGl0bGU+XG4gICAgICAgICAgICAgICAgPFNlcGFyYXRvcj48L1NlcGFyYXRvcj5cbiAgICAgICAgICAgIDwvSGVhZENvbnRhaW5lcj5cblxuICAgICAgICAgICAgPFNlY3Rpb25Db250YWluZXI+XG4gICAgICAgICAgICAgICAgPE1haW5QYXJhZ3JhcGg+XG4gICAgICAgICAgICAgICAgICAgIE1vc2FpY29zIGRlIHVzbyBkZSBsYSB0aWVycmEgcXVlIGFiYXJjYW4gdGVuZW5jaWEgZGUgbGEgdGllcnJhIHRyYWRpY2lvbmFsIHkgaW5kw61nZW5hLCBzaXN0ZW1hcyBkZSBwcm9kdWNjacOzbiBlIGludGVyY2FtYmlvLCBcbiAgICAgICAgICAgICAgICAgICAgaWRlbnRpZGFkIGN1bHR1cmFsLCBvcmdhbml6YWNpw7NuIGNvbXVuaXRhcmlhIHkgb2JqZXRpdm9zIHNpbXVsdMOhbmVvcyBkZSBkZXNhcnJvbGxvIGVuZMOzZ2VubyB5IGNvbnNlcnZhY2nDs24gZGUgbGEgYmlvZGl2ZXJzaWRhZC5cbiAgICAgICAgICAgICAgICA8L01haW5QYXJhZ3JhcGg+XG4gICAgICAgICAgICAgICAgPHA+XG4gICAgICAgICAgICAgICAgICAgIExhIEFzb2NpYWNpw7NuIEFOREVTLCBlbiBjb2xhYm9yYWNpw7NuIGNvbiBjb211bmlkYWRlcyBpbmTDrWdlbmFzIGVuIFBlcsO6IHkgZW4gdG9kbyBlbCBtdW5kbyxcbiAgICAgICAgICAgICAgICAgICAgaGEgdHJhYmFqYWRvIGR1cmFudGUgbGFzIMO6bHRpbWFzIGTDqWNhZGFzIHBhcmEgZGVmaW5pciwgZXhwYW5kaXIgeSBwcm90ZWdlciBsb3MgdGVycml0b3Jpb3MgXG4gICAgICAgICAgICAgICAgICAgIGRlbCBwYXRyaW1vbmlvIGJpb2N1bHR1cmFsLiBcbiAgICAgICAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICAgICAgICA8cD5cbiAgICAgICAgICAgICAgICAgICAgQSB0cmF2w6lzIGRlIGxvcyBpbnRlcmNhbWJpb3MgZGUgYXByZW5kaXphamUgZmFjaWxpdGFkb3MgcG9yIGxhIFxuICAgICAgICAgICAgICAgICAgICBSZWQgSW50ZXJuYWNpb25hbCBkZSBQdWVibG9zIEluZMOtZ2VuYXMgZGUgTW9udGHDsWEgKElOTUlQKSwgbGFzIGNvbXVuaWRhZGVzIGluZMOtZ2VuYXMgZW4gcGHDrXNlcyBcbiAgICAgICAgICAgICAgICAgICAgcXVlIHZhbiBkZXNkZSBLZW5pYSBoYXN0YSBsYSBJbmRpYSB5IEtpcmd1aXN0w6FuIGhhbiB0cmFiYWphZG8gcGFyYSBpbXBsZW1lbnRhciBlbCBtb2RlbG8gZGUgXG4gICAgICAgICAgICAgICAgICAgIGhlcmVuY2lhIGJpb2N1bHR1cmFsLlxuICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgIDwvU2VjdGlvbkNvbnRhaW5lcj5cblxuICAgICAgICAgICAgPEJyaWVmU2VjdGlvbj5cblxuICAgICAgICAgICAgICAgIDxJbmZvSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxGb250QXdlc29tZUljb25TdHlsZWQgaWNvbj17ZmFRdWVzdGlvbkNpcmNsZX0vPlxuICAgICAgICAgICAgICAgICAgICA8aDM+wr9QT1IgUVXDiT88L2gzPlxuICAgICAgICAgICAgICAgICAgICA8cD5cbiAgICAgICAgICAgICAgICAgICAgTGEgZXJvc2nDs24gYWN0dWFsIGRlICBsYSBnZW7DqXRpY2EgeSBsYSBkaXZlcnNpZGFkIGN1bHR1cmFsIGVzIHNpbiBwcmVjZWRlbnRlcywgeSBzZSBwb25lIGNhZGEgdmV6IG3DoXMgZGlmw61jaWwgcGFyYSBjb211bmlkYWRlcyBhbHJlZGVkb3IgZGVsIG11bmRvIHBhcmEgZW5mcmVudGFyIGxvcyBpbXBhY3RvcyBhZHZlcnNvcyBkZWwgY2FtYmlvIGNsaW3DoXRpY28sIGxvcyBhbWVuYXphcyBhbCBzZWd1cmlkYWQgYWxpbWVudGFyaWEsICB5IGxhIGVzY2FzZXogZGVsIGFndWEuIFxuICAgICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICAgIDxwPlRlcnJpdG9yaW9zIGRlbCBwYXRyaW1vbmlvIGJpb2N1bHR1cmFsLCBxdWUgdXRpbGl6YW4gbGEgZ2VzdGnDs24gaW50ZWdyYWRhIGRlbCBwYWlzYWplLCBvZnJlY2VuIHVuIG1vZGVsbyBjbGFybyBwYXJhIGFkYXB0YXJzZSBhbCBjYW1iaW8uPC9wPlxuICAgICAgICAgICAgICAgIDwvSW5mb0l0ZW0+XG4gICAgICAgICAgICAgICAgPFZlcnRpY2FsQm9yZGVyPjwvVmVydGljYWxCb3JkZXI+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPEluZm9JdGVtPlxuICAgICAgICAgICAgICAgICAgICA8Rm9udEF3ZXNvbWVJY29uU3R5bGVkIGljb249e2ZhTGlzdEFsdH0vPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPGgzPk5VRVNUUkFTIEFNQklDSU9ORVM8L2gzPlxuXG4gICAgICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5Db25zZXJ2YXIgbGEgYWdyb2Jpb2RpdmVyc2lkYWQ8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxGb250QXdlc29tZUljb25MaXN0IGljb249e2ZhQXJyb3dBbHRDaXJjbGVSaWdodH0vPkZvcnRlbGVjZXIgbGEgc2VndXJpZGFkIGFsaW1lbnRhcmlhPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5NZWpvcmFyIG1lZGlvcyBkZSB2aWRhPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5Qcm90ZWdlciBlbCBwYXRyaW1vbmlvIGJpb2N1bHR1cmFsPC9saT4gXG4gICAgICAgICAgICAgICAgICAgIDwvdWw+XG5cbiAgICAgICAgICAgICAgICA8L0luZm9JdGVtPlxuICAgICAgICAgICAgICAgIDxWZXJ0aWNhbEJvcmRlcj48L1ZlcnRpY2FsQm9yZGVyPlxuICAgICAgICAgICAgICAgIDxJbmZvSXRlbT5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvblN0eWxlZCBpY29uPXtmYUxlYWZ9Lz5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxoMz5BUkVBUyBERSBJTVBBQ1RPPC9oMz5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxGb250QXdlc29tZUljb25MaXN0IGljb249e2ZhQXJyb3dBbHRDaXJjbGVSaWdodH0vPkFncm9iaW9kaXZlcnNpZGFkPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5EaXZlcnNpZGFkIEN1bHR1cmFsPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5Qb2JyZXphIHkgRGVzaWd1YWxkYWQ8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgIDwvSW5mb0l0ZW0+XG4gICAgICAgICAgICA8L0JyaWVmU2VjdGlvbj5cblxuICAgICAgICAgICAgPFN1YlNlY3Rpb25UaXRsZT5DYXNvcyBkZSBFc3R1ZGlvPC9TdWJTZWN0aW9uVGl0bGU+XG4gICAgICAgICAgICA8Q2FyZHNDb250YWluZXI+XG4gICAgICAgICAgICAgICAgPENhcmQ+XG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtpbWdSZXNlYXJjaH0gLz5cblxuICAgICAgICAgICAgICAgICAgICA8aDM+UGFycXVlIGRlIG1hbmF6YW5hIHkgUGFycXVlIGRlIFRyaWdvLCBUYWppa2lzdGFuPC9oMz5cblxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgRGVzY3VicmUgbGEgaGlzdG9yaWEgZGUgbGEgY29uc2VydmFjaW9uIGRlIERlc2N1YnJhIGxhIGhpc3RvcmlhIGRlIGPDs21vIGxvcyBhZ3JpY3VsdG9yZXMgaW5kw61nZW5hcyBlbiBUYXlpa2lzdMOhbiBlc3TDoW4gaW1wbGVtZW50YW5kbyBlbCBtb2RlbG8gZGUgcGF0cmltb25pbyBiaW9jdWx0dXJhbCBwYXJhIHByb3RlZ2VyIHN1IGRpdmVyc2lkYWQgZGUgdHJpZ28geSBtYW56YW5hLiBFbCBjZW50cm8gZGUgb3JpZ2VuIGRlIGVzdG9zIGRvcyBjdWx0aXZvcyBkZSBpbXBvcnRhbmNpYSBtdW5kaWFsIHNlIGVuY3VlbnRyYSBlbiBsYXMgdGllcnJhcyBkZSBBc2lhIENlbnRyYWwgZGUgZXN0b3MgYWdyaWN1bHRvcmVzLlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG5cbiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vYW5kZXMub3JnLnBlL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzA3L0FwcGxlLWFuZC1XaGVhdC1QYXJrLUNhc2UtU3R1ZHkucGRmXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXJcIiA+VmVyIEVzdHVkaW88L2E+XG4gICAgICAgICAgICAgICAgPC9DYXJkPlxuXG4gICAgICAgICAgICAgICAgPENhcmQ+XG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtwYXJxdWVkZW1haXp9IC8+XG5cbiAgICAgICAgICAgICAgICAgICAgPGgzPlBhcnF1ZSBkZSBNYWl6LCBQZXJ1PC9oMz5cblxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgRGVzY3VicmUgbGEgaGlzdG9yaWEgZGUgbGEgY29uc2VydmFjaW9uIGRlIERlc2N1YnJhIGxhIGhpc3RvcmlhIGRlIGPDs21vIGxvcyBhZ3JpY3VsdG9yZXMgaW5kw61nZW5hcyBlbiBUYXlpa2lzdMOhbiBlc3TDoW4gaW1wbGVtZW50YW5kbyBlbCBtb2RlbG8gZGUgcGF0cmltb25pbyBiaW9jdWx0dXJhbCBwYXJhIHByb3RlZ2VyIHN1IGRpdmVyc2lkYWQgZGUgdHJpZ28geSBtYW56YW5hLiBFbCBjZW50cm8gZGUgb3JpZ2VuIGRlIGVzdG9zIGRvcyBjdWx0aXZvcyBkZSBpbXBvcnRhbmNpYSBtdW5kaWFsIHNlIGVuY3VlbnRyYSBlbiBsYXMgdGllcnJhcyBkZSBBc2lhIENlbnRyYWwgZGUgZXN0b3MgYWdyaWN1bHRvcmVzLlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG5cbiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHA6Ly9hbmRlcy5vcmcucGUvd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvTWFpemUtUGFyay1DYXNlLVN0dWR5LnBkZlwiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCIgPlZlciBFc3R1ZGlvPC9hPlxuICAgICAgICAgICAgICAgIDwvQ2FyZD5cbiAgICAgICAgICAgIDwvQ2FyZHNDb250YWluZXI+XG5cbiAgICAgICAgICAgIDxTdWJTZWN0aW9uVGl0bGU+UmVjdXJzb3MgYWRpY2lvbmFsZXM8L1N1YlNlY3Rpb25UaXRsZT5cbiAgICAgICAgICAgIDxDYXJkc0NvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICAgICAgPENhcmQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly93d3cuaWllZC5vcmcvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXJcIiA+PGltZyBzcmM9e2ltZ1Jlc2VhcmNofSAvPjwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9DYXJkPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPENhcmQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly93d3cuaWllZC5vcmcvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXJcIiA+PGltZyBzcmM9e2ltZ1Jlc2VhcmNofSAvPjwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9DYXJkPlxuICAgICAgICAgICAgICAgICAgICA8Q2FyZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL3d3dy5paWVkLm9yZy9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lclwiID48aW1nIHNyYz17aW1nUmVzZWFyY2h9IC8+PC9hPlxuICAgICAgICAgICAgICAgICAgICA8L0NhcmQ+XG4gICAgICAgICAgICAgICAgICAgIDxDYXJkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vd3d3LmlpZWQub3JnL1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCIgPjxpbWcgc3JjPXtpbWdSZXNlYXJjaH0gLz48L2E+XG4gICAgICAgICAgICAgICAgICAgIDwvQ2FyZD5cbiAgICAgICAgICAgIDwvQ2FyZHNDb250YWluZXI+XG4gICAgICAgIDwvTWFyZ2luVG9wQ29udGFpbmVyPlxuICAgICk7XG59XG4gXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFRlcnJpdG9yaW9zQ3VsdHVyYWxlcyk7Il19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var FontAwesomeIconList=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__[\"FontAwesomeIcon\"],{target:\"e2aopyk4\",label:\"FontAwesomeIconList\"})( false?undefined:{name:\"rfgn5s\",styles:\"color:#44841a;margin-right:.5rem;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var TerritoriosCulturales=(_ref)=>{var{state}=_ref;return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"MarginTopContainer\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"HeadContainer\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"Title\"],null,\"Territorios Bioculturales\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"SubTitle\"],null,\"Desarrollo end\\xF3geno \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"br\",null),\" Conservaci\\xF3n de la biodiversidad\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"Separator\"],null)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"SectionContainer\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"MainParagraph\"],null,\"Mosaicos de uso de la tierra que abarcan tenencia de la tierra tradicional y ind\\xEDgena, sistemas de producci\\xF3n e intercambio, identidad cultural, organizaci\\xF3n comunitaria y objetivos simult\\xE1neos de desarrollo end\\xF3geno y conservaci\\xF3n de la biodiversidad.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,\"La Asociaci\\xF3n ANDES, en colaboraci\\xF3n con comunidades ind\\xEDgenas en Per\\xFA y en todo el mundo, ha trabajado durante las \\xFAltimas d\\xE9cadas para definir, expandir y proteger los territorios del patrimonio biocultural.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,\"A trav\\xE9s de los intercambios de aprendizaje facilitados por la Red Internacional de Pueblos Ind\\xEDgenas de Monta\\xF1a (INMIP), las comunidades ind\\xEDgenas en pa\\xEDses que van desde Kenia hasta la India y Kirguist\\xE1n han trabajado para implementar el modelo de herencia biocultural.\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(BriefSection,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(InfoItem,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconStyled,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faQuestionCircle\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"\\xBFPOR QU\\xC9?\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,\"La erosi\\xF3n actual de  la gen\\xE9tica y la diversidad cultural es sin precedentes, y se pone cada vez m\\xE1s dif\\xEDcil para comunidades alrededor del mundo para enfrentar los impactos adversos del cambio clim\\xE1tico, los amenazas al seguridad alimentaria,  y la escasez del agua.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,\"Territorios del patrimonio biocultural, que utilizan la gesti\\xF3n integrada del paisaje, ofrecen un modelo claro para adaptarse al cambio.\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Dropdown__WEBPACK_IMPORTED_MODULE_8__[\"VerticalBorder\"],null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(InfoItem,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconStyled,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faListAlt\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"NUESTRAS AMBICIONES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"ul\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Conservar la agrobiodiversidad\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Fortelecer la seguridad alimentaria\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Mejorar medios de vida\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Proteger el patrimonio biocultural\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Dropdown__WEBPACK_IMPORTED_MODULE_8__[\"VerticalBorder\"],null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(InfoItem,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconStyled,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faLeaf\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"AREAS DE IMPACTO\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"ul\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Agrobiodiversidad\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Diversidad Cultural\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Pobreza y Desigualdad\")))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(SubSectionTitle,null,\"Casos de Estudio\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"CardsContainer\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"Card\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_link2_jpg__WEBPACK_IMPORTED_MODULE_9___default.a}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Parque de manazana y Parque de Trigo, Tajikistan\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"span\",null,\"Descubre la historia de la conservacion de Descubra la historia de c\\xF3mo los agricultores ind\\xEDgenas en Tayikist\\xE1n est\\xE1n implementando el modelo de patrimonio biocultural para proteger su diversidad de trigo y manzana. El centro de origen de estos dos cultivos de importancia mundial se encuentra en las tierras de Asia Central de estos agricultores.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"https://andes.org.pe/wp-content/uploads/2020/07/Apple-and-Wheat-Park-Case-Study.pdf\",target:\"_blank\",rel:\"noopener\"},\"Ver Estudio\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"Card\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:!(function webpackMissingModule() { var e = new Error(\"Cannot find module './static/images/estudioparquedemaiz.png'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Parque de Maiz, Peru\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"span\",null,\"Descubre la historia de la conservacion de Descubra la historia de c\\xF3mo los agricultores ind\\xEDgenas en Tayikist\\xE1n est\\xE1n implementando el modelo de patrimonio biocultural para proteger su diversidad de trigo y manzana. El centro de origen de estos dos cultivos de importancia mundial se encuentra en las tierras de Asia Central de estos agricultores.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"http://andes.org.pe/wp-content/uploads/2020/03/Maize-Park-Case-Study.pdf\",target:\"_blank\",rel:\"noopener\"},\"Ver Estudio\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(SubSectionTitle,null,\"Recursos adicionales\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"CardsContainer\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"Card\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"https://www.iied.org/\",target:\"_blank\",rel:\"noopener\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_link2_jpg__WEBPACK_IMPORTED_MODULE_9___default.a}))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"Card\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"https://www.iied.org/\",target:\"_blank\",rel:\"noopener\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_link2_jpg__WEBPACK_IMPORTED_MODULE_9___default.a}))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"Card\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"https://www.iied.org/\",target:\"_blank\",rel:\"noopener\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_link2_jpg__WEBPACK_IMPORTED_MODULE_9___default.a}))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"Card\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"https://www.iied.org/\",target:\"_blank\",rel:\"noopener\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_link2_jpg__WEBPACK_IMPORTED_MODULE_9___default.a})))));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(TerritoriosCulturales));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/andes-theme/src/TerritoriosCulturales.js\n");

/***/ })

})