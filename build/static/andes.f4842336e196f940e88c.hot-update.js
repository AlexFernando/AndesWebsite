webpackHotUpdate("andes",{

/***/ "./packages/andes-theme/src/TerritoriosCulturales.js":
/*!***********************************************************!*\
  !*** ./packages/andes-theme/src/TerritoriosCulturales.js ***!
  \***********************************************************/
/*! exports provided: SubSectionTitle, BriefSection, InfoItem, FontAwesomeIconStyled, FontAwesomeIconList, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SubSectionTitle\", function() { return SubSectionTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BriefSection\", function() { return BriefSection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InfoItem\", function() { return InfoItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FontAwesomeIconStyled\", function() { return FontAwesomeIconStyled; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FontAwesomeIconList\", function() { return FontAwesomeIconList; });\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var _Filosofia__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Filosofia */ \"./packages/andes-theme/src/Filosofia.js\");\n/* harmony import */ var _potatoPark__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./potatoPark */ \"./packages/andes-theme/src/potatoPark.js\");\n/* harmony import */ var _fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @fortawesome/react-fontawesome */ \"./node_modules/@fortawesome/react-fontawesome/index.es.js\");\n/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ \"./node_modules/@fortawesome/free-solid-svg-icons/index.es.js\");\n/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Dropdown */ \"./packages/andes-theme/src/Dropdown.js\");\n/* harmony import */ var _static_images_estudioparquemaiz_png__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./static/images/estudioparquemaiz.png */ \"./packages/andes-theme/src/static/images/estudioparquemaiz.png\");\n/* harmony import */ var _static_images_estudioparquemaiz_png__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_static_images_estudioparquemaiz_png__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _static_images_applePark_jpg__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./static/images/applePark.jpg */ \"./packages/andes-theme/src/static/images/applePark.jpg\");\n/* harmony import */ var _static_images_applePark_jpg__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_static_images_applePark_jpg__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _static_images_territoriobio_png__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./static/images/territoriobio.png */ \"./packages/andes-theme/src/static/images/territoriobio.png\");\n/* harmony import */ var _static_images_territoriobio_png__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_static_images_territoriobio_png__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _static_images_territoriobio2_png__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./static/images/territoriobio2.png */ \"./packages/andes-theme/src/static/images/territoriobio2.png\");\n/* harmony import */ var _static_images_territoriobio2_png__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_static_images_territoriobio2_png__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _static_images_territoriobio3_jpg__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./static/images/territoriobio3.jpg */ \"./packages/andes-theme/src/static/images/territoriobio3.jpg\");\n/* harmony import */ var _static_images_territoriobio3_jpg__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_static_images_territoriobio3_jpg__WEBPACK_IMPORTED_MODULE_13__);\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var SubSectionTitle=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"h2\",{target:\"e2aopyk0\",label:\"SubSectionTitle\"})( false?undefined:{name:\"13kq6dj\",styles:\"color:#44841a;padding:2rem 1rem 0 1rem;font-size:1.8rem;text-align:center;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var BriefSection=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e2aopyk1\",label:\"BriefSection\"})( false?undefined:{name:\"gtr356\",styles:\"display:flex;padding:2rem 4rem;@media(max-width:768px){flex-direction:column;padding:2rem 1rem;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var InfoItem=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e2aopyk2\",label:\"InfoItem\"})( false?undefined:{name:\"1du135w\",styles:\"flex-basis:33.33%;padding:0 2rem;text-align:center;@media(max-width:768px){padding:1rem 1rem;}p{line-height:1.5;}h3{color:#44841a;padding:0 1rem 0 1rem;}ul{margin-top:2rem;padding-left:0;text-align:left;}li{list-style:none;margin-top:1rem;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var FontAwesomeIconStyled=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__[\"FontAwesomeIcon\"],{target:\"e2aopyk3\",label:\"FontAwesomeIconStyled\"})( false?undefined:{name:\"1e6kuzn\",styles:\"color:#44841a;font-size:3rem;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var FontAwesomeIconList=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__[\"FontAwesomeIcon\"],{target:\"e2aopyk4\",label:\"FontAwesomeIconList\"})( false?undefined:{name:\"rfgn5s\",styles:\"color:#44841a;margin-right:.5rem;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var AditionalContainer=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e2aopyk5\",label:\"AditionalContainer\"})( false?undefined:{name:\"1lfhjz3\",styles:\"display:flex;padding:1rem 2rem 4rem 2rem;justify-content:center;align-items:center;@media(max-width:768px){flex-direction:column;padding:0rem;}a{margin:0 1rem;background-color:#eaeade;padding:1rem;border-radius:1rem;@media(max-width:768px){margin:.5rem 0;}}img{max-width:100%;max-height:20vh;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FsZXhmL3JlYWN0XzIwMjAvYW5kZXMvcGFja2FnZXMvYW5kZXMtdGhlbWUvc3JjL1RlcnJpdG9yaW9zQ3VsdHVyYWxlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3RXFDIiwiZmlsZSI6Ii9ob21lL2FsZXhmL3JlYWN0XzIwMjAvYW5kZXMvcGFja2FnZXMvYW5kZXMtdGhlbWUvc3JjL1RlcnJpdG9yaW9zQ3VsdHVyYWxlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge2Nvbm5lY3QsIGNzcywgc3R5bGVkIH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQge0hlYWRDb250YWluZXIsIFRpdGxlLCBTdWJUaXRsZSwgU2VwYXJhdG9yLCBNYXJnaW5Ub3BDb250YWluZXJ9IGZyb20gJy4vRmlsb3NvZmlhJztcbmltcG9ydCB7U2VjdGlvbkNvbnRhaW5lciwgQ2FyZHNDb250YWluZXIsIENhcmQsIE1haW5QYXJhZ3JhcGh9IGZyb20gJy4vcG90YXRvUGFyayc7XG5pbXBvcnQgeyBGb250QXdlc29tZUljb24gfSBmcm9tICdAZm9ydGF3ZXNvbWUvcmVhY3QtZm9udGF3ZXNvbWUnO1xuaW1wb3J0IHsgZmFRdWVzdGlvbkNpcmNsZSwgZmFMaXN0QWx0LCBmYUxlYWYsIGZhQXJyb3dBbHRDaXJjbGVSaWdodCB9IGZyb20gJ0Bmb3J0YXdlc29tZS9mcmVlLXNvbGlkLXN2Zy1pY29ucyc7XG5pbXBvcnQgeyBWZXJ0aWNhbEJvcmRlciB9IGZyb20gJy4vRHJvcGRvd24nO1xuaW1wb3J0IHBhcnF1ZWRlbWFpeiBmcm9tICcuL3N0YXRpYy9pbWFnZXMvZXN0dWRpb3BhcnF1ZW1haXoucG5nJztcbmltcG9ydCBhcHBsZXBhcmsgZnJvbSAnLi9zdGF0aWMvaW1hZ2VzL2FwcGxlUGFyay5qcGcnO1xuaW1wb3J0IHRlcnJpdG9yaW8gZnJvbSAnLi9zdGF0aWMvaW1hZ2VzL3RlcnJpdG9yaW9iaW8ucG5nJztcbmltcG9ydCB0ZXJyaXRvcmlvMiBmcm9tICcuL3N0YXRpYy9pbWFnZXMvdGVycml0b3Jpb2JpbzIucG5nJztcbmltcG9ydCB0ZXJyaXRvcmlvMyBmcm9tICcuL3N0YXRpYy9pbWFnZXMvdGVycml0b3Jpb2JpbzMuanBnJztcblxuXG5cbmV4cG9ydCBjb25zdCBTdWJTZWN0aW9uVGl0bGUgPSBzdHlsZWQuaDJgXG4gICAgICAgY29sb3I6ICM0NDg0MWE7XG4gICAgICAgcGFkZGluZzogMnJlbSAxcmVtIDAgMXJlbTtcbiAgICAgICBmb250LXNpemU6IDEuOHJlbTtcbiAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5gO1xuXG5leHBvcnQgY29uc3QgQnJpZWZTZWN0aW9uID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBhZGRpbmc6IDJyZW0gNHJlbTtcblxuICAgIEBtZWRpYShtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIHBhZGRpbmc6IDJyZW0gMXJlbTtcbiAgICB9XG5gXG5cbmV4cG9ydCBjb25zdCBJbmZvSXRlbSA9IHN0eWxlZC5kaXZgXG4gICAgZmxleC1iYXNpczogMzMuMzMlO1xuICAgIHBhZGRpbmc6IDAgMnJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBAbWVkaWEobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICBwYWRkaW5nOiAxcmVtIDFyZW07XG4gICAgfVxuXG4gICAgcCB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgfVxuICAgIFxuICAgIGgzIHtcbiAgICAgICAgY29sb3I6ICM0NDg0MWE7XG4gICAgICAgIHBhZGRpbmc6IDAgMXJlbSAwIDFyZW07XG4gICAgfVxuXG4gICAgdWwge1xuICAgICAgICBtYXJnaW4tdG9wOiAycmVtO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgfVxuXG4gICAgbGkge1xuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgICBtYXJnaW4tdG9wOiAxcmVtO1xuICAgIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBGb250QXdlc29tZUljb25TdHlsZWQgPSBzdHlsZWQoRm9udEF3ZXNvbWVJY29uKWBcbiAgICBjb2xvcjogIzQ0ODQxYTtcbiAgICBmb250LXNpemU6IDNyZW07XG5gO1xuXG5leHBvcnQgY29uc3QgRm9udEF3ZXNvbWVJY29uTGlzdCA9IHN0eWxlZChGb250QXdlc29tZUljb24pYFxuICAgIGNvbG9yOiAjNDQ4NDFhO1xuICAgIG1hcmdpbi1yaWdodDogLjVyZW07XG5gO1xuXG5jb25zdCBBZGl0aW9uYWxDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAgIFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcGFkZGluZzogMXJlbSAycmVtIDRyZW0gMnJlbTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgQG1lZGlhKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBwYWRkaW5nOiAwcmVtO1xuICAgICAgICB9XG5cbiAgICBhe1xuICAgICAgICBtYXJnaW46IDAgMXJlbTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2VhZWFkZTtcbiAgICAgICAgcGFkZGluZzogMXJlbTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMXJlbTtcblxuICAgICAgICBAbWVkaWEobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICAgICAgbWFyZ2luOiAuNXJlbSAwO1xuICAgICAgICB9XG5cbiAgICB9XG4gICAgaW1nIHtcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICBtYXgtaGVpZ2h0OiAyMHZoO1xuICAgIH1cbmA7XG5cbmNvbnN0IFRlcnJpdG9yaW9zQ3VsdHVyYWxlcyA9ICh7c3RhdGV9KSA9PiB7XG4gICAgcmV0dXJuICggXG4gICAgICAgIDxNYXJnaW5Ub3BDb250YWluZXI+XG4gICAgICAgICAgICA8SGVhZENvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8VGl0bGU+XG4gICAgICAgICAgICAgICAgICAgIFRlcnJpdG9yaW9zIEJpb2N1bHR1cmFsZXNcbiAgICAgICAgICAgICAgICA8L1RpdGxlPlxuICAgICAgICAgICAgICAgIDxTdWJUaXRsZT5cbiAgICAgICAgICAgICAgICAgICAgRGVzYXJyb2xsbyBlbmTDs2dlbm8gPGJyPjwvYnI+IENvbnNlcnZhY2nDs24gZGUgbGEgYmlvZGl2ZXJzaWRhZFxuICAgICAgICAgICAgICAgIDwvU3ViVGl0bGU+XG4gICAgICAgICAgICAgICAgPFNlcGFyYXRvcj48L1NlcGFyYXRvcj5cbiAgICAgICAgICAgIDwvSGVhZENvbnRhaW5lcj5cblxuICAgICAgICAgICAgPFNlY3Rpb25Db250YWluZXI+XG4gICAgICAgICAgICAgICAgPE1haW5QYXJhZ3JhcGg+XG4gICAgICAgICAgICAgICAgICAgIE1vc2FpY29zIGRlIHVzbyBkZSBsYSB0aWVycmEgcXVlIGFiYXJjYW4gdGVuZW5jaWEgZGUgbGEgdGllcnJhIHRyYWRpY2lvbmFsIHkgaW5kw61nZW5hLCBzaXN0ZW1hcyBkZSBwcm9kdWNjacOzbiBlIGludGVyY2FtYmlvLCBcbiAgICAgICAgICAgICAgICAgICAgaWRlbnRpZGFkIGN1bHR1cmFsLCBvcmdhbml6YWNpw7NuIGNvbXVuaXRhcmlhIHkgb2JqZXRpdm9zIHNpbXVsdMOhbmVvcyBkZSBkZXNhcnJvbGxvIGVuZMOzZ2VubyB5IGNvbnNlcnZhY2nDs24gZGUgbGEgYmlvZGl2ZXJzaWRhZC5cbiAgICAgICAgICAgICAgICA8L01haW5QYXJhZ3JhcGg+XG4gICAgICAgICAgICAgICAgPHA+XG4gICAgICAgICAgICAgICAgICAgIExhIEFzb2NpYWNpw7NuIEFOREVTLCBlbiBjb2xhYm9yYWNpw7NuIGNvbiBjb211bmlkYWRlcyBpbmTDrWdlbmFzIGVuIFBlcsO6IHkgZW4gdG9kbyBlbCBtdW5kbyxcbiAgICAgICAgICAgICAgICAgICAgaGEgdHJhYmFqYWRvIGR1cmFudGUgbGFzIMO6bHRpbWFzIGTDqWNhZGFzIHBhcmEgZGVmaW5pciwgZXhwYW5kaXIgeSBwcm90ZWdlciBsb3MgdGVycml0b3Jpb3MgXG4gICAgICAgICAgICAgICAgICAgIGRlbCBwYXRyaW1vbmlvIGJpb2N1bHR1cmFsLiBcbiAgICAgICAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICAgICAgICA8cD5cbiAgICAgICAgICAgICAgICAgICAgQSB0cmF2w6lzIGRlIGxvcyBpbnRlcmNhbWJpb3MgZGUgYXByZW5kaXphamUgZmFjaWxpdGFkb3MgcG9yIGxhIFxuICAgICAgICAgICAgICAgICAgICBSZWQgSW50ZXJuYWNpb25hbCBkZSBQdWVibG9zIEluZMOtZ2VuYXMgZGUgTW9udGHDsWEgKElOTUlQKSwgbGFzIGNvbXVuaWRhZGVzIGluZMOtZ2VuYXMgZW4gcGHDrXNlcyBcbiAgICAgICAgICAgICAgICAgICAgcXVlIHZhbiBkZXNkZSBLZW5pYSBoYXN0YSBsYSBJbmRpYSB5IEtpcmd1aXN0w6FuIGhhbiB0cmFiYWphZG8gcGFyYSBpbXBsZW1lbnRhciBlbCBtb2RlbG8gZGUgXG4gICAgICAgICAgICAgICAgICAgIGhlcmVuY2lhIGJpb2N1bHR1cmFsLlxuICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgIDwvU2VjdGlvbkNvbnRhaW5lcj5cblxuICAgICAgICAgICAgPEJyaWVmU2VjdGlvbj5cblxuICAgICAgICAgICAgICAgIDxJbmZvSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxGb250QXdlc29tZUljb25TdHlsZWQgaWNvbj17ZmFRdWVzdGlvbkNpcmNsZX0vPlxuICAgICAgICAgICAgICAgICAgICA8aDM+wr9QT1IgUVXDiT88L2gzPlxuICAgICAgICAgICAgICAgICAgICA8cD5cbiAgICAgICAgICAgICAgICAgICAgTGEgZXJvc2nDs24gYWN0dWFsIGRlICBsYSBnZW7DqXRpY2EgeSBsYSBkaXZlcnNpZGFkIGN1bHR1cmFsIGVzIHNpbiBwcmVjZWRlbnRlcywgeSBzZSBwb25lIGNhZGEgdmV6IG3DoXMgZGlmw61jaWwgcGFyYSBjb211bmlkYWRlcyBhbHJlZGVkb3IgZGVsIG11bmRvIHBhcmEgZW5mcmVudGFyIGxvcyBpbXBhY3RvcyBhZHZlcnNvcyBkZWwgY2FtYmlvIGNsaW3DoXRpY28sIGxvcyBhbWVuYXphcyBhbCBzZWd1cmlkYWQgYWxpbWVudGFyaWEsICB5IGxhIGVzY2FzZXogZGVsIGFndWEuIFxuICAgICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICAgIDxwPlRlcnJpdG9yaW9zIGRlbCBwYXRyaW1vbmlvIGJpb2N1bHR1cmFsLCBxdWUgdXRpbGl6YW4gbGEgZ2VzdGnDs24gaW50ZWdyYWRhIGRlbCBwYWlzYWplLCBvZnJlY2VuIHVuIG1vZGVsbyBjbGFybyBwYXJhIGFkYXB0YXJzZSBhbCBjYW1iaW8uPC9wPlxuICAgICAgICAgICAgICAgIDwvSW5mb0l0ZW0+XG4gICAgICAgICAgICAgICAgPFZlcnRpY2FsQm9yZGVyPjwvVmVydGljYWxCb3JkZXI+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPEluZm9JdGVtPlxuICAgICAgICAgICAgICAgICAgICA8Rm9udEF3ZXNvbWVJY29uU3R5bGVkIGljb249e2ZhTGlzdEFsdH0vPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPGgzPk5VRVNUUkFTIEFNQklDSU9ORVM8L2gzPlxuXG4gICAgICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5Db25zZXJ2YXIgbGEgYWdyb2Jpb2RpdmVyc2lkYWQ8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxGb250QXdlc29tZUljb25MaXN0IGljb249e2ZhQXJyb3dBbHRDaXJjbGVSaWdodH0vPkZvcnRlbGVjZXIgbGEgc2VndXJpZGFkIGFsaW1lbnRhcmlhPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5NZWpvcmFyIG1lZGlvcyBkZSB2aWRhPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5Qcm90ZWdlciBlbCBwYXRyaW1vbmlvIGJpb2N1bHR1cmFsPC9saT4gXG4gICAgICAgICAgICAgICAgICAgIDwvdWw+XG5cbiAgICAgICAgICAgICAgICA8L0luZm9JdGVtPlxuICAgICAgICAgICAgICAgIDxWZXJ0aWNhbEJvcmRlcj48L1ZlcnRpY2FsQm9yZGVyPlxuICAgICAgICAgICAgICAgIDxJbmZvSXRlbT5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvblN0eWxlZCBpY29uPXtmYUxlYWZ9Lz5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxoMz5BUkVBUyBERSBJTVBBQ1RPPC9oMz5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxGb250QXdlc29tZUljb25MaXN0IGljb249e2ZhQXJyb3dBbHRDaXJjbGVSaWdodH0vPkFncm9iaW9kaXZlcnNpZGFkPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5EaXZlcnNpZGFkIEN1bHR1cmFsPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5Qb2JyZXphIHkgRGVzaWd1YWxkYWQ8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgIDwvSW5mb0l0ZW0+XG4gICAgICAgICAgICA8L0JyaWVmU2VjdGlvbj5cblxuICAgICAgICAgICAgPFN1YlNlY3Rpb25UaXRsZT5DYXNvcyBkZSBFc3R1ZGlvPC9TdWJTZWN0aW9uVGl0bGU+XG4gICAgICAgICAgICA8Q2FyZHNDb250YWluZXI+XG4gICAgICAgICAgICAgICAgPENhcmQ+XG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXthcHBsZXBhcmt9IC8+XG5cbiAgICAgICAgICAgICAgICAgICAgPGgzPlBhcnF1ZSBkZSBtYW5hemFuYSB5IFBhcnF1ZSBkZSBUcmlnbywgVGFqaWtpc3RhbjwvaDM+XG5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICAgICAgICAgIERlc2N1YnJlIGxhIGhpc3RvcmlhIGRlIGxhIGNvbnNlcnZhY2lvbiBkZSBEZXNjdWJyYSBsYSBoaXN0b3JpYSBkZSBjw7NtbyBsb3MgYWdyaWN1bHRvcmVzIGluZMOtZ2VuYXMgZW4gVGF5aWtpc3TDoW4gZXN0w6FuIGltcGxlbWVudGFuZG8gZWwgbW9kZWxvIGRlIHBhdHJpbW9uaW8gYmlvY3VsdHVyYWwgcGFyYSBwcm90ZWdlciBzdSBkaXZlcnNpZGFkIGRlIHRyaWdvIHkgbWFuemFuYS4gRWwgY2VudHJvIGRlIG9yaWdlbiBkZSBlc3RvcyBkb3MgY3VsdGl2b3MgZGUgaW1wb3J0YW5jaWEgbXVuZGlhbCBzZSBlbmN1ZW50cmEgZW4gbGFzIHRpZXJyYXMgZGUgQXNpYSBDZW50cmFsIGRlIGVzdG9zIGFncmljdWx0b3Jlcy5cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuXG4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2FuZGVzLm9yZy5wZS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wNy9BcHBsZS1hbmQtV2hlYXQtUGFyay1DYXNlLVN0dWR5LnBkZlwiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCIgPlZlciBFc3R1ZGlvPC9hPlxuICAgICAgICAgICAgICAgIDwvQ2FyZD5cblxuICAgICAgICAgICAgICAgIDxDYXJkPlxuICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17cGFycXVlZGVtYWl6fSAvPlxuXG4gICAgICAgICAgICAgICAgICAgIDxoMz5QYXJxdWUgZGUgTWFpeiwgUGVydTwvaDM+XG5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICAgICAgICAgIERlc2N1YnJlIGxhIGhpc3RvcmlhIGRlIGxhIGNvbnNlcnZhY2lvbiBkZSBEZXNjdWJyYSBsYSBoaXN0b3JpYSBkZSBjw7NtbyBsb3MgYWdyaWN1bHRvcmVzIGluZMOtZ2VuYXMgZW4gVGF5aWtpc3TDoW4gZXN0w6FuIGltcGxlbWVudGFuZG8gZWwgbW9kZWxvIGRlIHBhdHJpbW9uaW8gYmlvY3VsdHVyYWwgcGFyYSBwcm90ZWdlciBzdSBkaXZlcnNpZGFkIGRlIHRyaWdvIHkgbWFuemFuYS4gRWwgY2VudHJvIGRlIG9yaWdlbiBkZSBlc3RvcyBkb3MgY3VsdGl2b3MgZGUgaW1wb3J0YW5jaWEgbXVuZGlhbCBzZSBlbmN1ZW50cmEgZW4gbGFzIHRpZXJyYXMgZGUgQXNpYSBDZW50cmFsIGRlIGVzdG9zIGFncmljdWx0b3Jlcy5cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuXG4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwOi8vYW5kZXMub3JnLnBlL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzAzL01haXplLVBhcmstQ2FzZS1TdHVkeS5wZGZcIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lclwiID5WZXIgRXN0dWRpbzwvYT5cbiAgICAgICAgICAgICAgICA8L0NhcmQ+XG4gICAgICAgICAgICA8L0NhcmRzQ29udGFpbmVyPlxuXG4gICAgICAgICAgICA8U3ViU2VjdGlvblRpdGxlPlJlY3Vyc29zIGFkaWNpb25hbGVzPC9TdWJTZWN0aW9uVGl0bGU+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIDxBZGl0aW9uYWxDb250YWluZXI+XG4gICAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vd3d3LmlpZWQub3JnL1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCIgPjxpbWcgc3JjPXt0ZXJyaXRvcmlvfSAvPjwvYT5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL3d3dy5paWVkLm9yZy9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lclwiID48aW1nIHNyYz17dGVycml0b3JpbzJ9IC8+PC9hPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vd3d3LmlpZWQub3JnL1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCIgPjxpbWcgc3JjPXt0ZXJyaXRvcmlvM30gLz48L2E+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly93d3cuaWllZC5vcmcvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXJcIiA+PGltZyBzcmM9e3BhcnF1ZWRlbWFpen0gLz48L2E+XG4gICAgICAgICAgICA8L0FkaXRpb25hbENvbnRhaW5lcj5cbiAgICAgICAgPC9NYXJnaW5Ub3BDb250YWluZXI+XG4gICAgKTtcbn1cbiBcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoVGVycml0b3Jpb3NDdWx0dXJhbGVzKTsiXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var TerritoriosCulturales=(_ref)=>{var{state}=_ref;return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"MarginTopContainer\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"HeadContainer\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"Title\"],null,\"Territorios Bioculturales\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"SubTitle\"],null,\"Desarrollo end\\xF3geno \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"br\",null),\" Conservaci\\xF3n de la biodiversidad\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"Separator\"],null)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"SectionContainer\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"MainParagraph\"],null,\"Mosaicos de uso de la tierra que abarcan tenencia de la tierra tradicional y ind\\xEDgena, sistemas de producci\\xF3n e intercambio, identidad cultural, organizaci\\xF3n comunitaria y objetivos simult\\xE1neos de desarrollo end\\xF3geno y conservaci\\xF3n de la biodiversidad.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,\"La Asociaci\\xF3n ANDES, en colaboraci\\xF3n con comunidades ind\\xEDgenas en Per\\xFA y en todo el mundo, ha trabajado durante las \\xFAltimas d\\xE9cadas para definir, expandir y proteger los territorios del patrimonio biocultural.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,\"A trav\\xE9s de los intercambios de aprendizaje facilitados por la Red Internacional de Pueblos Ind\\xEDgenas de Monta\\xF1a (INMIP), las comunidades ind\\xEDgenas en pa\\xEDses que van desde Kenia hasta la India y Kirguist\\xE1n han trabajado para implementar el modelo de herencia biocultural.\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(BriefSection,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(InfoItem,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconStyled,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faQuestionCircle\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"\\xBFPOR QU\\xC9?\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,\"La erosi\\xF3n actual de  la gen\\xE9tica y la diversidad cultural es sin precedentes, y se pone cada vez m\\xE1s dif\\xEDcil para comunidades alrededor del mundo para enfrentar los impactos adversos del cambio clim\\xE1tico, los amenazas al seguridad alimentaria,  y la escasez del agua.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,\"Territorios del patrimonio biocultural, que utilizan la gesti\\xF3n integrada del paisaje, ofrecen un modelo claro para adaptarse al cambio.\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Dropdown__WEBPACK_IMPORTED_MODULE_8__[\"VerticalBorder\"],null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(InfoItem,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconStyled,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faListAlt\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"NUESTRAS AMBICIONES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"ul\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Conservar la agrobiodiversidad\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Fortelecer la seguridad alimentaria\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Mejorar medios de vida\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Proteger el patrimonio biocultural\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Dropdown__WEBPACK_IMPORTED_MODULE_8__[\"VerticalBorder\"],null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(InfoItem,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconStyled,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faLeaf\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"AREAS DE IMPACTO\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"ul\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Agrobiodiversidad\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Diversidad Cultural\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Pobreza y Desigualdad\")))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(SubSectionTitle,null,\"Casos de Estudio\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"CardsContainer\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"Card\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_applePark_jpg__WEBPACK_IMPORTED_MODULE_10___default.a}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Parque de manazana y Parque de Trigo, Tajikistan\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"span\",null,\"Descubre la historia de la conservacion de Descubra la historia de c\\xF3mo los agricultores ind\\xEDgenas en Tayikist\\xE1n est\\xE1n implementando el modelo de patrimonio biocultural para proteger su diversidad de trigo y manzana. El centro de origen de estos dos cultivos de importancia mundial se encuentra en las tierras de Asia Central de estos agricultores.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"https://andes.org.pe/wp-content/uploads/2020/07/Apple-and-Wheat-Park-Case-Study.pdf\",target:\"_blank\",rel:\"noopener\"},\"Ver Estudio\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"Card\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_estudioparquemaiz_png__WEBPACK_IMPORTED_MODULE_9___default.a}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Parque de Maiz, Peru\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"span\",null,\"Descubre la historia de la conservacion de Descubra la historia de c\\xF3mo los agricultores ind\\xEDgenas en Tayikist\\xE1n est\\xE1n implementando el modelo de patrimonio biocultural para proteger su diversidad de trigo y manzana. El centro de origen de estos dos cultivos de importancia mundial se encuentra en las tierras de Asia Central de estos agricultores.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"http://andes.org.pe/wp-content/uploads/2020/03/Maize-Park-Case-Study.pdf\",target:\"_blank\",rel:\"noopener\"},\"Ver Estudio\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(SubSectionTitle,null,\"Recursos adicionales\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(AditionalContainer,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"https://www.iied.org/\",target:\"_blank\",rel:\"noopener\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_territoriobio_png__WEBPACK_IMPORTED_MODULE_11___default.a})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"https://www.iied.org/\",target:\"_blank\",rel:\"noopener\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_territoriobio2_png__WEBPACK_IMPORTED_MODULE_12___default.a})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"https://www.iied.org/\",target:\"_blank\",rel:\"noopener\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_territoriobio3_jpg__WEBPACK_IMPORTED_MODULE_13___default.a})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"https://www.iied.org/\",target:\"_blank\",rel:\"noopener\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_estudioparquemaiz_png__WEBPACK_IMPORTED_MODULE_9___default.a}))));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(TerritoriosCulturales));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/andes-theme/src/TerritoriosCulturales.js\n");

/***/ })

})