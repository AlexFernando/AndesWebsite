webpackHotUpdate("andes",{

/***/ "./packages/andes-theme/src/components/TerritoriosCulturales.js":
/*!**********************************************************************!*\
  !*** ./packages/andes-theme/src/components/TerritoriosCulturales.js ***!
  \**********************************************************************/
/*! exports provided: SubSectionTitle, BriefSection, InfoItem, FontAwesomeIconStyled, FontAwesomeIconList, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SubSectionTitle\", function() { return SubSectionTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BriefSection\", function() { return BriefSection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InfoItem\", function() { return InfoItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FontAwesomeIconStyled\", function() { return FontAwesomeIconStyled; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FontAwesomeIconList\", function() { return FontAwesomeIconList; });\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var _Filosofia__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Filosofia */ \"./packages/andes-theme/src/components/Filosofia.js\");\n/* harmony import */ var _potatoPark__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./potatoPark */ \"./packages/andes-theme/src/components/potatoPark.js\");\n/* harmony import */ var _fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @fortawesome/react-fontawesome */ \"./node_modules/@fortawesome/react-fontawesome/index.es.js\");\n/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ \"./node_modules/@fortawesome/free-solid-svg-icons/index.es.js\");\n/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Dropdown */ \"./packages/andes-theme/src/components/Dropdown.js\");\n/* harmony import */ var _static_images_estudioparquemaiz_png__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../static/images/estudioparquemaiz.png */ \"./packages/andes-theme/src/static/images/estudioparquemaiz.png\");\n/* harmony import */ var _static_images_estudioparquemaiz_png__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_static_images_estudioparquemaiz_png__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _static_images_applePark_jpg__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../static/images/applePark.jpg */ \"./packages/andes-theme/src/static/images/applePark.jpg\");\n/* harmony import */ var _static_images_applePark_jpg__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_static_images_applePark_jpg__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _static_images_territoriobio_png__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../static/images/territoriobio.png */ \"./packages/andes-theme/src/static/images/territoriobio.png\");\n/* harmony import */ var _static_images_territoriobio_png__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_static_images_territoriobio_png__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _static_images_territoriobio2_png__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../static/images/territoriobio2.png */ \"./packages/andes-theme/src/static/images/territoriobio2.png\");\n/* harmony import */ var _static_images_territoriobio2_png__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_static_images_territoriobio2_png__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _static_images_territoriobio3_jpg__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../static/images/territoriobio3.jpg */ \"./packages/andes-theme/src/static/images/territoriobio3.jpg\");\n/* harmony import */ var _static_images_territoriobio3_jpg__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_static_images_territoriobio3_jpg__WEBPACK_IMPORTED_MODULE_13__);\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var SubSectionTitle=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"h2\",{target:\"e12k4zc20\",label:\"SubSectionTitle\"})( false?undefined:{name:\"13kq6dj\",styles:\"color:#44841a;padding:2rem 1rem 0 1rem;font-size:1.8rem;text-align:center;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var BriefSection=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e12k4zc21\",label:\"BriefSection\"})( false?undefined:{name:\"gtr356\",styles:\"display:flex;padding:2rem 4rem;@media(max-width:768px){flex-direction:column;padding:2rem 1rem;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var InfoItem=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e12k4zc22\",label:\"InfoItem\"})( false?undefined:{name:\"11uykv6\",styles:\"flex-basis:33.33%;padding:0 2rem;text-align:center;@media(max-width:768px){padding:1rem 1rem;}p{line-height:1.5;padding:0;color:#000;}h3{color:#44841a;padding:0 1rem 0 1rem;}ul{margin-top:2rem;padding-left:0;text-align:left;}li{list-style:none;margin-top:1rem;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var FontAwesomeIconStyled=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__[\"FontAwesomeIcon\"],{target:\"e12k4zc23\",label:\"FontAwesomeIconStyled\"})( false?undefined:{name:\"1e6kuzn\",styles:\"color:#44841a;font-size:3rem;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var FontAwesomeIconList=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__[\"FontAwesomeIcon\"],{target:\"e12k4zc24\",label:\"FontAwesomeIconList\"})( false?undefined:{name:\"rfgn5s\",styles:\"color:#44841a;margin-right:.5rem;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var AditionalContainer=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e12k4zc25\",label:\"AditionalContainer\"})( false?undefined:{name:\"1lfhjz3\",styles:\"display:flex;padding:1rem 2rem 4rem 2rem;justify-content:center;align-items:center;@media(max-width:768px){flex-direction:column;padding:0rem;}a{margin:0 1rem;background-color:#eaeade;padding:1rem;border-radius:1rem;@media(max-width:768px){margin:.5rem 0;}}img{max-width:100%;max-height:20vh;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FsZXhmL3JlYWN0XzIwMjAvYW5kZXMvcGFja2FnZXMvYW5kZXMtdGhlbWUvc3JjL2NvbXBvbmVudHMvVGVycml0b3Jpb3NDdWx0dXJhbGVzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBFcUMiLCJmaWxlIjoiL2hvbWUvYWxleGYvcmVhY3RfMjAyMC9hbmRlcy9wYWNrYWdlcy9hbmRlcy10aGVtZS9zcmMvY29tcG9uZW50cy9UZXJyaXRvcmlvc0N1bHR1cmFsZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtjb25uZWN0LCBjc3MsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IHtIZWFkQ29udGFpbmVyLCBUaXRsZSwgU3ViVGl0bGUsIFNlcGFyYXRvciwgTWFyZ2luVG9wQ29udGFpbmVyfSBmcm9tICcuL0ZpbG9zb2ZpYSc7XG5pbXBvcnQge1NlY3Rpb25Db250YWluZXIsIENhcmRzQ29udGFpbmVyLCBDYXJkLCBNYWluUGFyYWdyYXBofSBmcm9tICcuL3BvdGF0b1BhcmsnO1xuaW1wb3J0IHsgRm9udEF3ZXNvbWVJY29uIH0gZnJvbSAnQGZvcnRhd2Vzb21lL3JlYWN0LWZvbnRhd2Vzb21lJztcbmltcG9ydCB7IGZhUXVlc3Rpb25DaXJjbGUsIGZhTGlzdEFsdCwgZmFMZWFmLCBmYUFycm93QWx0Q2lyY2xlUmlnaHQgfSBmcm9tICdAZm9ydGF3ZXNvbWUvZnJlZS1zb2xpZC1zdmctaWNvbnMnO1xuaW1wb3J0IHsgVmVydGljYWxCb3JkZXIgfSBmcm9tICcuL0Ryb3Bkb3duJztcbmltcG9ydCBwYXJxdWVkZW1haXogZnJvbSAnLi4vc3RhdGljL2ltYWdlcy9lc3R1ZGlvcGFycXVlbWFpei5wbmcnO1xuaW1wb3J0IGFwcGxlcGFyayBmcm9tICcuLi9zdGF0aWMvaW1hZ2VzL2FwcGxlUGFyay5qcGcnO1xuaW1wb3J0IHRlcnJpdG9yaW8gZnJvbSAnLi4vc3RhdGljL2ltYWdlcy90ZXJyaXRvcmlvYmlvLnBuZyc7XG5pbXBvcnQgdGVycml0b3JpbzIgZnJvbSAnLi4vc3RhdGljL2ltYWdlcy90ZXJyaXRvcmlvYmlvMi5wbmcnO1xuaW1wb3J0IHRlcnJpdG9yaW8zIGZyb20gJy4uL3N0YXRpYy9pbWFnZXMvdGVycml0b3Jpb2JpbzMuanBnJztcblxuXG5cbmV4cG9ydCBjb25zdCBTdWJTZWN0aW9uVGl0bGUgPSBzdHlsZWQuaDJgXG4gICAgICAgY29sb3I6ICM0NDg0MWE7XG4gICAgICAgcGFkZGluZzogMnJlbSAxcmVtIDAgMXJlbTtcbiAgICAgICBmb250LXNpemU6IDEuOHJlbTtcbiAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5gO1xuXG5leHBvcnQgY29uc3QgQnJpZWZTZWN0aW9uID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBhZGRpbmc6IDJyZW0gNHJlbTtcblxuICAgIEBtZWRpYShtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIHBhZGRpbmc6IDJyZW0gMXJlbTtcbiAgICB9XG5gXG5cbmV4cG9ydCBjb25zdCBJbmZvSXRlbSA9IHN0eWxlZC5kaXZgXG4gICAgZmxleC1iYXNpczogMzMuMzMlO1xuICAgIHBhZGRpbmc6IDAgMnJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBAbWVkaWEobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICBwYWRkaW5nOiAxcmVtIDFyZW07XG4gICAgfVxuXG4gICAgcCB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIGNvbG9yOiAjMDAwO1xuICAgIH1cbiAgICBcbiAgICBoMyB7XG4gICAgICAgIGNvbG9yOiAjNDQ4NDFhO1xuICAgICAgICBwYWRkaW5nOiAwIDFyZW0gMCAxcmVtO1xuICAgIH1cblxuICAgIHVsIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMnJlbTtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIH1cblxuICAgIGxpIHtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgbWFyZ2luLXRvcDogMXJlbTtcbiAgICB9XG5gO1xuXG5leHBvcnQgY29uc3QgRm9udEF3ZXNvbWVJY29uU3R5bGVkID0gc3R5bGVkKEZvbnRBd2Vzb21lSWNvbilgXG4gICAgY29sb3I6ICM0NDg0MWE7XG4gICAgZm9udC1zaXplOiAzcmVtO1xuYDtcblxuZXhwb3J0IGNvbnN0IEZvbnRBd2Vzb21lSWNvbkxpc3QgPSBzdHlsZWQoRm9udEF3ZXNvbWVJY29uKWBcbiAgICBjb2xvcjogIzQ0ODQxYTtcbiAgICBtYXJnaW4tcmlnaHQ6IC41cmVtO1xuYDtcblxuY29uc3QgQWRpdGlvbmFsQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgICBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBhZGRpbmc6IDFyZW0gMnJlbSA0cmVtIDJyZW07XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgIEBtZWRpYShtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgcGFkZGluZzogMHJlbTtcbiAgICAgICAgfVxuXG4gICAgYXtcbiAgICAgICAgbWFyZ2luOiAwIDFyZW07XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlYWVhZGU7XG4gICAgICAgIHBhZGRpbmc6IDFyZW07XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDFyZW07XG5cbiAgICAgICAgQG1lZGlhKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgICAgIG1hcmdpbjogLjVyZW0gMDtcbiAgICAgICAgfVxuXG4gICAgfVxuICAgIGltZyB7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgbWF4LWhlaWdodDogMjB2aDtcbiAgICB9XG5gO1xuXG5jb25zdCBUZXJyaXRvcmlvc0N1bHR1cmFsZXMgPSAoe3N0YXRlfSkgPT4ge1xuICAgIHJldHVybiAoIFxuICAgICAgICA8TWFyZ2luVG9wQ29udGFpbmVyPlxuICAgICAgICAgICAgPEhlYWRDb250YWluZXI+XG4gICAgICAgICAgICAgICAgPFRpdGxlPlxuICAgICAgICAgICAgICAgICAgICBCaW9jdWx0dXJhbCBUZXJyaXRvcmllc1xuICAgICAgICAgICAgICAgIDwvVGl0bGU+XG4gICAgICAgICAgICAgICAgPFNlcGFyYXRvcj48L1NlcGFyYXRvcj5cbiAgICAgICAgICAgICAgICA8U3ViVGl0bGU+XG4gICAgICAgICAgICAgICAgICAgIEVuZG9nZW5vdXMgZGV2ZWxvcG1lbnQgPGJyPjwvYnI+IENvbnNlcnZhdGlvbiBvZiBiaW9kaXZlcnNpdHlcbiAgICAgICAgICAgICAgICA8L1N1YlRpdGxlPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICA8L0hlYWRDb250YWluZXI+XG5cbiAgICAgICAgICAgIDxTZWN0aW9uQ29udGFpbmVyPlxuICAgICAgICAgICAgICAgIDxNYWluUGFyYWdyYXBoPlxuICAgICAgICAgICAgICAgICAgICBMYW5kIHVzZSBtb3NhaWNzIGVuY29tcGFzc2luZyB0cmFkaXRpb25hbCBhbmQgaW5kaWdlbm91cyBsYW5kIHRlbnVyZSwgcHJvZHVjdGlvbiBhbmQgZXhjaGFuZ2Ugc3lzdGVtcywgY3VsdHVyYWwgaWRlbnRpdHksIGNvbW11bml0eSBvcmdhbml6YXRpb24sIGFuZCBzaW11bHRhbmVvdXMgb2JqZWN0aXZlcyBvZiBlbmRvZ2Vub3VzIGRldmVsb3BtZW50IGFuZCBiaW9kaXZlcnNpdHkgY29uc2VydmF0aW9uLlxuICAgICAgICAgICAgICAgIDwvTWFpblBhcmFncmFwaD5cbiAgICAgICAgICAgICAgICA8cD5cbiAgICAgICAgICAgICAgICAgICAgQXNvY2lhY2nDs24gQU5ERVMsIGluIGNvbGxhYm9yYXRpb24gd2l0aCBpbmRpZ2Vub3VzIGNvbW11bml0aWVzIGluIFBlcnUgYW5kIGFyb3VuZCB0aGUgd29ybGQsIGhhcyB3b3JrZWQgZHVyaW5nIHRoZSBsYXN0IHNldmVyYWwgZGVjYWRlcyB0byBkZWZpbmUsIGV4cGFuZCwgYW5kIHByb3RlY3QgYmlvY3VsdHVyYWwgaGVyaXRhZ2UgdGVycml0b3JpZXMuIFxuICAgICAgICAgICAgICAgIDwvcD5cblxuICAgICAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICAgICAgICBUaHJvdWdoIGxlYXJuaW5nIGV4Y2hhbmdlcyBmYWNpbGl0YXRlZCBieSB0aGUgSW50ZXJuYXRpb25hbCBOZXR3b3JrIG9mIE1vdW50YWluIEluZGlnZW5vdXMgUGVvcGxlcyAoSU5NSVApLCBpbmRpZ2Vub3VzIGNvbW11bml0aWVzIGluIGNvdW50cmllcyByYW5naW5nIGZyb20gS2VueWEgdG8gSW5kaWEgdG8gS3lyZ3l6c3RhbiBoYXZlIHdvcmtlZCB0byBpbXBsZW1lbnQgdGhlIGJpb2N1bHR1cmFsIGhlcml0YWdlIG1vZGVsLlxuICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgIDwvU2VjdGlvbkNvbnRhaW5lcj5cblxuICAgICAgICAgICAgPEJyaWVmU2VjdGlvbj5cblxuICAgICAgICAgICAgICAgIDxJbmZvSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxGb250QXdlc29tZUljb25TdHlsZWQgaWNvbj17ZmFRdWVzdGlvbkNpcmNsZX0vPlxuICAgICAgICAgICAgICAgICAgICA8aDM+V0hZPzwvaDM+XG4gICAgICAgICAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICAgICAgICAgICAgVGhlIGN1cnJlbnQgZXJvc2lvbiBvZiBnZW5ldGljIGFuZCBjdWx0dXJhbCBkaXZlcnNpdHkgaXMgdW5wcmVjZWRlbnRlZCwgYW5kIGl0IGlzIGJlY29taW5nIGluY3JlYXNpbmdseSBkaWZmaWN1bHQgZm9yIGNvbW11bml0aWVzIGFyb3VuZCB0aGUgd29ybGQgdG8gY29wZSB3aXRoIHRoZSBhZHZlcnNlIGltcGFjdHMgb2YgY2xpbWF0ZSBjaGFuZ2UsIHRocmVhdHMgdG8gZm9vZCBzZWN1cml0eSwgYW5kIHdhdGVyIHNjYXJjaXR5LiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICAgICAgICAgICAgQmlvY3VsdHVyYWwgaGVyaXRhZ2UgdGVycml0b3JpZXMsIHdoaWNoIHVzZSBpbnRlZ3JhdGVkIGxhbmRzY2FwZSBtYW5hZ2VtZW50LCBvZmZlciBhIGNsZWFyIG1vZGVsIGZvciBhZGFwdGluZyB0byBjaGFuZ2UuXG4gICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICA8L0luZm9JdGVtPlxuICAgICAgICAgICAgICAgIDxWZXJ0aWNhbEJvcmRlcj48L1ZlcnRpY2FsQm9yZGVyPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDxJbmZvSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvblN0eWxlZCBpY29uPXtmYUxpc3RBbHR9Lz5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxoMz5PVVIgQU1CSVRJT05TPC9oMz5cblxuICAgICAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGk+PEZvbnRBd2Vzb21lSWNvbkxpc3QgaWNvbj17ZmFBcnJvd0FsdENpcmNsZVJpZ2h0fS8+Q29uc2VydmUgYWdyb2Jpb2RpdmVyc2l0eTwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGk+PEZvbnRBd2Vzb21lSWNvbkxpc3QgaWNvbj17ZmFBcnJvd0FsdENpcmNsZVJpZ2h0fS8+U3RyZW5ndGhlbiBmb29kIHNlY3VyaXR5PC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5JbXByb3ZlIGxpdmVsaWhvb2RzPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5Qcm90ZWN0IGJpb2N1bHR1cmFsIGhlcml0YWdlPC9saT4gXG4gICAgICAgICAgICAgICAgICAgIDwvdWw+XG5cbiAgICAgICAgICAgICAgICA8L0luZm9JdGVtPlxuICAgICAgICAgICAgICAgIDxWZXJ0aWNhbEJvcmRlcj48L1ZlcnRpY2FsQm9yZGVyPlxuICAgICAgICAgICAgICAgIDxJbmZvSXRlbT5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvblN0eWxlZCBpY29uPXtmYUxlYWZ9Lz5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxoMz5BcmVhcyBvZiBpbXBhY3Q8L2gzPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGk+PEZvbnRBd2Vzb21lSWNvbkxpc3QgaWNvbj17ZmFBcnJvd0FsdENpcmNsZVJpZ2h0fS8+QWdyb2Jpb2RpdmVyc2l0eTwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGk+PEZvbnRBd2Vzb21lSWNvbkxpc3QgaWNvbj17ZmFBcnJvd0FsdENpcmNsZVJpZ2h0fS8+Q3VsdHVyYWwgZGl2ZXJzaXR5PC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5Qb3ZlcnR5IGFuZCBpbmVxdWFsaXR5PC9saT5cbiAgICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICA8L0luZm9JdGVtPlxuICAgICAgICAgICAgPC9CcmllZlNlY3Rpb24+XG5cbiAgICAgICAgICAgIDxTdWJTZWN0aW9uVGl0bGU+Q2FzZSBTdHVkaWVzPC9TdWJTZWN0aW9uVGl0bGU+XG4gICAgICAgICAgICA8Q2FyZHNDb250YWluZXI+XG4gICAgICAgICAgICAgICAgPENhcmQ+XG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXthcHBsZXBhcmt9IC8+XG5cbiAgICAgICAgICAgICAgICAgICAgPGgzPlBhcnF1ZSBkZSBtYW5hemFuYSB5IFBhcnF1ZSBkZSBUcmlnbywgVGFqaWtpc3RhbjwvaDM+XG5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICBEaXNjb3ZlciB0aGUgc3Rvcnkgb2YgaG93IGluZGlnZW5vdXMgZmFybWVycyBpbiBUYWppa2lzdGFuIGFyZSBpbXBsZW1lbnRpbmcgdGhlIGJpb2N1bHR1cmFsIGhlcml0YWdlIG1vZGVsIHRvIHByb3RlY3QgdGhlaXIgZGl2ZXJzaXR5IG9mIHdoZWF0IGFuZCBhcHBsZS4gVGhlIGNlbnRlciBvZiBvcmlnaW4gZm9yIHRoZXNlIHR3byB3b3JsZC1pbXBvcnRhbnQgY3JvcHMgaXMgaW4gdGhlIENlbnRyYWwgQXNpYW4gbGFuZHMgb2YgdGhlc2UgZmFybWVycy5cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuXG4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2FuZGVzLm9yZy5wZS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8wNy9BcHBsZS1hbmQtV2hlYXQtUGFyay1DYXNlLVN0dWR5LnBkZlwiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCIgPlZlciBFc3R1ZGlvPC9hPlxuICAgICAgICAgICAgICAgIDwvQ2FyZD5cblxuICAgICAgICAgICAgICAgIDxDYXJkPlxuICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17cGFycXVlZGVtYWl6fSAvPlxuXG4gICAgICAgICAgICAgICAgICAgIDxoMz5NYWl6ZSBQYXJrLCBQZXJ1PC9oMz5cblxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIERpc2NvdmVyIHRoZSBzdG9yeSBvZiBob3cgaW5kaWdlbm91cyBmYXJtZXJzIGluIFRhamlraXN0YW4gYXJlIGltcGxlbWVudGluZyB0aGUgYmlvY3VsdHVyYWwgaGVyaXRhZ2UgbW9kZWwgdG8gcHJvdGVjdCB0aGVpciBkaXZlcnNpdHkgb2Ygd2hlYXQgYW5kIGFwcGxlLiBUaGUgY2VudGVyIG9mIG9yaWdpbiBmb3IgdGhlc2UgdHdvIHdvcmxkLWltcG9ydGFudCBjcm9wcyBpcyBpbiB0aGUgQ2VudHJhbCBBc2lhbiBsYW5kcyBvZiB0aGVzZSBmYXJtZXJzLlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG5cbiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHA6Ly9hbmRlcy5vcmcucGUvd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDMvTWFpemUtUGFyay1DYXNlLVN0dWR5LnBkZlwiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCIgPlZlciBFc3R1ZGlvPC9hPlxuICAgICAgICAgICAgICAgIDwvQ2FyZD5cbiAgICAgICAgICAgIDwvQ2FyZHNDb250YWluZXI+XG5cbiAgICAgICAgICAgIDxTdWJTZWN0aW9uVGl0bGU+QWRkaXRpb25hbCBSZXNvdXJjZXM8L1N1YlNlY3Rpb25UaXRsZT5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgPEFkaXRpb25hbENvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly93d3cuaWllZC5vcmcvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXJcIiA+PGltZyBzcmM9e3RlcnJpdG9yaW99IC8+PC9hPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vd3d3LmlpZWQub3JnL1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCIgPjxpbWcgc3JjPXt0ZXJyaXRvcmlvMn0gLz48L2E+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly93d3cuaWllZC5vcmcvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXJcIiA+PGltZyBzcmM9e3RlcnJpdG9yaW8zfSAvPjwvYT5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL3d3dy5paWVkLm9yZy9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lclwiID48aW1nIHNyYz17cGFycXVlZGVtYWl6fSAvPjwvYT5cbiAgICAgICAgICAgIDwvQWRpdGlvbmFsQ29udGFpbmVyPlxuICAgICAgICA8L01hcmdpblRvcENvbnRhaW5lcj5cbiAgICApO1xufVxuIFxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChUZXJyaXRvcmlvc0N1bHR1cmFsZXMpOyJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var TerritoriosCulturales=(_ref)=>{var{state}=_ref;return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"MarginTopContainer\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"HeadContainer\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"Title\"],null,\"Biocultural Territories\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"Separator\"],null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"SubTitle\"],null,\"Endogenous development \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"br\",null),\" Conservation of biodiversity\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"SectionContainer\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"MainParagraph\"],null,\"Land use mosaics encompassing traditional and indigenous land tenure, production and exchange systems, cultural identity, community organization, and simultaneous objectives of endogenous development and biodiversity conservation.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,\"Asociaci\\xF3n ANDES, in collaboration with indigenous communities in Peru and around the world, has worked during the last several decades to define, expand, and protect biocultural heritage territories.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,\"Through learning exchanges facilitated by the International Network of Mountain Indigenous Peoples (INMIP), indigenous communities in countries ranging from Kenya to India to Kyrgyzstan have worked to implement the biocultural heritage model.\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(BriefSection,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(InfoItem,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconStyled,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faQuestionCircle\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"WHY?\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,\"The current erosion of genetic and cultural diversity is unprecedented, and it is becoming increasingly difficult for communities around the world to cope with the adverse impacts of climate change, threats to food security, and water scarcity.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,\"Biocultural heritage territories, which use integrated landscape management, offer a clear model for adapting to change.\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Dropdown__WEBPACK_IMPORTED_MODULE_8__[\"VerticalBorder\"],null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(InfoItem,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconStyled,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faListAlt\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"OUR AMBITIONS\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"ul\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Conserve agrobiodiversity\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Strengthen food security\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Improve livelihoods\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Protect biocultural heritage\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Dropdown__WEBPACK_IMPORTED_MODULE_8__[\"VerticalBorder\"],null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(InfoItem,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconStyled,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faLeaf\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Areas of impact\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"ul\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Agrobiodiversity\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Cultural diversity\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FontAwesomeIconList,{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__[\"faArrowAltCircleRight\"]}),\"Poverty and inequality\")))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(SubSectionTitle,null,\"Case Studies\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"CardsContainer\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"Card\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_applePark_jpg__WEBPACK_IMPORTED_MODULE_10___default.a}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Parque de manazana y Parque de Trigo, Tajikistan\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"span\",null,\"Discover the story of how indigenous farmers in Tajikistan are implementing the biocultural heritage model to protect their diversity of wheat and apple. The center of origin for these two world-important crops is in the Central Asian lands of these farmers.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"https://andes.org.pe/wp-content/uploads/2020/07/Apple-and-Wheat-Park-Case-Study.pdf\",target:\"_blank\",rel:\"noopener\"},\"Ver Estudio\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_5__[\"Card\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_estudioparquemaiz_png__WEBPACK_IMPORTED_MODULE_9___default.a}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Maize Park, Peru\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"span\",null,\"Discover the story of how indigenous farmers in Tajikistan are implementing the biocultural heritage model to protect their diversity of wheat and apple. The center of origin for these two world-important crops is in the Central Asian lands of these farmers.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"http://andes.org.pe/wp-content/uploads/2020/03/Maize-Park-Case-Study.pdf\",target:\"_blank\",rel:\"noopener\"},\"Ver Estudio\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(SubSectionTitle,null,\"Additional Resources\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(AditionalContainer,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"https://www.iied.org/\",target:\"_blank\",rel:\"noopener\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_territoriobio_png__WEBPACK_IMPORTED_MODULE_11___default.a})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"https://www.iied.org/\",target:\"_blank\",rel:\"noopener\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_territoriobio2_png__WEBPACK_IMPORTED_MODULE_12___default.a})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"https://www.iied.org/\",target:\"_blank\",rel:\"noopener\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_territoriobio3_jpg__WEBPACK_IMPORTED_MODULE_13___default.a})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"https://www.iied.org/\",target:\"_blank\",rel:\"noopener\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_estudioparquemaiz_png__WEBPACK_IMPORTED_MODULE_9___default.a}))));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(TerritoriosCulturales));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/andes-theme/src/components/TerritoriosCulturales.js\n");

/***/ })

})