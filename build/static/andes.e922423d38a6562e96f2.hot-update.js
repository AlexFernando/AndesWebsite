webpackHotUpdate("andes",{

/***/ "./packages/andes-theme/src/Menu.js":
/*!******************************************!*\
  !*** ./packages/andes-theme/src/Menu.js ***!
  \******************************************/
/*! exports provided: Border, EmptyContent, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Border\", function() { return Border; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EmptyContent\", function() { return EmptyContent; });\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Dropdown */ \"./packages/andes-theme/src/Dropdown.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var _LinkButton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./LinkButton */ \"./packages/andes-theme/src/LinkButton.js\");\n/* harmony import */ var _frontity_components_image__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @frontity/components/image */ \"./node_modules/@frontity/components/image.tsx\");\n/* harmony import */ var _images_logo_png__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./images/logo.png */ \"./packages/andes-theme/src/images/logo.png\");\n/* harmony import */ var _images_logo_png__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_images_logo_png__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _bgImage__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bgImage */ \"./packages/andes-theme/src/bgImage.js\");\n/* harmony import */ var _images_1_jpeg__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./images/1.jpeg */ \"./packages/andes-theme/src/images/1.jpeg\");\n/* harmony import */ var _images_1_jpeg__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_images_1_jpeg__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _images_link2_jpg__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./images/link2.jpg */ \"./packages/andes-theme/src/images/link2.jpg\");\n/* harmony import */ var _images_link2_jpg__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_images_link2_jpg__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _images_link3_jpg__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./images/link3.jpg */ \"./packages/andes-theme/src/images/link3.jpg\");\n/* harmony import */ var _images_link3_jpg__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_images_link3_jpg__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _images_link4_jpeg__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./images/link4.jpeg */ \"./packages/andes-theme/src/images/link4.jpeg\");\n/* harmony import */ var _images_link4_jpeg__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_images_link4_jpeg__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _Link__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Link */ \"./packages/andes-theme/src/Link.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var Navigation=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"nav\",{target:\"ewumqig0\",label:\"Navigation\"})( false?undefined:{name:\"1w9w4xz\",styles:\"display:flex;height:10vh;background-color:#fff;justify-content:space-between;align-items:center;border-bottom:2px solid #33333320;margin:0 auto;padding:0 auto;position:fixed;top:4vh;left:0;width:100%;@media (max-width:768px){height:12vh;position:absolute;top:0;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Toggle=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"ewumqig1\",label:\"Toggle\"})( false?undefined:{name:\"1hx3bme\",styles:\"display:none;height:100%;cursor:pointer;padding:0 10vw;@media (max-width:768px){display:flex;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Navbox=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"ewumqig2\",label:\"Navbox\"})(\"display:flex;height:100%;justify-content:space-between;align-items:center;@media (max-width:768px){flex-direction:column;position:fixed;width:100%;max-height:100%;justify-content:flex-start;align-items:flex-start;overflow-y:scroll;background-color:#fff;transition:all 0.3s ease-in;top:12vh;left:\",props=>props.open?\"-100%\":\"0\",\";}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var Hamburger=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"ewumqig3\",label:\"Hamburger\"})(\"background-color:#111;width:30px;height:3px;transition:all .3s linear;align-self:center;position:relative;transform:\",props=>props.open?\"rotate(-45deg)\":\"inherit\",\";::before,::after{width:30px;height:3px;background-color:#111;content:\\\"\\\";position:absolute;transition:all 0.3s linear;}::before{transform:\",props=>props.open?\"rotate(-90deg) translate(-10px, 0px)\":\"rotate(0deg)\",\";top:-10px;}::after{opacity:\",props=>props.open?\"0\":\"1\",\";transform:\",props=>props.open?\"rotate(90deg) \":\"rotate(0deg)\",\";top:10px;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var MobileBox=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"ewumqig4\",label:\"MobileBox\"})( false?undefined:{name:\"7uzqnc\",styles:\"display:none;@media (max-width:768px){display:flex;top:12vh;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FsZXhmL3JlYWN0XzIwMjAvYW5kZXMvcGFja2FnZXMvYW5kZXMtdGhlbWUvc3JjL01lbnUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUc0QiIsImZpbGUiOiIvaG9tZS9hbGV4Zi9yZWFjdF8yMDIwL2FuZGVzL3BhY2thZ2VzL2FuZGVzLXRoZW1lL3NyYy9NZW51LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgRHJvcGRvd24gZnJvbSBcIi4vRHJvcGRvd25cIjtcbmltcG9ydCB7Y3NzLCBzdHlsZWR9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IExpbmtCdXR0b24gZnJvbSAnLi9MaW5rQnV0dG9uJztcbmltcG9ydCBJbWFnZSBmcm9tIFwiQGZyb250aXR5L2NvbXBvbmVudHMvaW1hZ2VcIjtcbmltcG9ydCBsb2dvIGZyb20gJy4vaW1hZ2VzL2xvZ28ucG5nJztcbmltcG9ydCB7IEJ1dHRvbkFjdGlvbiB9IGZyb20gJy4vYmdJbWFnZSc7XG5pbXBvcnQgaW1nQW5kZXMgZnJvbSAnLi9pbWFnZXMvMS5qcGVnJztcbmltcG9ydCBpbWdSZXNlYXJjaCBmcm9tICcuL2ltYWdlcy9saW5rMi5qcGcnO1xuaW1wb3J0IGltZ1BsdXJpY3VsdHVyYWxpZGFkIGZyb20gJy4vaW1hZ2VzL2xpbmszLmpwZyc7XG5pbXBvcnQgaW1nTm90aWNpYXMgZnJvbSAnLi9pbWFnZXMvbGluazQuanBlZyc7XG5pbXBvcnQgTGluayBmcm9tIFwiLi9MaW5rXCI7XG5cbiBcbmNvbnN0IE5hdmlnYXRpb24gPSBzdHlsZWQubmF2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBoZWlnaHQ6IDEwdmg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICMzMzMzMzMyMDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgYXV0bztcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDR2aDtcbiAgbGVmdDowO1xuICB3aWR0aDogMTAwJTtcblxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBoZWlnaHQ6IDEydmg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgfVxuYFxuY29uc3QgVG9nZ2xlID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBhZGRpbmc6IDAgMTB2dztcblxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG5gXG5cbmNvbnN0IE5hdmJveCA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGhlaWdodDogMTAwJTtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBcblxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXgtaGVpZ2h0OiAxMDAlO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluO1xuICAgIHRvcDogMTJ2aDtcbiAgICBsZWZ0OiAke3Byb3BzID0+IChwcm9wcy5vcGVuID8gXCItMTAwJVwiIDogXCIwXCIpfTtcbiAgfVxuYFxuXG5jb25zdCBIYW1idXJnZXIgPSBzdHlsZWQuZGl2YFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTExO1xuICB3aWR0aDogMzBweDtcbiAgaGVpZ2h0OiAzcHg7XG4gIHRyYW5zaXRpb246IGFsbCAuM3MgbGluZWFyO1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgXG4gIHRyYW5zZm9ybTogJHtwcm9wcyA9PiAocHJvcHMub3BlbiA/IFwicm90YXRlKC00NWRlZylcIiA6IFwiaW5oZXJpdFwiKX07XG4gXG4gIDo6YmVmb3JlLFxuICA6OmFmdGVyIHtcbiAgICB3aWR0aDogMzBweDtcbiAgICBoZWlnaHQ6IDNweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTExO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGxpbmVhcjtcbiAgfVxuXG4gIDo6YmVmb3JlIHtcbiAgICB0cmFuc2Zvcm06ICR7cHJvcHMgPT5cbiAgICAgIHByb3BzLm9wZW4gPyBcInJvdGF0ZSgtOTBkZWcpIHRyYW5zbGF0ZSgtMTBweCwgMHB4KVwiIDogXCJyb3RhdGUoMGRlZylcIn07XG4gICAgdG9wOiAtMTBweDtcbiAgfVxuXG4gIDo6YWZ0ZXIge1xuICAgIG9wYWNpdHk6ICR7cHJvcHMgPT4gKHByb3BzLm9wZW4gPyBcIjBcIiA6IFwiMVwiKX07XG4gICAgdHJhbnNmb3JtOiAke3Byb3BzID0+IChwcm9wcy5vcGVuID8gXCJyb3RhdGUoOTBkZWcpIFwiIDogXCJyb3RhdGUoMGRlZylcIil9O1xuICAgIHRvcDogMTBweDtcbiAgfVxuYFxuXG5jb25zdCBNb2JpbGVCb3ggPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBub25lO1xuXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgdG9wOiAxMnZoO1xuICB9XG5gXG5cbmNvbnN0IEJ1dHRvbiA9IHN0eWxlZC5hYFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWFyZ2luOiAxcmVtIDByZW0gMXJlbSAxcmVtO1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgIGNvbG9yOiAjNjFhNTM0O1xuICAgXG4gICAgQG1lZGlhKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgbWFyZ2luOiAwcmVtIDJyZW0gMCAycmVtO1xuICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgICAgY29sb3I6ICMwMDA7XG4gICAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IEJvcmRlciA9IHN0eWxlZC5kaXZgXG4gIFxuICBjb250ZW50IDogXCJcIjtcbiAgaGVpZ2h0ICA6IDFweDtcbiAgd2lkdGggICA6IDEwMHZ3OyAgLyogb3IgMTAwcHggKi9cbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNEM0QzRDM7XG4gIG1hcmdpbjogMDtcbiAgXG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbmA7XG5cbmV4cG9ydCBjb25zdCBFbXB0eUNvbnRlbnQgPSBzdHlsZWQuZGl2YFxuICBjb250ZW50IDogXCJcIjtcbiAgaGVpZ2h0ICA6IDFweDtcbiAgd2lkdGggICA6IDEwMHZoOyAgLyogb3IgMTAwcHggKi9cbmA7XG5cbmNvbnN0IE1lbnUgPSAgKCkgPT4ge1xuXG4gIGNvbnN0IFtuYXZiYXJPcGVuLCBzZXROYXZiYXJPcGVuXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBcbiAgY29uc3QgW29wZW5BYm91dCwgc2V0T3BlbkFib3V0XSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW29wZW5BYm91dE1vYmlsZSwgc2V0T3BlbkFib3V0TW9iaWxlXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgXG4gIGNvbnN0IFtvcGVuUmVzZWFyY2gsIHNldE9wZW5SZXNlYXJjaF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtvcGVuUmVzZWFyY2hNb2JpbGUsIHNldE9wZW5SZXNlYXJjaE1PYmlsZV0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIFxuICBjb25zdCBbb3BlbkV2ZW50b3MsIHNldE9wZW5FdmVudG9zXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW29wZW5FdmVudG9zTW9iaWxlLCBzZXRPcGVuRXZlbnRvc01vYmlsZV0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgIDxOYXZpZ2F0aW9uPlxuICAgICAgXG4gICAgICA8TGluayBocmVmPVwiL1wiPjxJbWFnZSBzcmM9e2xvZ299IGhlaWdodD1cIjYwXCIgd2lkdGg9XCI2MFwiIC8+PC9MaW5rPlxuICAgICAgXG4gICAgICA8VG9nZ2xlXG4gICAgICAgIG5hdmJhck9wZW49e25hdmJhck9wZW59XG4gICAgICAgIG9uQ2xpY2s9eygpID0+IHNldE5hdmJhck9wZW4oIW5hdmJhck9wZW4pfVxuICAgICAgPlxuICAgICAgICB7bmF2YmFyT3BlbiA/IDxIYW1idXJnZXIgb3BlbiAvPiA6IDxIYW1idXJnZXIgLz59XG4gICAgICA8L1RvZ2dsZT4gIFxuICAgIFxuICAgICAge25hdmJhck9wZW4gPyAoXG4gICAgICAgIDw+XG4gICAgICAgIDxOYXZib3g+XG4gICAgICAgIFxuICAgICAgICAgICAgPEJvcmRlciAvPlxuICAgICAgICAgICAgPEJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBzZXRPcGVuQWJvdXRNb2JpbGUoIW9wZW5BYm91dE1vYmlsZSl9PlxuICAgICAgICAgICAgICBBbmRlc1xuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICA8Qm9yZGVyIC8+XG4gICAgICAgICAgICAgIHtvcGVuQWJvdXRNb2JpbGUgPyBcbiAgICAgICAgICAgICAgICA8TW9iaWxlQm94PlxuICAgICAgICAgICAgICAgICAgPERyb3Bkb3duXG4gICAgICAgICAgICAgICAgICAgIG9wZW4gPSB7b3BlbkFib3V0TW9iaWxlfVxuICAgICAgICAgICAgICAgICAgICBzZXRPcGVuID0ge3NldE9wZW5BYm91dE1vYmlsZX1cbiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucz17W1wiUXVpw6luZXMgc29tb3M/XCIsIFwiRmlsb3NvZmlhXCIsIFwiUGVyc29uYXNcIl19XG4gICAgICAgICAgICAgICAgICAgIHNlY29uZFRpdGxlID0geydRdWUgSGFjZW1vcz8nfVxuICAgICAgICAgICAgICAgICAgICBvcHRpb25zMj17W1wiVGVycml0b3Jpb3MgQmlvY3VsdHVyYWxlc1wiLCBcIkludmVzdGlnYWNpw7NuXCIsIFwiSW5jaWRlbmNpYXMgUG9sw610aWNhc1wiXX1cbiAgICAgICAgICAgICAgICAgICAgdGhpcmRUaXRsZSA9IHtbXCJEw7NuZGUgdHJhYmFqYW1vcz9cIl19XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMzPXtbXCJQYXJxdWUgZGUgbGEgUGFwYSAtIFBpc2FjXCIsIFwiXCIsIFwiUGFycXVlIGRlIE1hw616IC0gTGFyZXNcIiwgXCJQYXJxdWUgRXNwaXJpdHVhbCAtIFZpbGNhbm90YVwiLCBcIlByb2dyYW1hcyB5IFJlZGVzIEludGVybmFjaW9uYWxlc1wiXX1cbiAgICAgICAgICAgICAgICAgIC8+IFxuICAgICAgICAgICAgICAgIDwvTW9iaWxlQm94PlxuXG4gICAgICAgICAgICAgICAgOm51bGxcbiAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIHsvKiogXG4gICAgICAgICAgICA8QnV0dG9uIG9uQ2xpY2s9eygpID0+IHNldE9wZW5Qb3J0YWxNb2JpbGUoIW9wZW5Qb3J0YWxNb2JpbGUpfT5cbiAgICAgICAgICAgICAgSW52ZXN0aWdhY2nDs25cbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgPEJvcmRlciAvPlxuICAgICAgICAgICAgICB7b3BlblBvcnRhbE1vYmlsZSA/IFxuICAgICAgICAgICAgICAgICAgPE1vYmlsZUJveD5cbiAgICAgICAgICAgICAgICAgICAgPERyb3Bkb3duXG4gICAgICAgICAgICAgICAgICAgICAgb3BlbiA9IHtvcGVuUG9ydGFsTW9iaWxlfVxuICAgICAgICAgICAgICAgICAgICAgIHNldE9wZW4gPSB7c2V0T3BlblBvcnRhbE1vYmlsZX1cbiAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zPXtbXCJQcm9kdWNjaW9uZXNcIixcIlB1YmxpY2FjaW9uZXNcIiwgXCJEb2N1bWVudG9zIEluc3RpdHVjaW9uZXNcIiwgXCJFdmVudG9zXCJdfVxuICAgICAgICAgICAgICAgICAgICAvPiBcbiAgICAgICAgICAgICAgICAgIDwvTW9iaWxlQm94PlxuXG4gICAgICAgICAgICAgICAgICA6bnVsbFxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAqL31cblxuICAgICAgICAgICAgPEJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBzZXRPcGVuUmVzZWFyY2hNT2JpbGUoIW9wZW5SZXNlYXJjaE1vYmlsZSl9PlxuICAgICAgICAgICAgICBQbHVyaXZlcnNpZGFkXG4gICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgIDxCb3JkZXIgLz5cbiAgICAgICAgICAgICAge29wZW5SZXNlYXJjaE1vYmlsZSA/XG4gICAgICAgICAgICAgICAgPE1vYmlsZUJveD5cbiAgICAgICAgICAgICAgICAgIDxEcm9wZG93blxuICAgICAgICAgICAgICAgICAgICBvcGVuID0ge29wZW5SZXNlYXJjaE1vYmlsZX1cbiAgICAgICAgICAgICAgICAgICAgc2V0T3BlbiA9IHtzZXRPcGVuUmVzZWFyY2hNT2JpbGV9XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMgPSB7W1wiWWFjaGF5IEt1eWNoaVwiLCBcIlF1acOpbmVzIHNvbW9zP1wiXX1cbiAgICAgICAgICAgICAgICAgICAgc2Vjb25kVGl0bGUgPSB7J1F1ZSBIYWNlbW9zPyd9XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMyID0ge1tcIkN1cnNvc1wiLCBcIlBhc2FudMOtYXNcIiwgXCJJbnRlcmNhbWJpb3NcIl19XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMzID0ge1tcIkNhamEgZGUgaGVycmFtaWVudGFzXCJdfVxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgIDxCb3JkZXIgLz5cbiAgICAgICAgICAgICAgICA8L01vYmlsZUJveD4gXG4gICAgICAgICAgICAgICAgICA6IG51bGxcbiAgICAgICAgICAgICAgfSBcblxuICAgICAgICAgICAgPEJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBzZXRPcGVuRXZlbnRvc01vYmlsZSghb3BlbkV2ZW50b3NNb2JpbGUpfT5cbiAgICAgICAgICAgICAgUHVibGljYWNpb25lc1xuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICA8Qm9yZGVyIC8+XG4gICAgICAgICAgICAgIHtvcGVuRXZlbnRvc01vYmlsZSA/IFxuICAgICAgICAgICAgICAgIDxNb2JpbGVCb3g+XG4gICAgICAgICAgICAgICAgICA8RHJvcGRvd25cbiAgICAgICAgICAgICAgICAgICAgb3BlbiA9IHtvcGVuRXZlbnRvc01vYmlsZX1cbiAgICAgICAgICAgICAgICAgICAgc2V0T3BlbiA9IHtzZXRPcGVuRXZlbnRvc01vYmlsZX1cbiAgICAgICAgICAgICAgICAgICAgb3B0aW9uczI9e1tcIkJpYmxpb2dyYWbDrWFcIiwgXCJWaWRlb3NcIiwgXCJGb3Rvc1wiXX1cbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICA8L01vYmlsZUJveD5cbiAgICAgICAgICAgICAgICAgIDogbnVsbFxuICAgICAgICAgICAgICB9IFxuXG4gICAgICAgICAgPEJ1dHRvbkFjdGlvbiA+XG4gICAgICAgICAgICAgPExpbmtCdXR0b24gaHJlZj1cIi9cIj5Db250YWN0bzwvTGlua0J1dHRvbj5cbiAgICAgICAgICA8L0J1dHRvbkFjdGlvbj5cbiAgICAgICAgICAgICAgPGJyPjwvYnI+XG4gICAgICAgICAgICAgIDxicj48L2JyPlxuICAgICAgICAgICAgICA8YnI+PC9icj4gIFxuICAgICAgICAgICAgICA8YnI+PC9icj4gICAgIFxuICAgICAgICA8L05hdmJveD5cbiAgICAgICAgXG4gICAgICAgIDwvPlxuXG4gICAgICApIDogKFxuICAgICAgICA8TmF2Ym94IG9wZW4+XG4gICAgICBcbiAgICAgICAgICA8QnV0dG9uIG9uQ2xpY2s9eygpID0+IHNldE9wZW5BYm91dCghb3BlbkFib3V0KX0+QW5kZXM8L0J1dHRvbj4gXG4gICAgICAgICAgPEJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBzZXRPcGVuUmVzZWFyY2goIW9wZW5SZXNlYXJjaCl9PlBsdXJpdmVyc2lkYWQ8L0J1dHRvbj4gXG4gICAgICAgICAgPEJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBzZXRPcGVuRXZlbnRvcyghb3BlbkV2ZW50b3MpfT5QdWJsaWNhY2lvbmVzPC9CdXR0b24+IFxuICAgICAgICAgIDxCdXR0b25BY3Rpb24gPiA8TGlua0J1dHRvbiBocmVmPVwiL1wiPkNvbnRhY3RvPC9MaW5rQnV0dG9uPjwvQnV0dG9uQWN0aW9uPlxuXG4gICAgICAgIDwvTmF2Ym94PlxuICBcbiAgICAgICl9XG4gICAgICBcblxuICAgIDwvTmF2aWdhdGlvbj5cbiAgICB7LyoqIFxuICAgIHtvcGVuSG9tZSA/IFxuICAgICAgPERyb3Bkb3duXG4gICAgICAgIG9wZW4gPSB7b3BlbkhvbWV9XG4gICAgICAgIHNldE9wZW4gPSB7c2V0T3BlbkhvbWV9XG4gICAgICAgIG9wdGlvbnM9e1tcIlRvbWF0b1wiLCBcIkN1Y3VtYmVyXCIsIFwiUG90YXRvXCJdfVxuICAgICAgLz4gOiBudWxsXG4gICAgfVxuICAgICovfVxuXG4gICAge29wZW5BYm91dCA/IFxuICAgICAgPERyb3Bkb3duXG4gICAgICAgIG9wZW4gPSB7b3BlbkFib3V0fVxuICAgICAgICBzZXRPcGVuID0ge3NldE9wZW5BYm91dH1cbiAgICAgICAgb3B0aW9ucz17W1wiUXVpw6luZXMgc29tb3M/XCIsIFwiRmlsb3NvZmlhXCIsIFwiUGVyc29uYXNcIl19XG4gICAgICAgIHNlY29uZFRpdGxlID0geydRdWUgaGFjZW1vcz8nfVxuICAgICAgICBvcHRpb25zMj17W1wiVGVycml0b3Jpb3MgQ3VsdHVyYWxlc1wiLCBcIkludmVzdGlnYWNpw7NuXCIsIFwiSW5jaWRlbmNpYXMgUG9sw610aWNhc1wiXX1cbiAgICAgICAgdGhpcmRUaXRsZSA9IHtbXCJEw7NuZGUgdHJhYmFqYW1vcz9cIl19XG4gICAgICAgIG9wdGlvbnMzPXtbXCJQYXJxdWUgZGUgbGEgUGFwYSAtIFBpc2FjXCIsIFwiXCIsIFwiUGFycXVlIGRlIE1hw616IC0gTGFyZXNcIiwgXCJQYXJxdWUgRXNwaXJpdHVhbCAtIFZpbGNhbm90YVwiLCBcIlByb2dyYW1hcyB5IFJlZGVzIEludGVybmFjaW9uYWxlc1wiXX1cbiAgICAgICAgSW1hZ2VOYXYgPSB7aW1nQW5kZXN9XG4gICAgICAvPiAgOiBudWxsXG4gICAgfVxuXG4gICAgey8qKiAgICAge29wZW5Qb3J0YWwgPyBcbiAgICAgIDxEcm9wZG93blxuICAgICAgICBvcGVuID0ge29wZW5Qb3J0YWx9XG4gICAgICAgIHNldE9wZW4gPSB7c2V0T3BlblBvcnRhbH1cbiAgICAgICAgb3B0aW9ucz17W1wiUHJvZHVjY2lvbmVzXCIsXCJQdWJsaWNhY2lvbmVzXCIsIFwiRG9jdW1lbnRvcyBJbnN0aXR1Y2lvbmVzXCIsIFwiRXZlbnRvc1wiXX1cbiAgICAgICAgSW1hZ2VOYXYgPSB7aW1nUmVzZWFyY2h9XG4gICAgICAvPiAgOiBudWxsXG4gICAgfSovfVxuXG5cbiAgICB7b3BlblJlc2VhcmNoID8gXG4gICAgICA8RHJvcGRvd25cbiAgICAgICAgb3BlbiA9IHtvcGVuUmVzZWFyY2h9XG4gICAgICAgIHNldE9wZW4gPSB7c2V0T3BlblJlc2VhcmNofVxuICAgICAgICBvcHRpb25zID0ge1tcIllhY2hheSBLdXljaGlcIiwgXCJRdWnDqW5lcyBzb21vcz9cIl19XG4gICAgICAgIHNlY29uZFRpdGxlID0geydRdWUgSGFjZW1vcz8nfVxuICAgICAgICBvcHRpb25zMiA9IHtbXCJDdXJzb3NcIiwgXCJQYXNhbnTDrWFzXCIsIFwiSW50ZXJjYW1iaW9zXCJdfVxuICAgICAgICBvcHRpb25zMyA9IHtbXCJDYWphIGRlIGhlcnJhbWllbnRhc1wiXX1cbiAgICAgICAgSW1hZ2VOYXYgPSB7aW1nUGx1cmljdWx0dXJhbGlkYWR9XG4gICAgICAvPiAgOiBudWxsXG4gICAgfVxuXG4gICAge29wZW5FdmVudG9zID8gXG4gICAgICA8RHJvcGRvd25cbiAgICAgICAgb3BlbiA9IHtvcGVuRXZlbnRvc31cbiAgICAgICAgc2V0T3BlbiA9IHtzZXRPcGVuRXZlbnRvc31cbiAgICAgICAgb3B0aW9uczI9e1tcIkJpYmxpb2dyYWbDrWFcIiwgXCJWaWRlb3NcIiwgXCJGb3Rvc1wiXX1cbiAgICAgICAgSW1hZ2VOYXYgPSB7aW1nTm90aWNpYXN9XG4gICAgICAvPiAgOiBudWxsXG4gICAgfVxuICAgIHsvKiogXG4gICAge29wZW5Db250YWN0ID8gXG4gICAgICA8RHJvcGRvd25cbiAgICAgICAgb3BlbiA9IHtvcGVuQ29udGFjdH1cbiAgICAgICAgc2V0T3BlbiA9IHtzZXRPcGVuQ29udGFjdH1cbiAgICAgICAgb3B0aW9ucz17W1wiY29udGFjdDFcIiwgXCJjb250YWN0MlwiXX1cbiAgICAgIC8+ICA6IG51bGxcbiAgICB9KiovfVxuXG4gIDwvPlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBNZW51OyJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Button=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"a\",{target:\"ewumqig5\",label:\"Button\"})( false?undefined:{name:\"1inrmbj\",styles:\"display:flex;margin:1rem 0rem 1rem 1rem;font-size:1.2rem;color:#61a534;@media(min-width:768px){margin:0rem 2rem 0 2rem;font-size:1.5rem;color:#000;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Border=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"ewumqig6\",label:\"Border\"})( false?undefined:{name:\"1xhpguj\",styles:\"content:\\\"\\\";height:1px;width:100vw;border-bottom:1px solid #D3D3D3;margin:0;@media (min-width:768px){display:none;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var EmptyContent=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"ewumqig7\",label:\"EmptyContent\"})( false?undefined:{name:\"1aurmbm\",styles:\"content:\\\"\\\";height:1px;width:100vh;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Menu=()=>{var[navbarOpen,setNavbarOpen]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false);var[openAbout,setOpenAbout]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false);var[openAboutMobile,setOpenAboutMobile]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false);var[openResearch,setOpenResearch]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false);var[openResearchMobile,setOpenResearchMObile]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false);var[openEventos,setOpenEventos]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false);var[openEventosMobile,setOpenEventosMobile]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false);return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Navigation,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Link__WEBPACK_IMPORTED_MODULE_12__[\"default\"],{href:\"/\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_frontity_components_image__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{src:_images_logo_png__WEBPACK_IMPORTED_MODULE_6___default.a,height:\"60\",width:\"60\"})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Toggle,{navbarOpen:navbarOpen,onClick:()=>setNavbarOpen(!navbarOpen)},navbarOpen?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Hamburger,{open:true}):Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Hamburger,null)),navbarOpen?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Navbox,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Border,null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Button,{onClick:()=>setOpenAboutMobile(!openAboutMobile)},\"Andes\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Border,null),openAboutMobile?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(MobileBox,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Dropdown__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{open:openAboutMobile,setOpen:setOpenAboutMobile,options:[\"Quiénes somos?\",\"Filosofia\",\"Personas\"],secondTitle:'Que Hacemos?',options2:[\"Territorios Bioculturales\",\"Investigación\",\"Incidencias Políticas\"],thirdTitle:[\"Dónde trabajamos?\"],options3:[\"Parque de la Papa - Pisac\",\"\",\"Parque de Maíz - Lares\",\"Parque Espiritual - Vilcanota\",\"Programas y Redes Internacionales\"]})):null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Button,{onClick:()=>setOpenResearchMObile(!openResearchMobile)},\"Pluriversidad\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Border,null),openResearchMobile?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(MobileBox,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Dropdown__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{open:openResearchMobile,setOpen:setOpenResearchMObile,options:[\"Yachay Kuychi\",\"Quiénes somos?\"],secondTitle:'Que Hacemos?',options2:[\"Cursos\",\"Pasantías\",\"Intercambios\"],options3:[\"Caja de herramientas\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Border,null)):null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Button,{onClick:()=>setOpenEventosMobile(!openEventosMobile)},\"Publicaciones\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Border,null),openEventosMobile?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(MobileBox,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Dropdown__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{open:openEventosMobile,setOpen:setOpenEventosMobile,options2:[\"Bibliografía\",\"Videos\",\"Fotos\"]})):null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_bgImage__WEBPACK_IMPORTED_MODULE_7__[\"ButtonAction\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_LinkButton__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{href:\"/\"},\"Contacto\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"br\",null))):Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Navbox,{open:true},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Button,{onClick:()=>setOpenAbout(!openAbout)},\"Andes\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Button,{onClick:()=>setOpenResearch(!openResearch)},\"Pluriversidad\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Button,{onClick:()=>setOpenEventos(!openEventos)},\"Publicaciones\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_bgImage__WEBPACK_IMPORTED_MODULE_7__[\"ButtonAction\"],null,\" \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_LinkButton__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{href:\"/\"},\"Contacto\")))),openAbout?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Dropdown__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{open:openAbout,setOpen:setOpenAbout,options:[\"Quiénes somos?\",\"Filosofia\",\"Personas\"],secondTitle:'Que hacemos?',options2:[\"Territorios Culturales\",\"Investigación\",\"Incidencias Políticas\"],thirdTitle:[\"Dónde trabajamos?\"],options3:[\"Parque de la Papa - Pisac\",\"\",\"Parque de Maíz - Lares\",\"Parque Espiritual - Vilcanota\",\"Programas y Redes Internacionales\"],ImageNav:_images_1_jpeg__WEBPACK_IMPORTED_MODULE_8___default.a}):null,openResearch?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Dropdown__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{open:openResearch,setOpen:setOpenResearch,options:[\"Yachay Kuychi\",\"Quiénes somos?\"],secondTitle:'Que Hacemos?',options2:[\"Cursos\",\"Pasantías\",\"Intercambios\"],options3:[\"Caja de herramientas\"],ImageNav:_images_link3_jpg__WEBPACK_IMPORTED_MODULE_10___default.a}):null,openEventos?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Dropdown__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{open:openEventos,setOpen:setOpenEventos,options2:[\"Bibliografía\",\"Videos\",\"Fotos\"],ImageNav:_images_link4_jpeg__WEBPACK_IMPORTED_MODULE_11___default.a}):null);};/* harmony default export */ __webpack_exports__[\"default\"] = (Menu);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/andes-theme/src/Menu.js\n");

/***/ })

})