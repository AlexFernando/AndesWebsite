webpackHotUpdate("andes",{

/***/ "./packages/andes-theme/src/components/Politica.js":
/*!*********************************************************!*\
  !*** ./packages/andes-theme/src/components/Politica.js ***!
  \*********************************************************/
/*! exports provided: FixedCard, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FixedCard\", function() { return FixedCard; });\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Filosofia__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Filosofia */ \"./packages/andes-theme/src/components/Filosofia.js\");\n/* harmony import */ var _potatoPark__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./potatoPark */ \"./packages/andes-theme/src/components/potatoPark.js\");\n/* harmony import */ var _static_images_transgenicos_jpg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../static/images/transgenicos.jpg */ \"./packages/andes-theme/src/static/images/transgenicos.jpg\");\n/* harmony import */ var _static_images_transgenicos_jpg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_static_images_transgenicos_jpg__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _HomePage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./HomePage */ \"./packages/andes-theme/src/components/HomePage.js\");\n/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ \"./node_modules/@fortawesome/free-solid-svg-icons/index.es.js\");\n/* harmony import */ var _TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./TerritoriosCulturales */ \"./packages/andes-theme/src/components/TerritoriosCulturales.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var FixedCard=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1abe9200\",label:\"FixedCard\"})( false?undefined:{name:\"1limpl9\",styles:\"display:flex;flex-direction:column;justify-content:center;text-align:center;margin-top:4rem;border-radius:1rem;background-color:#f4f4f4;p{text-align:right;}img{border-radius:1rem 1rem 0 0;width:100%;height:100%;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FsZXhmL3JlYWN0XzIwMjAvYW5kZXMvcGFja2FnZXMvYW5kZXMtdGhlbWUvc3JjL2NvbXBvbmVudHMvUG9saXRpY2EuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBV21DIiwiZmlsZSI6Ii9ob21lL2FsZXhmL3JlYWN0XzIwMjAvYW5kZXMvcGFja2FnZXMvYW5kZXMtdGhlbWUvc3JjL2NvbXBvbmVudHMvUG9saXRpY2EuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtjb25uZWN0LCBzdHlsZWR9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IHtIZWFkQ29udGFpbmVyLCBUaXRsZSwgU3ViVGl0bGUsIFNlcGFyYXRvciwgTWFyZ2luVG9wQ29udGFpbmVyfSBmcm9tICcuL0ZpbG9zb2ZpYSc7XG5pbXBvcnQge1NlY3Rpb25Db250YWluZXIsIE1haW5QYXJhZ3JhcGgsIENhcmRzQ29udGFpbmVyLCBDYXJkfSBmcm9tICcuL3BvdGF0b1BhcmsnXG5pbXBvcnQgdHJhbnNnZW5pY29zIGZyb20gJy4uL3N0YXRpYy9pbWFnZXMvdHJhbnNnZW5pY29zLmpwZyc7XG5pbXBvcnQge1NlY3Rpb25UZXh0fSBmcm9tICcuL0hvbWVQYWdlJztcblxuaW1wb3J0IHtmYUxpc3RBbHQsIGZhQXJyb3dBbHRDaXJjbGVSaWdodCB9IGZyb20gJ0Bmb3J0YXdlc29tZS9mcmVlLXNvbGlkLXN2Zy1pY29ucyc7XG5pbXBvcnQge0ZvbnRBd2Vzb21lSWNvbkxpc3QsIEZvbnRBd2Vzb21lSWNvblN0eWxlZH0gZnJvbSAnLi9UZXJyaXRvcmlvc0N1bHR1cmFsZXMnO1xuXG5cbmV4cG9ydCBjb25zdCBGaXhlZENhcmQgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogNHJlbTtcbiAgICBib3JkZXItcmFkaXVzOiAxcmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7XG5cbiAgICBwIHtcbiAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgfVxuXG4gICAgaW1nIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMXJlbSAxcmVtIDAgMCA7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgfVxuYDtcblxuY29uc3QgU2VjdGlvbkluZm9MaXN0ID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBtYXJnaW46IDVyZW0gMDtcblxuICAgIGgzIHtcbiAgICAgICAgY29sb3I6ICM0NDg0MWE7XG4gICAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgIH1cblxuICAgIGRpdiB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgbWFyZ2luLXRvcDogMnJlbTtcblxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpe1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICB9XG5cbiAgICAgICAgbGkge1xuICAgICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogLjhyZW07XG4gICAgICAgIH1cbiAgICB9XG5gXG5cbmNvbnN0IElmcmFtZVN0eWxlZCA9IHN0eWxlZC5pZnJhbWVgXG4gICAgd2lkdGg6NDkwcHg7IFxuICAgIGhlaWdodDoyODBweDtcblxuICAgIFxuICAgIEBtZWRpYShtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIG1heC13aWR0aDoxMDAlOyBcbiAgICAgICAgbWF4LWhlaWdodDoxMDAlO1xuICAgIH0gXG5gO1xuXG5jb25zdCBQb2xpdGljYSA9ICh7c3RhdGV9KSA9PiB7XG4gICAgcmV0dXJuICggXG4gICAgICAgIDxNYXJnaW5Ub3BDb250YWluZXI+XG4gICAgICAgICAgICA8SGVhZENvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8VGl0bGU+XG4gICAgICAgICAgICAgICAgICAgIFBvbGl0aWNhbCBJbXBhY3RcbiAgICAgICAgICAgICAgICA8L1RpdGxlPlxuICAgICAgICAgICAgICAgIDxTZXBhcmF0b3I+PC9TZXBhcmF0b3I+XG4gICAgICAgICAgICAgICAgPFN1YlRpdGxlPlxuICAgICAgICAgICAgICAgICAgICBUcmFuc2dlbmljcyA8YnI+PC9icj4gQmlvcGlyYWN5XG4gICAgICAgICAgICAgICAgPC9TdWJUaXRsZT5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIDwvSGVhZENvbnRhaW5lcj5cblxuICAgICAgICAgICAgPFNlY3Rpb25Db250YWluZXI+XG4gICAgICAgICAgICAgICAgPE1haW5QYXJhZ3JhcGg+XG4gICAgICAgICAgICAgICAgICAgIEFOREVTIGludGVncmF0ZXMgbWF0dGVyIG9mIGV0aGljcyBhbmQgc29jaWFsIGFuZCBlbnZpcm9ubWVudGFsIGp1c3RpY2UgdG8gd29yaywgc3VjaCBhcyB0aGUgcmlnaHQgdG8gbGFuZCwgYmlvY3VsdHVyYWwgcHJvdG9jb2xzLCBpbnRlbGxlY3R1YWwgcHJvcGVydHkgcmlnaHRzLCBhbmQgdGhlIG5lZ290aWF0aW9uIG9mIGNvbW1vbiBpbnRlcmVzdHMgaW4gbG9jYWwsIG5hdGlvbmFsIGFuZCBpbnRlcm5hdGlvbmFsIHByb2Nlc3Nlcy5cbiAgICAgICAgICAgICAgICA8L01haW5QYXJhZ3JhcGg+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDxDYXJkPlxuICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17dHJhbnNnZW5pY29zfSAvPlxuXG4gICAgICAgICAgICAgICAgICAgIDxoMz5SZWplY3RpbmcgVHJhbnNnZW5pY3MgaW4gUGVydTwvaDM+XG5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICBBc29jaWFjacOzbiBBTkRFUywgYWxvbmcgd2l0aCB0aGUgQXNzb2NpYXRpb24gb2YgdGhlIENvbW11bml0aWVzIG9mIHRoZSBQb3RhdG8gUGFyaywgaGFzIHNpZ25lZCBhIGRlY2xhcmF0aW9uIGFnYWluc3QgdHJhbnNnZW5pY3MgaW4gUGVydS5cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly93d3cuc2VydmluZGkub3JnL2FjdHVhbGlkYWQvMjQvMDYvMjAyMC9zZW5vci12aXpjYXJyYS1lbC1wdWVibG8tcGVydWFuby1yZWNoYXphLWxvcy10cmFuc2dlbmljb3NcIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lclwiID5MRUVSIEhJU1RPUklBPC9hPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L0NhcmQ+XG5cbiAgICAgICAgICAgICAgICA8Q2FyZD5cbiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e3RyYW5zZ2VuaWNvc30gLz5cblxuICAgICAgICAgICAgICAgICAgICA8aDM+UmVqZWN0aW5nIFRyYW5zZ2VuaWNzIGluIFBlcnU8L2gzPlxuXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgQXNvY2lhY2nDs24gQU5ERVMsIGFsb25nIHdpdGggdGhlIEFzc29jaWF0aW9uIG9mIHRoZSBDb21tdW5pdGllcyBvZiB0aGUgUG90YXRvIFBhcmssIGhhcyBzaWduZWQgYSBkZWNsYXJhdGlvbiBhZ2FpbnN0IHRyYW5zZ2VuaWNzIGluIFBlcnUuXG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vd3d3LnNlcnZpbmRpLm9yZy9hY3R1YWxpZGFkLzI0LzA2LzIwMjAvc2Vub3Itdml6Y2FycmEtZWwtcHVlYmxvLXBlcnVhbm8tcmVjaGF6YS1sb3MtdHJhbnNnZW5pY29zXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXJcIiA+TEVFUiBISVNUT1JJQTwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9DYXJkPlxuXG4gICAgICAgICAgICA8L1NlY3Rpb25Db250YWluZXI+XG5cbiAgICAgICAgICAgIDxTZWN0aW9uVGV4dD5cblxuICAgICAgICAgICAgICAgIDxkaXY+ICBcbiAgICAgICAgICAgICAgICAgICAgPElmcmFtZVN0eWxlZFxuXG4gICAgICAgICAgICAgICAgICAgICAgICBzcmM9XCJodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC83OWFsUEc2RzV1Y1wiIFxuICAgICAgICAgICAgICAgICAgICAgICAgZnJhbWVib3JkZXI9XCIwXCIgXG4gICAgICAgICAgICAgICAgICAgICAgICBhbGxvdz1cImFjY2VsZXJvbWV0ZXI7IGF1dG9wbGF5OyBjbGlwYm9hcmQtd3JpdGU7IGVuY3J5cHRlZC1tZWRpYTsgZ3lyb3Njb3BlOyBwaWN0dXJlLWluLXBpY3R1cmVcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsbG93ZnVsbHNjcmVlbiBcbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8L0lmcmFtZVN0eWxlZD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDxkaXY+ICBcbiAgICAgICAgICAgICAgICAgICAgPGgxPk9jdG9iZXIgMTgsIDIwMjA8L2gxPiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxwPk9wZW4gTGV0dGVyIHRvIHRoZSBQcmVzaWRlbnQgb2YgdGhlIFJlcHVibGljIG9mIFBlcnUgLSBFeHRlbnNpb24gb2YgbW9yYXRvcmF0aWEgdG8gcHJvZHVjdGlvbiBvZiB0cmFuc2dlbmljczwvcD5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2FuZGVzLm9yZy5wZS93cC1jb250ZW50L3VwbG9hZHMvMjAyMC8xMC9DYXJ0YS1BYmllcnRhLWFsLVByZXNpZGVudGUtZGUtUGVydS1BbXBsaWFjaW9uLWRlLWxhLW1vcmF0b3JhdGlhLWEtdHJhbnNnZW5pY29zLTE4LTEwLTIwLnBkZlwiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCI+UkVBRCBNT1JFPC9hPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDxkaXY+ICBcbiAgICAgICAgICAgICAgICAgICAgPGgxPk9jdHVicmUgMjAsIDIwMjA8L2gxPiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxwPkNvbmdyZXNzIGV4dGVuZHMgbW9yYXRvcml1bSBvbiBHTSBwcm9kdWN0aW9uIHVudGlsIDIwMzUuPC9wPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vbGFyZXB1YmxpY2EucGUvZWNvbm9taWEvMjAyMC8xMC8yMC9jb25ncmVzby1hbXBsaWEtbW9yYXRvcmlhLWEtdHJhbnNnZW5pY29zLWhhc3RhLWRpY2llbWJyZS1kZWwtMjAzNS8/ZmJjbGlkPUl3QVIxNmZjempZcmVqcm9YTURVcFBRYVRKNHBRWjRWUDBuU3BBR2NEUlpYYkY1S056ZHJXU0RVOS0wRkFcIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lclwiPkxFRVIgTUFTPC9hPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvU2VjdGlvblRleHQ+XG5cbiAgICAgICAgPC9NYXJnaW5Ub3BDb250YWluZXI+XG4gICAgKTtcbn1cbiBcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoUG9saXRpY2EpOyJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var SectionInfoList=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1abe9201\",label:\"SectionInfoList\"})( false?undefined:{name:\"ze4qce\",styles:\"display:flex;flex-direction:column;justify-content:center;align-items:center;margin:5rem 0;h3{color:#44841a;font-size:1.5rem;}div{display:flex;justify-content:space-between;margin-top:2rem;@media (max-width:768px){flex-direction:column;justify-content:center;}li{list-style:none;font-size:1.2rem;margin-bottom:.8rem;}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FsZXhmL3JlYWN0XzIwMjAvYW5kZXMvcGFja2FnZXMvYW5kZXMtdGhlbWUvc3JjL2NvbXBvbmVudHMvUG9saXRpY2EuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0JrQyIsImZpbGUiOiIvaG9tZS9hbGV4Zi9yZWFjdF8yMDIwL2FuZGVzL3BhY2thZ2VzL2FuZGVzLXRoZW1lL3NyYy9jb21wb25lbnRzL1BvbGl0aWNhLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7Y29ubmVjdCwgc3R5bGVkfSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCB7SGVhZENvbnRhaW5lciwgVGl0bGUsIFN1YlRpdGxlLCBTZXBhcmF0b3IsIE1hcmdpblRvcENvbnRhaW5lcn0gZnJvbSAnLi9GaWxvc29maWEnO1xuaW1wb3J0IHtTZWN0aW9uQ29udGFpbmVyLCBNYWluUGFyYWdyYXBoLCBDYXJkc0NvbnRhaW5lciwgQ2FyZH0gZnJvbSAnLi9wb3RhdG9QYXJrJ1xuaW1wb3J0IHRyYW5zZ2VuaWNvcyBmcm9tICcuLi9zdGF0aWMvaW1hZ2VzL3RyYW5zZ2VuaWNvcy5qcGcnO1xuaW1wb3J0IHtTZWN0aW9uVGV4dH0gZnJvbSAnLi9Ib21lUGFnZSc7XG5cbmltcG9ydCB7ZmFMaXN0QWx0LCBmYUFycm93QWx0Q2lyY2xlUmlnaHQgfSBmcm9tICdAZm9ydGF3ZXNvbWUvZnJlZS1zb2xpZC1zdmctaWNvbnMnO1xuaW1wb3J0IHtGb250QXdlc29tZUljb25MaXN0LCBGb250QXdlc29tZUljb25TdHlsZWR9IGZyb20gJy4vVGVycml0b3Jpb3NDdWx0dXJhbGVzJztcblxuXG5leHBvcnQgY29uc3QgRml4ZWRDYXJkID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi10b3A6IDRyZW07XG4gICAgYm9yZGVyLXJhZGl1czogMXJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0O1xuXG4gICAgcCB7XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIH1cblxuICAgIGltZyB7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDFyZW0gMXJlbSAwIDAgO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgIH1cbmA7XG5cbmNvbnN0IFNlY3Rpb25JbmZvTGlzdCA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWFyZ2luOiA1cmVtIDA7XG5cbiAgICBoMyB7XG4gICAgICAgIGNvbG9yOiAjNDQ4NDFhO1xuICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICB9XG5cbiAgICBkaXYge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIG1hcmdpbi10b3A6IDJyZW07XG5cbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KXtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxpIHtcbiAgICAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC44cmVtO1xuICAgICAgICB9XG4gICAgfVxuYFxuXG5jb25zdCBJZnJhbWVTdHlsZWQgPSBzdHlsZWQuaWZyYW1lYFxuICAgIHdpZHRoOjQ5MHB4OyBcbiAgICBoZWlnaHQ6MjgwcHg7XG5cbiAgICBcbiAgICBAbWVkaWEobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICBtYXgtd2lkdGg6MTAwJTsgXG4gICAgICAgIG1heC1oZWlnaHQ6MTAwJTtcbiAgICB9IFxuYDtcblxuY29uc3QgUG9saXRpY2EgPSAoe3N0YXRlfSkgPT4ge1xuICAgIHJldHVybiAoIFxuICAgICAgICA8TWFyZ2luVG9wQ29udGFpbmVyPlxuICAgICAgICAgICAgPEhlYWRDb250YWluZXI+XG4gICAgICAgICAgICAgICAgPFRpdGxlPlxuICAgICAgICAgICAgICAgICAgICBQb2xpdGljYWwgSW1wYWN0XG4gICAgICAgICAgICAgICAgPC9UaXRsZT5cbiAgICAgICAgICAgICAgICA8U2VwYXJhdG9yPjwvU2VwYXJhdG9yPlxuICAgICAgICAgICAgICAgIDxTdWJUaXRsZT5cbiAgICAgICAgICAgICAgICAgICAgVHJhbnNnZW5pY3MgPGJyPjwvYnI+IEJpb3BpcmFjeVxuICAgICAgICAgICAgICAgIDwvU3ViVGl0bGU+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICA8L0hlYWRDb250YWluZXI+XG5cbiAgICAgICAgICAgIDxTZWN0aW9uQ29udGFpbmVyPlxuICAgICAgICAgICAgICAgIDxNYWluUGFyYWdyYXBoPlxuICAgICAgICAgICAgICAgICAgICBBTkRFUyBpbnRlZ3JhdGVzIG1hdHRlciBvZiBldGhpY3MgYW5kIHNvY2lhbCBhbmQgZW52aXJvbm1lbnRhbCBqdXN0aWNlIHRvIHdvcmssIHN1Y2ggYXMgdGhlIHJpZ2h0IHRvIGxhbmQsIGJpb2N1bHR1cmFsIHByb3RvY29scywgaW50ZWxsZWN0dWFsIHByb3BlcnR5IHJpZ2h0cywgYW5kIHRoZSBuZWdvdGlhdGlvbiBvZiBjb21tb24gaW50ZXJlc3RzIGluIGxvY2FsLCBuYXRpb25hbCBhbmQgaW50ZXJuYXRpb25hbCBwcm9jZXNzZXMuXG4gICAgICAgICAgICAgICAgPC9NYWluUGFyYWdyYXBoPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICA8Q2FyZD5cbiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e3RyYW5zZ2VuaWNvc30gLz5cblxuICAgICAgICAgICAgICAgICAgICA8aDM+UmVqZWN0aW5nIFRyYW5zZ2VuaWNzIGluIFBlcnU8L2gzPlxuXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgQXNvY2lhY2nDs24gQU5ERVMsIGFsb25nIHdpdGggdGhlIEFzc29jaWF0aW9uIG9mIHRoZSBDb21tdW5pdGllcyBvZiB0aGUgUG90YXRvIFBhcmssIGhhcyBzaWduZWQgYSBkZWNsYXJhdGlvbiBhZ2FpbnN0IHRyYW5zZ2VuaWNzIGluIFBlcnUuXG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vd3d3LnNlcnZpbmRpLm9yZy9hY3R1YWxpZGFkLzI0LzA2LzIwMjAvc2Vub3Itdml6Y2FycmEtZWwtcHVlYmxvLXBlcnVhbm8tcmVjaGF6YS1sb3MtdHJhbnNnZW5pY29zXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXJcIiA+TEVFUiBISVNUT1JJQTwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9DYXJkPlxuXG4gICAgICAgICAgICAgICAgPENhcmQ+XG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXt0cmFuc2dlbmljb3N9IC8+XG5cbiAgICAgICAgICAgICAgICAgICAgPGgzPlJlamVjdGluZyBUcmFuc2dlbmljcyBpbiBQZXJ1PC9oMz5cblxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIEFzb2NpYWNpw7NuIEFOREVTLCBhbG9uZyB3aXRoIHRoZSBBc3NvY2lhdGlvbiBvZiB0aGUgQ29tbXVuaXRpZXMgb2YgdGhlIFBvdGF0byBQYXJrLCBoYXMgc2lnbmVkIGEgZGVjbGFyYXRpb24gYWdhaW5zdCB0cmFuc2dlbmljcyBpbiBQZXJ1LlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL3d3dy5zZXJ2aW5kaS5vcmcvYWN0dWFsaWRhZC8yNC8wNi8yMDIwL3Nlbm9yLXZpemNhcnJhLWVsLXB1ZWJsby1wZXJ1YW5vLXJlY2hhemEtbG9zLXRyYW5zZ2VuaWNvc1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCIgPkxFRVIgSElTVE9SSUE8L2E+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvQ2FyZD5cblxuICAgICAgICAgICAgPC9TZWN0aW9uQ29udGFpbmVyPlxuXG4gICAgICAgICAgICA8U2VjdGlvblRleHQ+XG5cbiAgICAgICAgICAgICAgICA8ZGl2PiAgXG4gICAgICAgICAgICAgICAgICAgIDxJZnJhbWVTdHlsZWRcblxuICAgICAgICAgICAgICAgICAgICAgICAgc3JjPVwiaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvNzlhbFBHNkc1dWNcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgIGZyYW1lYm9yZGVyPVwiMFwiIFxuICAgICAgICAgICAgICAgICAgICAgICAgYWxsb3c9XCJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgY2xpcGJvYXJkLXdyaXRlOyBlbmNyeXB0ZWQtbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlXCIgXG4gICAgICAgICAgICAgICAgICAgICAgICBhbGxvd2Z1bGxzY3JlZW4gXG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPC9JZnJhbWVTdHlsZWQ+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2PiAgXG4gICAgICAgICAgICAgICAgICAgIDxoMT5PY3RvYmVyIDE4LCAyMDIwPC9oMT4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8cD5PcGVuIExldHRlciB0byB0aGUgUHJlc2lkZW50IG9mIHRoZSBSZXB1YmxpYyBvZiBQZXJ1IC0gRXh0ZW5zaW9uIG9mIG1vcmF0b3JhdGlhIHRvIHByb2R1Y3Rpb24gb2YgdHJhbnNnZW5pY3M8L3A+XG4gICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly9hbmRlcy5vcmcucGUvd3AtY29udGVudC91cGxvYWRzLzIwMjAvMTAvQ2FydGEtQWJpZXJ0YS1hbC1QcmVzaWRlbnRlLWRlLVBlcnUtQW1wbGlhY2lvbi1kZS1sYS1tb3JhdG9yYXRpYS1hLXRyYW5zZ2VuaWNvcy0xOC0xMC0yMC5wZGZcIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lclwiPlJFQUQgTU9SRTwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2PiAgXG4gICAgICAgICAgICAgICAgICAgIDxoMT5PY3R1YnJlIDIwLCAyMDIwPC9oMT4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8cD5Db25ncmVzcyBleHRlbmRzIG1vcmF0b3JpdW0gb24gR00gcHJvZHVjdGlvbiB1bnRpbCAyMDM1LjwvcD5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2xhcmVwdWJsaWNhLnBlL2Vjb25vbWlhLzIwMjAvMTAvMjAvY29uZ3Jlc28tYW1wbGlhLW1vcmF0b3JpYS1hLXRyYW5zZ2VuaWNvcy1oYXN0YS1kaWNpZW1icmUtZGVsLTIwMzUvP2ZiY2xpZD1Jd0FSMTZmY3pqWXJlanJvWE1EVXBQUWFUSjRwUVo0VlAwblNwQUdjRFJaWGJGNUtOemRyV1NEVTktMEZBXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXJcIj5MRUVSIE1BUzwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L1NlY3Rpb25UZXh0PlxuXG4gICAgICAgIDwvTWFyZ2luVG9wQ29udGFpbmVyPlxuICAgICk7XG59XG4gXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFBvbGl0aWNhKTsiXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var IframeStyled=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"iframe\",{target:\"e1abe9202\",label:\"IframeStyled\"})( false?undefined:{name:\"1mlju1u\",styles:\"width:490px;height:280px;@media(max-width:768px){max-width:100%;max-height:100%;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FsZXhmL3JlYWN0XzIwMjAvYW5kZXMvcGFja2FnZXMvYW5kZXMtdGhlbWUvc3JjL2NvbXBvbmVudHMvUG9saXRpY2EuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkRrQyIsImZpbGUiOiIvaG9tZS9hbGV4Zi9yZWFjdF8yMDIwL2FuZGVzL3BhY2thZ2VzL2FuZGVzLXRoZW1lL3NyYy9jb21wb25lbnRzL1BvbGl0aWNhLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7Y29ubmVjdCwgc3R5bGVkfSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCB7SGVhZENvbnRhaW5lciwgVGl0bGUsIFN1YlRpdGxlLCBTZXBhcmF0b3IsIE1hcmdpblRvcENvbnRhaW5lcn0gZnJvbSAnLi9GaWxvc29maWEnO1xuaW1wb3J0IHtTZWN0aW9uQ29udGFpbmVyLCBNYWluUGFyYWdyYXBoLCBDYXJkc0NvbnRhaW5lciwgQ2FyZH0gZnJvbSAnLi9wb3RhdG9QYXJrJ1xuaW1wb3J0IHRyYW5zZ2VuaWNvcyBmcm9tICcuLi9zdGF0aWMvaW1hZ2VzL3RyYW5zZ2VuaWNvcy5qcGcnO1xuaW1wb3J0IHtTZWN0aW9uVGV4dH0gZnJvbSAnLi9Ib21lUGFnZSc7XG5cbmltcG9ydCB7ZmFMaXN0QWx0LCBmYUFycm93QWx0Q2lyY2xlUmlnaHQgfSBmcm9tICdAZm9ydGF3ZXNvbWUvZnJlZS1zb2xpZC1zdmctaWNvbnMnO1xuaW1wb3J0IHtGb250QXdlc29tZUljb25MaXN0LCBGb250QXdlc29tZUljb25TdHlsZWR9IGZyb20gJy4vVGVycml0b3Jpb3NDdWx0dXJhbGVzJztcblxuXG5leHBvcnQgY29uc3QgRml4ZWRDYXJkID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi10b3A6IDRyZW07XG4gICAgYm9yZGVyLXJhZGl1czogMXJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0O1xuXG4gICAgcCB7XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIH1cblxuICAgIGltZyB7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDFyZW0gMXJlbSAwIDAgO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgIH1cbmA7XG5cbmNvbnN0IFNlY3Rpb25JbmZvTGlzdCA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWFyZ2luOiA1cmVtIDA7XG5cbiAgICBoMyB7XG4gICAgICAgIGNvbG9yOiAjNDQ4NDFhO1xuICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICB9XG5cbiAgICBkaXYge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIG1hcmdpbi10b3A6IDJyZW07XG5cbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KXtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxpIHtcbiAgICAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC44cmVtO1xuICAgICAgICB9XG4gICAgfVxuYFxuXG5jb25zdCBJZnJhbWVTdHlsZWQgPSBzdHlsZWQuaWZyYW1lYFxuICAgIHdpZHRoOjQ5MHB4OyBcbiAgICBoZWlnaHQ6MjgwcHg7XG5cbiAgICBcbiAgICBAbWVkaWEobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICBtYXgtd2lkdGg6MTAwJTsgXG4gICAgICAgIG1heC1oZWlnaHQ6MTAwJTtcbiAgICB9IFxuYDtcblxuY29uc3QgUG9saXRpY2EgPSAoe3N0YXRlfSkgPT4ge1xuICAgIHJldHVybiAoIFxuICAgICAgICA8TWFyZ2luVG9wQ29udGFpbmVyPlxuICAgICAgICAgICAgPEhlYWRDb250YWluZXI+XG4gICAgICAgICAgICAgICAgPFRpdGxlPlxuICAgICAgICAgICAgICAgICAgICBQb2xpdGljYWwgSW1wYWN0XG4gICAgICAgICAgICAgICAgPC9UaXRsZT5cbiAgICAgICAgICAgICAgICA8U2VwYXJhdG9yPjwvU2VwYXJhdG9yPlxuICAgICAgICAgICAgICAgIDxTdWJUaXRsZT5cbiAgICAgICAgICAgICAgICAgICAgVHJhbnNnZW5pY3MgPGJyPjwvYnI+IEJpb3BpcmFjeVxuICAgICAgICAgICAgICAgIDwvU3ViVGl0bGU+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICA8L0hlYWRDb250YWluZXI+XG5cbiAgICAgICAgICAgIDxTZWN0aW9uQ29udGFpbmVyPlxuICAgICAgICAgICAgICAgIDxNYWluUGFyYWdyYXBoPlxuICAgICAgICAgICAgICAgICAgICBBTkRFUyBpbnRlZ3JhdGVzIG1hdHRlciBvZiBldGhpY3MgYW5kIHNvY2lhbCBhbmQgZW52aXJvbm1lbnRhbCBqdXN0aWNlIHRvIHdvcmssIHN1Y2ggYXMgdGhlIHJpZ2h0IHRvIGxhbmQsIGJpb2N1bHR1cmFsIHByb3RvY29scywgaW50ZWxsZWN0dWFsIHByb3BlcnR5IHJpZ2h0cywgYW5kIHRoZSBuZWdvdGlhdGlvbiBvZiBjb21tb24gaW50ZXJlc3RzIGluIGxvY2FsLCBuYXRpb25hbCBhbmQgaW50ZXJuYXRpb25hbCBwcm9jZXNzZXMuXG4gICAgICAgICAgICAgICAgPC9NYWluUGFyYWdyYXBoPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICA8Q2FyZD5cbiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e3RyYW5zZ2VuaWNvc30gLz5cblxuICAgICAgICAgICAgICAgICAgICA8aDM+UmVqZWN0aW5nIFRyYW5zZ2VuaWNzIGluIFBlcnU8L2gzPlxuXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgQXNvY2lhY2nDs24gQU5ERVMsIGFsb25nIHdpdGggdGhlIEFzc29jaWF0aW9uIG9mIHRoZSBDb21tdW5pdGllcyBvZiB0aGUgUG90YXRvIFBhcmssIGhhcyBzaWduZWQgYSBkZWNsYXJhdGlvbiBhZ2FpbnN0IHRyYW5zZ2VuaWNzIGluIFBlcnUuXG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vd3d3LnNlcnZpbmRpLm9yZy9hY3R1YWxpZGFkLzI0LzA2LzIwMjAvc2Vub3Itdml6Y2FycmEtZWwtcHVlYmxvLXBlcnVhbm8tcmVjaGF6YS1sb3MtdHJhbnNnZW5pY29zXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXJcIiA+TEVFUiBISVNUT1JJQTwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9DYXJkPlxuXG4gICAgICAgICAgICAgICAgPENhcmQ+XG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXt0cmFuc2dlbmljb3N9IC8+XG5cbiAgICAgICAgICAgICAgICAgICAgPGgzPlJlamVjdGluZyBUcmFuc2dlbmljcyBpbiBQZXJ1PC9oMz5cblxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIEFzb2NpYWNpw7NuIEFOREVTLCBhbG9uZyB3aXRoIHRoZSBBc3NvY2lhdGlvbiBvZiB0aGUgQ29tbXVuaXRpZXMgb2YgdGhlIFBvdGF0byBQYXJrLCBoYXMgc2lnbmVkIGEgZGVjbGFyYXRpb24gYWdhaW5zdCB0cmFuc2dlbmljcyBpbiBQZXJ1LlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL3d3dy5zZXJ2aW5kaS5vcmcvYWN0dWFsaWRhZC8yNC8wNi8yMDIwL3Nlbm9yLXZpemNhcnJhLWVsLXB1ZWJsby1wZXJ1YW5vLXJlY2hhemEtbG9zLXRyYW5zZ2VuaWNvc1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCIgPkxFRVIgSElTVE9SSUE8L2E+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvQ2FyZD5cblxuICAgICAgICAgICAgPC9TZWN0aW9uQ29udGFpbmVyPlxuXG4gICAgICAgICAgICA8U2VjdGlvblRleHQ+XG5cbiAgICAgICAgICAgICAgICA8ZGl2PiAgXG4gICAgICAgICAgICAgICAgICAgIDxJZnJhbWVTdHlsZWRcblxuICAgICAgICAgICAgICAgICAgICAgICAgc3JjPVwiaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvNzlhbFBHNkc1dWNcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgIGZyYW1lYm9yZGVyPVwiMFwiIFxuICAgICAgICAgICAgICAgICAgICAgICAgYWxsb3c9XCJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgY2xpcGJvYXJkLXdyaXRlOyBlbmNyeXB0ZWQtbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlXCIgXG4gICAgICAgICAgICAgICAgICAgICAgICBhbGxvd2Z1bGxzY3JlZW4gXG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPC9JZnJhbWVTdHlsZWQ+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2PiAgXG4gICAgICAgICAgICAgICAgICAgIDxoMT5PY3RvYmVyIDE4LCAyMDIwPC9oMT4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8cD5PcGVuIExldHRlciB0byB0aGUgUHJlc2lkZW50IG9mIHRoZSBSZXB1YmxpYyBvZiBQZXJ1IC0gRXh0ZW5zaW9uIG9mIG1vcmF0b3JhdGlhIHRvIHByb2R1Y3Rpb24gb2YgdHJhbnNnZW5pY3M8L3A+XG4gICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly9hbmRlcy5vcmcucGUvd3AtY29udGVudC91cGxvYWRzLzIwMjAvMTAvQ2FydGEtQWJpZXJ0YS1hbC1QcmVzaWRlbnRlLWRlLVBlcnUtQW1wbGlhY2lvbi1kZS1sYS1tb3JhdG9yYXRpYS1hLXRyYW5zZ2VuaWNvcy0xOC0xMC0yMC5wZGZcIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lclwiPlJFQUQgTU9SRTwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2PiAgXG4gICAgICAgICAgICAgICAgICAgIDxoMT5PY3R1YnJlIDIwLCAyMDIwPC9oMT4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8cD5Db25ncmVzcyBleHRlbmRzIG1vcmF0b3JpdW0gb24gR00gcHJvZHVjdGlvbiB1bnRpbCAyMDM1LjwvcD5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2xhcmVwdWJsaWNhLnBlL2Vjb25vbWlhLzIwMjAvMTAvMjAvY29uZ3Jlc28tYW1wbGlhLW1vcmF0b3JpYS1hLXRyYW5zZ2VuaWNvcy1oYXN0YS1kaWNpZW1icmUtZGVsLTIwMzUvP2ZiY2xpZD1Jd0FSMTZmY3pqWXJlanJvWE1EVXBQUWFUSjRwUVo0VlAwblNwQUdjRFJaWGJGNUtOemRyV1NEVTktMEZBXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXJcIj5MRUVSIE1BUzwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L1NlY3Rpb25UZXh0PlxuXG4gICAgICAgIDwvTWFyZ2luVG9wQ29udGFpbmVyPlxuICAgICk7XG59XG4gXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFBvbGl0aWNhKTsiXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Politica=(_ref)=>{var{state}=_ref;return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_3__[\"MarginTopContainer\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_3__[\"HeadContainer\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_3__[\"Title\"],null,\"Political Impact\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_3__[\"Separator\"],null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_3__[\"SubTitle\"],null,\"Transgenics \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"br\",null),\" Biopiracy\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_4__[\"SectionContainer\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_4__[\"MainParagraph\"],null,\"ANDES integrates matter of ethics and social and environmental justice to work, such as the right to land, biocultural protocols, intellectual property rights, and the negotiation of common interests in local, national and international processes.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_4__[\"Card\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"img\",{src:_static_images_transgenicos_jpg__WEBPACK_IMPORTED_MODULE_5___default.a}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"h3\",null,\"Rejecting Transgenics in Peru\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"span\",null,\"Asociaci\\xF3n ANDES, along with the Association of the Communities of the Potato Park, has signed a declaration against transgenics in Peru.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"a\",{href:\"https://www.servindi.org/actualidad/24/06/2020/senor-vizcarra-el-pueblo-peruano-rechaza-los-transgenicos\",target:\"_blank\",rel:\"noopener\"},\"LEER HISTORIA\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(_potatoPark__WEBPACK_IMPORTED_MODULE_4__[\"Card\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"img\",{src:_static_images_transgenicos_jpg__WEBPACK_IMPORTED_MODULE_5___default.a}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"h3\",null,\"Rejecting Transgenics in Peru\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"span\",null,\"Asociaci\\xF3n ANDES, along with the Association of the Communities of the Potato Park, has signed a declaration against transgenics in Peru.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"a\",{href:\"https://www.servindi.org/actualidad/24/06/2020/senor-vizcarra-el-pueblo-peruano-rechaza-los-transgenicos\",target:\"_blank\",rel:\"noopener\"},\"LEER HISTORIA\")))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(_HomePage__WEBPACK_IMPORTED_MODULE_6__[\"SectionText\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(IframeStyled,{src:\"https://www.youtube.com/embed/79alPG6G5uc\",frameborder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowfullscreen:true})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"h1\",null,\"October 18, 2020\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"p\",null,\"Open Letter to the President of the Republic of Peru - Extension of moratoratia to production of transgenics\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"a\",{href:\"https://andes.org.pe/wp-content/uploads/2020/10/Carta-Abierta-al-Presidente-de-Peru-Ampliacion-de-la-moratoratia-a-transgenicos-18-10-20.pdf\",target:\"_blank\",rel:\"noopener\"},\"READ MORE\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"h1\",null,\"Octubre 20, 2020\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"p\",null,\"Congress extends moratorium on GM production until 2035.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"a\",{href:\"https://larepublica.pe/economia/2020/10/20/congreso-amplia-moratoria-a-transgenicos-hasta-diciembre-del-2035/?fbclid=IwAR16fczjYrejroXMDUpPQaTJ4pQZ4VP0nSpAGcDRZXbF5KNzdrWSDU9-0FA\",target:\"_blank\",rel:\"noopener\"},\"LEER MAS\")))));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(Politica));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/andes-theme/src/components/Politica.js\n");

/***/ })

})