webpackHotUpdate("andes",{

/***/ "./packages/andes-theme/src/components/Menu.js":
/*!*****************************************************!*\
  !*** ./packages/andes-theme/src/components/Menu.js ***!
  \*****************************************************/
/*! exports provided: Border, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Border\", function() { return Border; });\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Dropdown */ \"./packages/andes-theme/src/components/Dropdown.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var _LinkButton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./LinkButton */ \"./packages/andes-theme/src/components/LinkButton.js\");\n/* harmony import */ var _frontity_components_image__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @frontity/components/image */ \"./node_modules/@frontity/components/image.tsx\");\n/* harmony import */ var _static_images_logoscaled_png__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../static/images/logoscaled.png */ \"./packages/andes-theme/src/static/images/logoscaled.png\");\n/* harmony import */ var _static_images_logoscaled_png__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_static_images_logoscaled_png__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _bgImage__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bgImage */ \"./packages/andes-theme/src/components/bgImage.js\");\n/* harmony import */ var _static_images_1_jpeg__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../static/images/1.jpeg */ \"./packages/andes-theme/src/static/images/1.jpeg\");\n/* harmony import */ var _static_images_1_jpeg__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_static_images_1_jpeg__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _static_images_link3_jpg__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../static/images/link3.jpg */ \"./packages/andes-theme/src/static/images/link3.jpg\");\n/* harmony import */ var _static_images_link3_jpg__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_static_images_link3_jpg__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _static_images_link4_jpeg__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../static/images/link4.jpeg */ \"./packages/andes-theme/src/static/images/link4.jpeg\");\n/* harmony import */ var _static_images_link4_jpeg__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_static_images_link4_jpeg__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _Link__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Link */ \"./packages/andes-theme/src/components/Link.js\");\n/* harmony import */ var _SecondaryNavbarMobile__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./SecondaryNavbarMobile */ \"./packages/andes-theme/src/components/SecondaryNavbarMobile.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var Navigation=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"nav\",{target:\"e1v20uav0\",label:\"Navigation\"})( false?undefined:{name:\"cxlr5p\",styles:\"display:flex;height:12vh;background-color:#fff;justify-content:space-between;align-items:center;border-bottom:2px solid #33333320;margin:0 auto;padding:0 auto;position:fixed;top:6vh;left:0;width:100%;z-index:3;@media (max-width:768px){height:18vh;position:fixed;top:0;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Toggle=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1v20uav1\",label:\"Toggle\"})( false?undefined:{name:\"1hx3bme\",styles:\"display:none;height:100%;cursor:pointer;padding:0 10vw;@media (max-width:768px){display:flex;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Navbox=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1v20uav2\",label:\"Navbox\"})(\"display:flex;height:100%;justify-content:center;align-items:center;margin:0 1rem 0 0;@media (max-width:768px){flex-direction:column;position:fixed;width:100%;max-height:100%;justify-content:flex-start;align-items:flex-start;overflow-y:scroll;background-color:#fff;transition:all 0.3s ease-in;top:18vh;left:\",props=>props.open?\"-100%\":\"0\",\";}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var Hamburger=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1v20uav3\",label:\"Hamburger\"})(\"background-color:#111;width:30px;height:3px;transition:all .3s linear;align-self:center;position:relative;transform:\",props=>props.open?\"rotate(-45deg)\":\"inherit\",\";::before,::after{width:30px;height:3px;background-color:#111;content:\\\"\\\";position:absolute;transition:all 0.3s linear;}::before{transform:\",props=>props.open?\"rotate(-90deg) translate(-10px, 0px)\":\"rotate(0deg)\",\";top:-10px;}::after{opacity:\",props=>props.open?\"0\":\"1\",\";transform:\",props=>props.open?\"rotate(90deg) \":\"rotate(0deg)\",\";top:10px;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var MobileBox=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1v20uav4\",label:\"MobileBox\"})( false?undefined:{name:\"2zcndv\",styles:\"display:none;@media (max-width:768px){display:flex;top:12vh;z-index:3;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Button=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"a\",{target:\"e1v20uav5\",label:\"Button\"})( false?undefined:{name:\"1tsshci\",styles:\"display:flex;margin:1rem 0rem 1rem 1rem;font-size:1.2rem;color:#000;text-decoration:none;cursor:pointer;@media(min-width:768px){margin:0rem 1rem 0 1rem;font-size:1.3rem;color:#000;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Border=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1v20uav6\",label:\"Border\"})( false?undefined:{name:\"1xhpguj\",styles:\"content:\\\"\\\";height:1px;width:100vw;border-bottom:1px solid #D3D3D3;margin:0;@media (min-width:768px){display:none;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Menu=()=>{var[navbarOpen,setNavbarOpen]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false);var[openAbout,setOpenAbout]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false);var[openAboutMobile,setOpenAboutMobile]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false);var[openResearch,setOpenResearch]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false);var[openResearchMobile,setOpenResearchMObile]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false);return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Navigation,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Link__WEBPACK_IMPORTED_MODULE_11__[\"default\"],{href:\"/\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_frontity_components_image__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{src:_static_images_logoscaled_png__WEBPACK_IMPORTED_MODULE_6___default.a,height:\"60\",width:\"60\"})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Toggle,{navbarOpen:navbarOpen,onClick:()=>setNavbarOpen(!navbarOpen)},navbarOpen?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Hamburger,{open:true}):Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Hamburger,null)),navbarOpen?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Navbox,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_SecondaryNavbarMobile__WEBPACK_IMPORTED_MODULE_12__[\"default\"],{navOpen:navbarOpen,setNavOpen:setNavbarOpen}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Border,null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Button,{onClick:()=>setOpenAboutMobile(!openAboutMobile)},\"Andes\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Border,null),openAboutMobile?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(MobileBox,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Dropdown__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{navOpen:navbarOpen,setNavOpen:setNavbarOpen,open:openAboutMobile,setOpen:setOpenAboutMobile,options:[\"Who We are?\",\"Philosophy\",\"People\"],secondTitle:'What We Do?',options2:[\"Biocultural Territories\",\"Advocacy and Politics\"],thirdTitle:[\"Where We Work?\"],options3:[\"Potato Park - Pisac\",\"Chalakuy Park - Lares\",\"Spiritual Park - Vilcanota\",\"International Programs and Networks\"]})):null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Button,{onClick:()=>setOpenResearchMObile(!openResearchMobile)},\"Pluriversity\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Border,null),openResearchMobile?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(MobileBox,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Dropdown__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{navOpen:navbarOpen,setNavOpen:setNavbarOpen,open:openResearchMobile,setOpen:setOpenResearchMObile,options:[\"Yachay Kuychi\",\"Who We Are?\"],secondTitle:'What We Do?',options2:[\"Courses\",\"Intership and Volunteering\",\"Exchanges\"],thirdTitle:\"Utilities\",options3:[\"Toolkit\"]})):null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Button,{onClick:()=>setNavbarOpen(!navbarOpen)},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Link__WEBPACK_IMPORTED_MODULE_11__[\"default\"],{href:\"/publications\"},\"Publications\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Border,null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Button,{onClick:()=>setNavbarOpen(!navbarOpen)},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Link__WEBPACK_IMPORTED_MODULE_11__[\"default\"],{href:\"/relevantnews\"},\"News\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Border,null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Button,{onClick:()=>setNavbarOpen(!navbarOpen)},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Link__WEBPACK_IMPORTED_MODULE_11__[\"default\"],{href:\"/events\"},\"Events\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Border,null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_bgImage__WEBPACK_IMPORTED_MODULE_7__[\"ButtonAction\"],{onClick:()=>setNavbarOpen(!navbarOpen)},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_LinkButton__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{href:\"/\"},\"Contact\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"br\",null))):Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Navbox,{open:true},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Button,{onClick:()=>setOpenAbout(!openAbout)},\"ANDES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Button,{onClick:()=>setOpenResearch(!openResearch)},\"PLURIVERSITY\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Button,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Link__WEBPACK_IMPORTED_MODULE_11__[\"default\"],{href:\"/publications\"},\"PUBLICATIONS\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Button,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Link__WEBPACK_IMPORTED_MODULE_11__[\"default\"],{href:\"/relevantnews\"},\"NEWS\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Button,null,\" \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Link__WEBPACK_IMPORTED_MODULE_11__[\"default\"],{href:\"/events\"},\"EVENTS\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_bgImage__WEBPACK_IMPORTED_MODULE_7__[\"ButtonAction\"],null,\" \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_LinkButton__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{href:\"/\"},\"CONTACT\")))),openAbout?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Dropdown__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{open:openAbout,setOpen:setOpenAbout,options:[\"Who we are?\",\"Philosophy\",\"People\"],secondTitle:'What We Do?',options2:[\"Biocultural Territories\",\"Advocacy and Politics\"],thirdTitle:[\"Where We Work?\"],options3:[\"Potato Park - Pisac\",\"Chalakuy Park - Lares\",\"Spiritual Park - Vilcanota\",\"International Programs and Networks\"],ImageNav:_static_images_1_jpeg__WEBPACK_IMPORTED_MODULE_8___default.a}):null,openResearch?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Dropdown__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{open:openResearch,setOpen:setOpenResearch,options:[\"Yachay Kuychi\",\"Who We Are?\"],secondTitle:'What We Do?',options2:[\"Courses\",\"Intership and Volunteering\",\"Exchanges\"],thirdTitle:\"Utilities\",options3:[\"Toolkit\"],ImageNav:_static_images_link3_jpg__WEBPACK_IMPORTED_MODULE_9___default.a}):null);};/* harmony default export */ __webpack_exports__[\"default\"] = (Menu);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/andes-theme/src/components/Menu.js\n");

/***/ })

})