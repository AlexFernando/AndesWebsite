webpackHotUpdate("andes",{

/***/ "./packages/andes-theme/src/components-spanish/potatoPark.js":
/*!*******************************************************************!*\
  !*** ./packages/andes-theme/src/components-spanish/potatoPark.js ***!
  \*******************************************************************/
/*! exports provided: SectionContainer, MainParagraph, CardsContainer, Card, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SectionContainer\", function() { return SectionContainer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MainParagraph\", function() { return MainParagraph; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CardsContainer\", function() { return CardsContainer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Card\", function() { return Card; });\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var _Filosofia__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Filosofia */ \"./packages/andes-theme/src/components-spanish/Filosofia.js\");\n/* harmony import */ var _static_images_parquepapa_jpg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../static/images/parquepapa.jpg */ \"./packages/andes-theme/src/static/images/parquepapa.jpg\");\n/* harmony import */ var _static_images_parquepapa_jpg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_static_images_parquepapa_jpg__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _static_images_parquepapa2_jpg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../static/images/parquepapa2.jpg */ \"./packages/andes-theme/src/static/images/parquepapa2.jpg\");\n/* harmony import */ var _static_images_parquepapa2_jpg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_static_images_parquepapa2_jpg__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _static_images_link4_jpeg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../static/images/link4.jpeg */ \"./packages/andes-theme/src/static/images/link4.jpeg\");\n/* harmony import */ var _static_images_link4_jpeg__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_static_images_link4_jpeg__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ \"./node_modules/@fortawesome/free-solid-svg-icons/index.es.js\");\n/* harmony import */ var _TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./TerritoriosCulturales */ \"./packages/andes-theme/src/components-spanish/TerritoriosCulturales.js\");\n/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Dropdown */ \"./packages/andes-theme/src/components-spanish/Dropdown.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var SectionContainer=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1kew8og0\",label:\"SectionContainer\"})( false?undefined:{name:\"1lbhro0\",styles:\"display:flex;flex-direction:column;padding:0rem 2rem 2rem 2rem;@media(max-width:768px){padding:0 1rem 0 1rem;}p{padding:2rem 25rem 0 4rem;line-height:1.5;font-size:1.1rem;color:#545454;margin-bottom:0;@media(max-width:768px){padding:0 1rem 0 1rem;font-size:1rem;}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var MainParagraph=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"span\",{target:\"e1kew8og1\",label:\"MainParagraph\"})( false?undefined:{name:\"570a29\",styles:\"padding:0 25rem 0 4rem;line-height:1.5;font-size:1.4rem;color:#4c4c4c;@media(max-width:768px){padding:0 1rem 0 1rem;font-size:1.2rem;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var CardsContainer=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1kew8og2\",label:\"CardsContainer\"})( false?undefined:{name:\"1l4rssn\",styles:\"display:flex;justify-content:center;@media (max-width:768px){flex-direction:column;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Card=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1kew8og3\",label:\"Card\"})( false?undefined:{name:\"zl0pme\",styles:\"display:flex;flex-direction:column;flex-basis:33.33%;flex-grow:1;align-items:center;background-color:#eaeade;line-height:1.2;margin:2rem;border-radius:1rem;padding-bottom:1.5rem;@media (max-width:768px){margin:1rem 0 1rem 0;}img{max-width:100%;max-height:100%;border-radius:1rem 1rem 0 0;}h3{color:#44841a;padding:0 1rem 0 1rem;}span{padding:1rem 1rem 2rem 1rem;font-weight:400;font-size:1rem;color:#545454;}a{text-decoration:none;background-color:#f07723;color:#fff;padding:.8rem;border-radius:10px;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FsZXhmL3JlYWN0XzIwMjAvYW5kZXMvcGFja2FnZXMvYW5kZXMtdGhlbWUvc3JjL2NvbXBvbmVudHMtc3BhbmlzaC9wb3RhdG9QYXJrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlEOEIiLCJmaWxlIjoiL2hvbWUvYWxleGYvcmVhY3RfMjAyMC9hbmRlcy9wYWNrYWdlcy9hbmRlcy10aGVtZS9zcmMvY29tcG9uZW50cy1zcGFuaXNoL3BvdGF0b1BhcmsuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtjb25uZWN0LCBjc3MsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IHtIZWFkQ29udGFpbmVyLCBUaXRsZSwgU3ViVGl0bGUsIFNlcGFyYXRvciwgTWFyZ2luVG9wQ29udGFpbmVyfSBmcm9tICcuL0ZpbG9zb2ZpYSc7XG5pbXBvcnQgaW1nQWdyaWN1bHRvcmVzIGZyb20gJy4uL3N0YXRpYy9pbWFnZXMvcGFycXVlcGFwYS5qcGcnO1xuaW1wb3J0IGltZ1Npc3RlbWFBeWxsdSBmcm9tICcuLi9zdGF0aWMvaW1hZ2VzL3BhcnF1ZXBhcGEyLmpwZyc7XG5pbXBvcnQgaW1nSW5ub3ZhY2lvbmVCaW8gZnJvbSAnLi4vc3RhdGljL2ltYWdlcy9saW5rNC5qcGVnJztcblxuaW1wb3J0IHtmYUxpc3RBbHQsIGZhQXJyb3dBbHRDaXJjbGVSaWdodCwgZmFNb3VudGFpbiwgZmFNYWxlLCBmYUxhbmd1YWdlLCBmYUV4Y2xhbWF0aW9uVHJpYW5nbGUsIGZhVHJhY3RvciwgZmFTZWVkbGluZywgZmFIaWtpbmcsIGZhVXRlbnNpbHMsIGZhSGFuZHMsIGZhQ2Fycm90fSBmcm9tICdAZm9ydGF3ZXNvbWUvZnJlZS1zb2xpZC1zdmctaWNvbnMnO1xuaW1wb3J0IHtGb250QXdlc29tZUljb25MaXN0LCBGb250QXdlc29tZUljb25TdHlsZWQsIEJyaWVmU2VjdGlvbiwgSW5mb0l0ZW19IGZyb20gJy4vVGVycml0b3Jpb3NDdWx0dXJhbGVzJztcblxuaW1wb3J0IHsgVmVydGljYWxCb3JkZXIgfSBmcm9tICcuL0Ryb3Bkb3duJztcblxuXG5leHBvcnQgY29uc3QgU2VjdGlvbkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIHBhZGRpbmc6IDByZW0gMnJlbSAycmVtIDJyZW07XG5cbiAgICBAbWVkaWEobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICBwYWRkaW5nOiAwIDFyZW0gMCAxcmVtO1xuICAgIH1cblxuICAgIHAge1xuICAgICAgICBwYWRkaW5nOiAycmVtIDI1cmVtIDAgNHJlbTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICAgICAgZm9udC1zaXplOiAxLjFyZW07XG4gICAgICAgIGNvbG9yOiAjNTQ1NDU0O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuXG4gICAgICAgIEBtZWRpYShtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgICAgICBwYWRkaW5nOiAwIDFyZW0gMCAxcmVtO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgICAgICB9XG4gICAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IE1haW5QYXJhZ3JhcGggPSBzdHlsZWQuc3BhbmBcbiAgICAgICAgcGFkZGluZzogMCAyNXJlbSAwIDRyZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgICAgIGZvbnQtc2l6ZTogMS40cmVtO1xuICAgICAgICBjb2xvcjogIzRjNGM0YztcblxuICAgICAgICBAbWVkaWEobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICAgICAgcGFkZGluZzogMCAxcmVtIDAgMXJlbTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgICAgICB9XG5gXG5cbmV4cG9ydCBjb25zdCBDYXJkc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpe1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDYXJkID0gc3R5bGVkLmRpdmBcblxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBmbGV4LWJhc2lzOiAzMy4zMyU7XG4gICAgZmxleC1ncm93OiAxO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VhZWFkZTtcbiAgICBsaW5lLWhlaWdodDogMS4yO1xuICAgIG1hcmdpbjogMnJlbTtcbiAgICBib3JkZXItcmFkaXVzOiAxcmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiAxLjVyZW07XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpe1xuICAgICAgICBtYXJnaW46IDFyZW0gMCAxcmVtIDA7XG4gICAgfVxuXG4gICAgaW1nIHtcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICBtYXgtaGVpZ2h0OiAxMDAlO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAxcmVtIDFyZW0gMCAwOyAgICAgICAgXG4gICAgfVxuXG4gICAgaDMge1xuICAgICAgICBjb2xvcjogIzQ0ODQxYTtcbiAgICAgICAgcGFkZGluZzogMCAxcmVtIDAgMXJlbTtcbiAgICB9XG5cbiAgICBzcGFuIHtcbiAgICAgICAgcGFkZGluZzogMXJlbSAxcmVtIDJyZW0gMXJlbTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgICAgICBjb2xvcjogIzU0NTQ1NDtcbiAgICB9XG4gICAgXG4gICAgYSB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2YwNzcyMztcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIHBhZGRpbmc6IC44cmVtO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIH1cbmA7XG5cbmNvbnN0IFNlY3Rpb25JbmZvQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgICBtYXJnaW46IDJyZW0gMDtcbiAgICBoMntcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbmA7XG5cbmNvbnN0IEZhc3RJbmZvID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luOiA0cmVtIDA7XG5cbiAgICBAbWVkaWEobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgICAgIGRpdiB7XG4gICAgICAgICAgICBtYXJnaW46IDFyZW0gMDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHAge1xuICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICB9XG5gO1xuXG5jb25zdCBQb3RhdG9QYXJrID0gKHtzdGF0ZX0pID0+IHtcbiAgICByZXR1cm4gKCBcbiAgICAgICAgPE1hcmdpblRvcENvbnRhaW5lcj5cbiAgICAgICAgICAgIDxIZWFkQ29udGFpbmVyPlxuICAgICAgICAgICAgICAgIDxUaXRsZT5cbiAgICAgICAgICAgICAgICAgICAgUGFycXVlIGRlIGxhIFBhcGEgLSBQaXNhcVxuICAgICAgICAgICAgICAgIDwvVGl0bGU+XG4gICAgICAgICAgICAgICAgPFNlcGFyYXRvcj48L1NlcGFyYXRvcj5cbiAgICAgICAgICAgICAgICA8U3ViVGl0bGU+XG4gICAgICAgICAgICAgICAgICAgIEVsIFNpc3RlbWEgQXlsbHU8YnI+PC9icj5Jbm5vdmFjaW9uZXMgQmlvY3VsdHVyYWxlc1xuICAgICAgICAgICAgICAgIDwvU3ViVGl0bGU+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICA8L0hlYWRDb250YWluZXI+XG5cbiAgICAgICAgICAgIDxTZWN0aW9uQ29udGFpbmVyPlxuICAgICAgICAgICAgICAgIDxNYWluUGFyYWdyYXBoPlxuICAgICAgICAgICAgICAgICAgICBFbCBQYXJxdWUgZGUgbGEgUGFwYSBubyBlcyBzb2xhbWVudGUgdW5hIGluaWNpYXRpdmEgZGUgY29uc2VydmFjacOzbiBkZSB2YXJpYXMgdmFyaWVkYWRlcyBkZSBwYXBhcy4gXG4gICAgICAgICAgICAgICAgICAgIEVzLCBzb2JyZSB0b2RvLCB1biB0ZXJyaXRvcmlvIGJpbyBjdWx0dXJhbCBkZWRpY2FkbyBhIGxhIGNvbnNlcnZhY2nDs24gZGVsIHBhdHJpbW9uaW8gZGUgc2VpcyBjb211bmlkYWRlcyBcbiAgICAgICAgICAgICAgICAgICAgaW5kw61nZW5hcyBxdWUgdml2ZW4gYXF1w606IG5vIHNvbGFtZW50ZSBjaWVudG9zIGRlIHZhcmllZGFkZXMgY3VsdGl2YWRhcyBwZXJvIGlndWFsbWVudGUgbGFzIGVzcGVjaWVzIHNpbHZlc3RyZXMgXG4gICAgICAgICAgICAgICAgICAgIGVtcGFyZW50YWRhcywgZWwgcGFpc2FqZSB5IHN1cyBlbGVtZW50b3MgcXVlIGluY2x1eWVuIHRhbWJpw6luIGNvbm9jaW1pZW50b3MsIHRyYWRpY2lvbmVzLCBpbm5vdmFjaW9uZXMgeSBsYSBjb3Ntb3Zpc2nDs24gXG4gICAgICAgICAgICAgICAgICAgIGRlIGxvcyBtw6FzIGRlIDYwMDAgaGFiaXRhbnRlcy5cbiAgICAgICAgICAgICAgICA8L01haW5QYXJhZ3JhcGg+XG5cbiAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDxTZWN0aW9uSW5mb0NvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICAgICAgPGgyPkluZm9EYXRhPC9oMj5cblxuICAgICAgICAgICAgICAgIDxGYXN0SW5mbz5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxGb250QXdlc29tZUljb25TdHlsZWQgaWNvbj17ZmFNb3VudGFpbn0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGgzPkFyZWE8L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHA+OTgyMCBIZWN0w6FyZWFzPC9wPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICA8Rm9udEF3ZXNvbWVJY29uU3R5bGVkIGljb249e2ZhTWFsZX0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGgzPlBvYmxhY2nDs248L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHA+NjAwMCBoYWJpdGFudGVzPC9wPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvblN0eWxlZCBpY29uPXtmYUxhbmd1YWdlfS8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aDM+RXRuaWE8L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHA+UXVlY2h1YTwvcD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Rm9udEF3ZXNvbWVJY29uU3R5bGVkIGljb249e2ZhRXhjbGFtYXRpb25UcmlhbmdsZX0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGgzPlBvYnJlemE8L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHA+NzAlIGRlIGxhIHBvYmxhY2nDs24gPGJyPjwvYnI+aW5kw61nZW5hIGRlIEN1c2NvIHZpdmUgZW4gcG9icmV6YTwvcD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9GYXN0SW5mbz5cblxuICAgICAgICAgICAgICAgIDwvU2VjdGlvbkluZm9Db250YWluZXI+XG5cbiAgICAgICAgICAgICAgICA8QnJpZWZTZWN0aW9uPlxuXG4gICAgICAgICAgICAgICAgICAgIDxJbmZvSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvblN0eWxlZCBpY29uPXtmYUxpc3RBbHR9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5FY29zaXN0ZW1hL0Vjb2xvZ8OtYTwvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgICA8cD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBBbHR1cmEgZW50cmUgMzIwMCB5IDUwMDAgbWV0cm9zIHNvYnJlIGVsIG5pdmVsIGRlbCBtYXJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwPlVzbyBtaXh0byBkZSBzdWVsb3MsIGluY2x1dGVuZG8gY2FtcG9zIHJvdGFjaW9uYWwgKG11eXV5cyksIGNhbXBvcyBkZSBjdWx0aXZvIHBlcm1hbmVudGUoY2hhY3JhcyksIGFyYnVzdG9zIHkgYm9zcXVlcyBuYXRpdm9zLCBib3NxdWUgbm8tbmF0aXZvcywgYXJlYXMgZGUgcGFzdG9yZW8sIGxhZ29zLCByw61vcyB5IGh1bWVkYWxlczwvcD5cbiAgICAgICAgICAgICAgICAgICAgPC9JbmZvSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgPFZlcnRpY2FsQm9yZGVyPjwvVmVydGljYWxCb3JkZXI+XG5cbiAgICAgICAgICAgICAgICAgICAgPEluZm9JdGVtPlxuICAgICAgICAgICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvblN0eWxlZCBpY29uPXtmYUxpc3RBbHR9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgPGgzPkRpdmVyc2lkYWQgQmlvbMOzZ2ljYSB5IEdlbsOpdGljYTwvaDM+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PEZvbnRBd2Vzb21lSWNvbkxpc3QgaWNvbj17ZmFBcnJvd0FsdENpcmNsZVJpZ2h0fS8+RGl2ZXJzb3MgY3VsdGl2b3MgdHJhZGljaW9uYWxlcyBjb21vIHRhcndpLCBxdWlub2EsIGtpd2ljaGEsIG1hw616LCBoYWJhcywgb2xsdWNhLCBvY2EuPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PEZvbnRBd2Vzb21lSWNvbkxpc3QgaWNvbj17ZmFBcnJvd0FsdENpcmNsZVJpZ2h0fS8+MTQwMCB2YXJpZWRhZGVzIGRlIHBhcGEgbmF0aXZhIHkgb3Ryb3MgdHViw6lyY3Vsb3MgYW5kaW5vczwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxGb250QXdlc29tZUljb25MaXN0IGljb249e2ZhQXJyb3dBbHRDaXJjbGVSaWdodH0vPkNyaWFuemEgZGUgYW5pbWFsZXMgcHJvdmVlZG9yZXMgZGUgY2FybmUgKGN1eSwgYWxwYWNhKSwgbGFuYSBkZSBvdmVqYSwgbGxhbWEgeSBhbHBhY2E7IG1lZGljaW5hcy48L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5NaWNyb2dlbm9jZW50cm8gZGUgZG9tZXN0aWNhY2nDs24uIDMgZXNwZWNpZXMgLSBzaWx2ZXN0cmVzIGRlIHBhcGEuPC9saT4gXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgICAgICA8L0luZm9JdGVtPlxuICAgICAgICAgICAgICAgICAgICA8VmVydGljYWxCb3JkZXI+PC9WZXJ0aWNhbEJvcmRlcj5cbiAgICAgICAgICAgICAgICAgICAgPEluZm9JdGVtPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8Rm9udEF3ZXNvbWVJY29uU3R5bGVkIGljb249e2ZhTGlzdEFsdH0vPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5Db211bmlkYWRlczwvaDM+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PEZvbnRBd2Vzb21lSWNvbkxpc3QgaWNvbj17ZmFBcnJvd0FsdENpcmNsZVJpZ2h0fS8+Q3V5byBHcmFuZGU8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5TYWNhY2E8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5DaGF3YXl0aXJlPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PEZvbnRBd2Vzb21lSWNvbkxpc3QgaWNvbj17ZmFBcnJvd0FsdENpcmNsZVJpZ2h0fS8+QW1hcnU8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5QYW1wYWxsYXF0YTwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxGb250QXdlc29tZUljb25MaXN0IGljb249e2ZhQXJyb3dBbHRDaXJjbGVSaWdodH0vPlBhcnUgUGFydTwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgICAgICA8L0luZm9JdGVtPlxuICAgICAgICAgICAgICAgIDwvQnJpZWZTZWN0aW9uPlxuXG4gICAgICAgICAgICAgICAgPFNlY3Rpb25JbmZvQ29udGFpbmVyPlxuICAgICAgICAgICAgICAgICAgICA8aDI+QWN0aXZpZGFkZXMgZWNvbsOzbWljYXM8L2gyPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8RmFzdEluZm8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvblN0eWxlZCBpY29uPXtmYVRyYWN0b3J9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPkFncmljdWx0dXJhPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Rm9udEF3ZXNvbWVJY29uU3R5bGVkIGljb249e2ZhU2VlZGxpbmd9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPkVtcHJlc2EgZGUgc2VtaWxsYXM8L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvblN0eWxlZCBpY29uPXtmYUhpa2luZ30vPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDM+QWdyby1lY290dXJpc21vPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvRmFzdEluZm8+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxGYXN0SW5mbz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Rm9udEF3ZXNvbWVJY29uU3R5bGVkIGljb249e2ZhVXRlbnNpbHN9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPkdhc3Ryb25vbcOtYTwvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Rm9udEF3ZXNvbWVJY29uU3R5bGVkIGljb249e2ZhSGFuZHN9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPkFydGVzYW7DrWE8L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxGb250QXdlc29tZUljb25TdHlsZWQgaWNvbj17ZmFDYXJyb3R9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPlByb2R1Y3RvcyBOYXR1cmFsZXM8L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9GYXN0SW5mbz5cbiAgICAgICAgICAgICAgICA8L1NlY3Rpb25JbmZvQ29udGFpbmVyPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDxDYXJkc0NvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICAgICAgPENhcmQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17aW1nSW5ub3ZhY2lvbmVCaW99IC8+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5Jbm5vdmFjaW9uZXMgYmlvY3VsdHVyYWxlcyBlbiBlbCBQYXJxdWUgZGUgbGEgUGFwYTwvaDM+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVsIFBhcnF1ZSBkZSBsYSBQYXBhIG5vIGVzIHNvbGFtZW50ZSB1bmEgaW5pY2lhdGl2YSBkZSBjb25zZXJ2YWNpw7NuIGRlIHZhcmlhcyB2YXJpZWRhZGVzIGRlIHBhcGFzLiBFcywgc29icmUgdG9kbywgdW4gdGVycml0b3JpbyBiaW8gY3VsdHVyYWwgZGVkaWNhZG8gYSBsYSBjb25zZXJ2YWNpw7NuIGRlbCBwYXRyaW1vbmlvIGRlIHNlaXMgY29tdW5pZGFkZXMgaW5kw61nZW5hcyBxdWUgdml2ZW4gZW4gbGEgem9uYVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cDovL2FuZGVzLmNlbnRlci93cC1jb250ZW50L3VwbG9hZHMvMjAxOC8wNy9HMDM5MTcucGRmXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXJcIiA+TEVFUiBNQVM8L2E+XG4gICAgICAgICAgICAgICAgICAgIDwvQ2FyZD5cblxuXG4gICAgICAgICAgICAgICAgICAgIDxDYXJkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2ltZ1Npc3RlbWFBeWxsdX0gLz5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGgzPkVsIHNpc3RlbWEgQXlsbHUgZW4gZWwgUGFycXVlIGRlIGxhIFBhcGE8L2gzPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgRWwgUGFycXVlIGRlIGxhIFBhcGEgbm8gZXMgc29sYW1lbnRlIHVuYSBpbmljaWF0aXZhIGRlIGNvbnNlcnZhY2nDs24gZGUgdmFyaWFzIHZhcmllZGFkZXMgZGUgcGFwYXMuIEVzLCBzb2JyZSB0b2RvLCB1biB0ZXJyaXRvcmlvIGJpbyBjdWx0dXJhbCBkZWRpY2FkbyBhIGxhIGNvbnNlcnZhY2nDs24gZGVsIHBhdHJpbW9uaW8gZGUgc2VpcyBjb211bmlkYWRlcyBpbmTDrWdlbmFzIHF1ZSB2aXZlbiBlbiBsYSB6b25hXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL3NhdG95YW1hLWluaXRpYXRpdmUub3JnL29sZC90aGUtYXlsbHUtc3lzdGVtLW9mLXRoZS1wb3RhdG8tcGFyay9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lclwiID5MRUVSIE1BUzwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9DYXJkPlxuXG4gICAgICAgICAgICAgICAgICAgIDxDYXJkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2ltZ0FncmljdWx0b3Jlc30gLz5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGgzPkFncmljdWx0b3JlcyBQZXJ1YW5vcyBwdWVkZSBzYWx2YXIgZWwgcGxhbmV0YTwvaDM+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVsIFBhcnF1ZSBkZSBsYSBQYXBhIG5vIGVzIHNvbGFtZW50ZSB1bmEgaW5pY2lhdGl2YSBkZSBjb25zZXJ2YWNpw7NuIGRlIHZhcmlhcyB2YXJpZWRhZGVzIGRlIHBhcGFzLiBFcywgc29icmUgdG9kbywgdW4gdGVycml0b3JpbyBiaW8gY3VsdHVyYWwgZGVkaWNhZG8gYSBsYSBjb25zZXJ2YWNpw7NuIGRlbCBwYXRyaW1vbmlvIGRlIHNlaXMgY29tdW5pZGFkZXMgaW5kw61nZW5hcyBxdWUgdml2ZW4gZW4gbGEgem9uYVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly9tb2Rlcm5mYXJtZXIuY29tLzIwMTkvMTIvaG93LXBlcnV2aWFuLXBvdGF0b2VzLW1pZ2h0LWJlLWtleS10by1mZWVkaW5nLXRoZS1wbGFuZXQvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXJcIiA+TEVFUiBNQVM8L2E+XG4gICAgICAgICAgICAgICAgICAgIDwvQ2FyZD5cbiAgICAgICAgICAgICAgICA8L0NhcmRzQ29udGFpbmVyPlxuICAgICAgICAgICAgPC9TZWN0aW9uQ29udGFpbmVyPlxuICAgICAgICAgICAgXG4gICAgICAgIDwvTWFyZ2luVG9wQ29udGFpbmVyPlxuICAgICk7XG59XG4gXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFBvdGF0b1BhcmspOyJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var SectionInfoContainer=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1kew8og4\",label:\"SectionInfoContainer\"})( false?undefined:{name:\"17yfjsm\",styles:\"margin:2rem 0;h2{text-align:center;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var FastInfo=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1kew8og5\",label:\"FastInfo\"})( false?undefined:{name:\"1weki8a\",styles:\"display:flex;justify-content:space-evenly;align-content:center;text-align:center;margin:4rem 0;@media(max-width:768px){flex-direction:column;div{margin:1rem 0;}}p{color:#000;padding:0;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var PotatoPark=(_ref)=>{var{state}=_ref;return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"MarginTopContainer\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"HeadContainer\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"Title\"],null,\"Parque de la Papa - Pisaq\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"Separator\"],null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Filosofia__WEBPACK_IMPORTED_MODULE_4__[\"SubTitle\"],null,\"El Sistema Ayllu\",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"br\",null),\"Innovaciones Bioculturales\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(SectionContainer,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(MainParagraph,null,\"El Parque de la Papa no es solamente una iniciativa de conservaci\\xF3n de varias variedades de papas. Es, sobre todo, un territorio bio cultural dedicado a la conservaci\\xF3n del patrimonio de seis comunidades ind\\xEDgenas que viven aqu\\xED: no solamente cientos de variedades cultivadas pero igualmente las especies silvestres emparentadas, el paisaje y sus elementos que incluyen tambi\\xE9n conocimientos, tradiciones, innovaciones y la cosmovisi\\xF3n de los m\\xE1s de 6000 habitantes.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(SectionInfoContainer,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h2\",null,\"InfoData\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FastInfo,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconStyled\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faMountain\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Area\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,\"9820 Hect\\xE1reas\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconStyled\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faMale\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Poblaci\\xF3n\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,\"6000 habitantes\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconStyled\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faLanguage\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Etnia\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,\"Quechua\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconStyled\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faExclamationTriangle\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Pobreza\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,\"70% de la poblaci\\xF3n \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"br\",null),\"ind\\xEDgena de Cusco vive en pobreza\")))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"BriefSection\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"InfoItem\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconStyled\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faListAlt\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Ecosistema/Ecolog\\xEDa\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,\"Altura entre 3200 y 5000 metros sobre el nivel del mar\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,\"Uso mixto de suelos, inclutendo campos rotacional (muyuys), campos de cultivo permanente(chacras), arbustos y bosques nativos, bosque no-nativos, areas de pastoreo, lagos, r\\xEDos y humedales\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Dropdown__WEBPACK_IMPORTED_MODULE_10__[\"VerticalBorder\"],null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"InfoItem\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconStyled\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faListAlt\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Diversidad Biol\\xF3gica y Gen\\xE9tica\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"ul\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconList\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faArrowAltCircleRight\"]}),\"Diversos cultivos tradicionales como tarwi, quinoa, kiwicha, ma\\xEDz, habas, olluca, oca.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconList\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faArrowAltCircleRight\"]}),\"1400 variedades de papa nativa y otros tub\\xE9rculos andinos\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconList\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faArrowAltCircleRight\"]}),\"Crianza de animales proveedores de carne (cuy, alpaca), lana de oveja, llama y alpaca; medicinas.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconList\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faArrowAltCircleRight\"]}),\"Microgenocentro de domesticaci\\xF3n. 3 especies - silvestres de papa.\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Dropdown__WEBPACK_IMPORTED_MODULE_10__[\"VerticalBorder\"],null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"InfoItem\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconStyled\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faListAlt\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Comunidades\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"ul\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconList\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faArrowAltCircleRight\"]}),\"Cuyo Grande\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconList\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faArrowAltCircleRight\"]}),\"Sacaca\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconList\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faArrowAltCircleRight\"]}),\"Chawaytire\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconList\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faArrowAltCircleRight\"]}),\"Amaru\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconList\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faArrowAltCircleRight\"]}),\"Pampallaqta\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"li\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconList\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faArrowAltCircleRight\"]}),\"Paru Paru\")))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(SectionInfoContainer,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h2\",null,\"Actividades econ\\xF3micas\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FastInfo,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconStyled\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faTractor\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Agricultura\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconStyled\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faSeedling\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Empresa de semillas\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconStyled\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faHiking\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Agro-ecoturismo\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(FastInfo,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconStyled\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faUtensils\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Gastronom\\xEDa\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconStyled\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faHands\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Artesan\\xEDa\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_TerritoriosCulturales__WEBPACK_IMPORTED_MODULE_9__[\"FontAwesomeIconStyled\"],{icon:_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__[\"faCarrot\"]}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Productos Naturales\")))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(CardsContainer,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Card,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_link4_jpeg__WEBPACK_IMPORTED_MODULE_7___default.a}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Innovaciones bioculturales en el Parque de la Papa\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"span\",null,\"El Parque de la Papa no es solamente una iniciativa de conservaci\\xF3n de varias variedades de papas. Es, sobre todo, un territorio bio cultural dedicado a la conservaci\\xF3n del patrimonio de seis comunidades ind\\xEDgenas que viven en la zona\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"http://andes.center/wp-content/uploads/2018/07/G03917.pdf\",target:\"_blank\",rel:\"noopener\"},\"LEER MAS\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Card,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_parquepapa2_jpg__WEBPACK_IMPORTED_MODULE_6___default.a}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"El sistema Ayllu en el Parque de la Papa\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"span\",null,\"El Parque de la Papa no es solamente una iniciativa de conservaci\\xF3n de varias variedades de papas. Es, sobre todo, un territorio bio cultural dedicado a la conservaci\\xF3n del patrimonio de seis comunidades ind\\xEDgenas que viven en la zona\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"https://satoyama-initiative.org/old/the-ayllu-system-of-the-potato-park/\",target:\"_blank\",rel:\"noopener\"},\"LEER MAS\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Card,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:_static_images_parquepapa_jpg__WEBPACK_IMPORTED_MODULE_5___default.a}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"h3\",null,\"Agricultores Peruanos puede salvar el planeta\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"span\",null,\"El Parque de la Papa no es solamente una iniciativa de conservaci\\xF3n de varias variedades de papas. Es, sobre todo, un territorio bio cultural dedicado a la conservaci\\xF3n del patrimonio de seis comunidades ind\\xEDgenas que viven en la zona\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"https://modernfarmer.com/2019/12/how-peruvian-potatoes-might-be-key-to-feeding-the-planet/\",target:\"_blank\",rel:\"noopener\"},\"LEER MAS\")))));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(PotatoPark));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9hbmRlcy10aGVtZS9zcmMvY29tcG9uZW50cy1zcGFuaXNoL3BvdGF0b1BhcmsuanM/ZWJlMCJdLCJuYW1lcyI6WyJTZWN0aW9uQ29udGFpbmVyIiwiTWFpblBhcmFncmFwaCIsIkNhcmRzQ29udGFpbmVyIiwiQ2FyZCIsIlNlY3Rpb25JbmZvQ29udGFpbmVyIiwiRmFzdEluZm8iLCJQb3RhdG9QYXJrIiwic3RhdGUiLCJmYU1vdW50YWluIiwiZmFNYWxlIiwiZmFMYW5ndWFnZSIsImZhRXhjbGFtYXRpb25UcmlhbmdsZSIsImZhTGlzdEFsdCIsImZhQXJyb3dBbHRDaXJjbGVSaWdodCIsImZhVHJhY3RvciIsImZhU2VlZGxpbmciLCJmYUhpa2luZyIsImZhVXRlbnNpbHMiLCJmYUhhbmRzIiwiZmFDYXJyb3QiLCJpbWdJbm5vdmFjaW9uZUJpbyIsImltZ1Npc3RlbWFBeWxsdSIsImltZ0FncmljdWx0b3JlcyIsImNvbm5lY3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztxUkFhTyxHQUFNQSxpQkFBZ0IsK2dnQkFBdEIsQ0F1QkEsR0FBTUMsY0FBYSw4NGZBQW5CLENBWUEsR0FBTUMsZUFBYyw2MWZBQXBCLENBU0EsR0FBTUMsS0FBSSxtdmdCQUFWLENBNENQLEdBQU1DLHFCQUFvQixtemZBQTFCLENBT0EsR0FBTUMsU0FBUSw0N2ZBQWQsQ0FxQkEsR0FBTUMsV0FBVSxDQUFHLFFBQWEsSUFBWixDQUFDQyxLQUFELENBQVksTUFDNUIsTUFDSSwyREFBQyw2REFBRCxNQUNJLDBEQUFDLHdEQUFELE1BQ0ksMERBQUMsZ0RBQUQsa0NBREosQ0FJSSwwREFBQyxvREFBRCxNQUpKLENBS0ksMERBQUMsbURBQUQseUJBQ29CLG9FQURwQiw4QkFMSixDQURKLENBWUksMERBQUMsZ0JBQUQsTUFDSSwwREFBQyxhQUFELGdmQURKLENBVUksMERBQUMsb0JBQUQsTUFDSSwrRUFESixDQUdBLDBEQUFDLFFBQUQs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R0FBRyxDQUFFQyxnRUFBVixFQURKLENBR0kseUhBSEosQ0FLSSw0VEFMSixDQVNJLCtEQUFHLElBQUksQ0FBQywyREFBUixDQUFvRSxNQUFNLENBQUMsUUFBM0UsQ0FBb0YsR0FBRyxDQUFDLFVBQXhGLGFBVEosQ0FESixDQWNJLDBEQUFDLElBQUQsTUFDSSxpRUFBSyxHQUFHLENBQUVDLHFFQUFWLEVBREosQ0FHSSwrR0FISixDQUtJLDRUQUxKLENBU0ksK0RBQUcsSUFBSSxDQUFDLDBFQUFSLENBQW1GLE1BQU0sQ0FBQyxRQUExRixDQUFtRyxHQUFHLENBQUMsVUFBdkcsYUFUSixDQWRKLENBMEJJLDBEQUFDLElBQUQsTUFDSSxpRUFBSyxHQUFHLENBQUVDLG9FQUFWLEVBREosQ0FHSSxvSEFISixDQUtJLDRUQUxKLENBU0ksK0RBQUcsSUFBSSxDQUFDLDRGQUFSLENBQXFHLE1BQU0sQ0FBQyxRQUE1RyxDQUFxSCxHQUFHLENBQUMsVUFBekgsYUFUSixDQTFCSixDQTFISixDQVpKLENBREosQ0FpTEgsQ0FsTEQsQ0FvTGVDLHVIQUFPLENBQUNqQixVQUFELENBQXRCIiwiZmlsZSI6Ii4vcGFja2FnZXMvYW5kZXMtdGhlbWUvc3JjL2NvbXBvbmVudHMtc3BhbmlzaC9wb3RhdG9QYXJrLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7Y29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCB7SGVhZENvbnRhaW5lciwgVGl0bGUsIFN1YlRpdGxlLCBTZXBhcmF0b3IsIE1hcmdpblRvcENvbnRhaW5lcn0gZnJvbSAnLi9GaWxvc29maWEnO1xuaW1wb3J0IGltZ0FncmljdWx0b3JlcyBmcm9tICcuLi9zdGF0aWMvaW1hZ2VzL3BhcnF1ZXBhcGEuanBnJztcbmltcG9ydCBpbWdTaXN0ZW1hQXlsbHUgZnJvbSAnLi4vc3RhdGljL2ltYWdlcy9wYXJxdWVwYXBhMi5qcGcnO1xuaW1wb3J0IGltZ0lubm92YWNpb25lQmlvIGZyb20gJy4uL3N0YXRpYy9pbWFnZXMvbGluazQuanBlZyc7XG5cbmltcG9ydCB7ZmFMaXN0QWx0LCBmYUFycm93QWx0Q2lyY2xlUmlnaHQsIGZhTW91bnRhaW4sIGZhTWFsZSwgZmFMYW5ndWFnZSwgZmFFeGNsYW1hdGlvblRyaWFuZ2xlLCBmYVRyYWN0b3IsIGZhU2VlZGxpbmcsIGZhSGlraW5nLCBmYVV0ZW5zaWxzLCBmYUhhbmRzLCBmYUNhcnJvdH0gZnJvbSAnQGZvcnRhd2Vzb21lL2ZyZWUtc29saWQtc3ZnLWljb25zJztcbmltcG9ydCB7Rm9udEF3ZXNvbWVJY29uTGlzdCwgRm9udEF3ZXNvbWVJY29uU3R5bGVkLCBCcmllZlNlY3Rpb24sIEluZm9JdGVtfSBmcm9tICcuL1RlcnJpdG9yaW9zQ3VsdHVyYWxlcyc7XG5cbmltcG9ydCB7IFZlcnRpY2FsQm9yZGVyIH0gZnJvbSAnLi9Ecm9wZG93bic7XG5cblxuZXhwb3J0IGNvbnN0IFNlY3Rpb25Db250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBwYWRkaW5nOiAwcmVtIDJyZW0gMnJlbSAycmVtO1xuXG4gICAgQG1lZGlhKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgcGFkZGluZzogMCAxcmVtIDAgMXJlbTtcbiAgICB9XG5cbiAgICBwIHtcbiAgICAgICAgcGFkZGluZzogMnJlbSAyNXJlbSAwIDRyZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgICAgIGZvbnQtc2l6ZTogMS4xcmVtO1xuICAgICAgICBjb2xvcjogIzU0NTQ1NDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcblxuICAgICAgICBAbWVkaWEobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICAgICAgcGFkZGluZzogMCAxcmVtIDAgMXJlbTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgICAgfVxuICAgIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBNYWluUGFyYWdyYXBoID0gc3R5bGVkLnNwYW5gXG4gICAgICAgIHBhZGRpbmc6IDAgMjVyZW0gMCA0cmVtO1xuICAgICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgICAgICBmb250LXNpemU6IDEuNHJlbTtcbiAgICAgICAgY29sb3I6ICM0YzRjNGM7XG5cbiAgICAgICAgQG1lZGlhKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgMXJlbSAwIDFyZW07XG4gICAgICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICAgICAgfVxuYFxuXG5leHBvcnQgY29uc3QgQ2FyZHNDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KXtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB9XG5gO1xuXG5leHBvcnQgY29uc3QgQ2FyZCA9IHN0eWxlZC5kaXZgXG5cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZmxleC1iYXNpczogMzMuMzMlO1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlYWVhZGU7XG4gICAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgICBtYXJnaW46IDJyZW07XG4gICAgYm9yZGVyLXJhZGl1czogMXJlbTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMS41cmVtO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KXtcbiAgICAgICAgbWFyZ2luOiAxcmVtIDAgMXJlbSAwO1xuICAgIH1cblxuICAgIGltZyB7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgbWF4LWhlaWdodDogMTAwJTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMXJlbSAxcmVtIDAgMDsgICAgICAgIFxuICAgIH1cblxuICAgIGgzIHtcbiAgICAgICAgY29sb3I6ICM0NDg0MWE7XG4gICAgICAgIHBhZGRpbmc6IDAgMXJlbSAwIDFyZW07XG4gICAgfVxuXG4gICAgc3BhbiB7XG4gICAgICAgIHBhZGRpbmc6IDFyZW0gMXJlbSAycmVtIDFyZW07XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgICAgY29sb3I6ICM1NDU0NTQ7XG4gICAgfVxuICAgIFxuICAgIGEge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMDc3MjM7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICBwYWRkaW5nOiAuOHJlbTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICB9XG5gO1xuXG5jb25zdCBTZWN0aW9uSW5mb0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gICAgbWFyZ2luOiAycmVtIDA7XG4gICAgaDJ7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG5gO1xuXG5jb25zdCBGYXN0SW5mbyA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbjogNHJlbSAwO1xuXG4gICAgQG1lZGlhKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICAgICAgICBkaXYge1xuICAgICAgICAgICAgbWFyZ2luOiAxcmVtIDA7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwIHtcbiAgICAgICAgY29sb3I6ICMwMDA7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgfVxuYDtcblxuY29uc3QgUG90YXRvUGFyayA9ICh7c3RhdGV9KSA9PiB7XG4gICAgcmV0dXJuICggXG4gICAgICAgIDxNYXJnaW5Ub3BDb250YWluZXI+XG4gICAgICAgICAgICA8SGVhZENvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8VGl0bGU+XG4gICAgICAgICAgICAgICAgICAgIFBhcnF1ZSBkZSBsYSBQYXBhIC0gUGlzYXFcbiAgICAgICAgICAgICAgICA8L1RpdGxlPlxuICAgICAgICAgICAgICAgIDxTZXBhcmF0b3I+PC9TZXBhcmF0b3I+XG4gICAgICAgICAgICAgICAgPFN1YlRpdGxlPlxuICAgICAgICAgICAgICAgICAgICBFbCBTaXN0ZW1hIEF5bGx1PGJyPjwvYnI+SW5ub3ZhY2lvbmVzIEJpb2N1bHR1cmFsZXNcbiAgICAgICAgICAgICAgICA8L1N1YlRpdGxlPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgPC9IZWFkQ29udGFpbmVyPlxuXG4gICAgICAgICAgICA8U2VjdGlvbkNvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8TWFpblBhcmFncmFwaD5cbiAgICAgICAgICAgICAgICAgICAgRWwgUGFycXVlIGRlIGxhIFBhcGEgbm8gZXMgc29sYW1lbnRlIHVuYSBpbmljaWF0aXZhIGRlIGNvbnNlcnZhY2nDs24gZGUgdmFyaWFzIHZhcmllZGFkZXMgZGUgcGFwYXMuIFxuICAgICAgICAgICAgICAgICAgICBFcywgc29icmUgdG9kbywgdW4gdGVycml0b3JpbyBiaW8gY3VsdHVyYWwgZGVkaWNhZG8gYSBsYSBjb25zZXJ2YWNpw7NuIGRlbCBwYXRyaW1vbmlvIGRlIHNlaXMgY29tdW5pZGFkZXMgXG4gICAgICAgICAgICAgICAgICAgIGluZMOtZ2VuYXMgcXVlIHZpdmVuIGFxdcOtOiBubyBzb2xhbWVudGUgY2llbnRvcyBkZSB2YXJpZWRhZGVzIGN1bHRpdmFkYXMgcGVybyBpZ3VhbG1lbnRlIGxhcyBlc3BlY2llcyBzaWx2ZXN0cmVzIFxuICAgICAgICAgICAgICAgICAgICBlbXBhcmVudGFkYXMsIGVsIHBhaXNhamUgeSBzdXMgZWxlbWVudG9zIHF1ZSBpbmNsdXllbiB0YW1iacOpbiBjb25vY2ltaWVudG9zLCB0cmFkaWNpb25lcywgaW5ub3ZhY2lvbmVzIHkgbGEgY29zbW92aXNpw7NuIFxuICAgICAgICAgICAgICAgICAgICBkZSBsb3MgbcOhcyBkZSA2MDAwIGhhYml0YW50ZXMuXG4gICAgICAgICAgICAgICAgPC9NYWluUGFyYWdyYXBoPlxuXG4gICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICA8U2VjdGlvbkluZm9Db250YWluZXI+XG4gICAgICAgICAgICAgICAgICAgIDxoMj5JbmZvRGF0YTwvaDI+XG5cbiAgICAgICAgICAgICAgICA8RmFzdEluZm8+XG4gICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Rm9udEF3ZXNvbWVJY29uU3R5bGVkIGljb249e2ZhTW91bnRhaW59Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5BcmVhPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwPjk4MjAgSGVjdMOhcmVhczwvcD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvblN0eWxlZCBpY29uPXtmYU1hbGV9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5Qb2JsYWNpw7NuPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwPjYwMDAgaGFiaXRhbnRlczwvcD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxGb250QXdlc29tZUljb25TdHlsZWQgaWNvbj17ZmFMYW5ndWFnZX0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGgzPkV0bmlhPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwPlF1ZWNodWE8L3A+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvblN0eWxlZCBpY29uPXtmYUV4Y2xhbWF0aW9uVHJpYW5nbGV9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5Qb2JyZXphPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwPjcwJSBkZSBsYSBwb2JsYWNpw7NuIDxicj48L2JyPmluZMOtZ2VuYSBkZSBDdXNjbyB2aXZlIGVuIHBvYnJlemE8L3A+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvRmFzdEluZm8+XG5cbiAgICAgICAgICAgICAgICA8L1NlY3Rpb25JbmZvQ29udGFpbmVyPlxuXG4gICAgICAgICAgICAgICAgPEJyaWVmU2VjdGlvbj5cblxuICAgICAgICAgICAgICAgICAgICA8SW5mb0l0ZW0+XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIDxGb250QXdlc29tZUljb25TdHlsZWQgaWNvbj17ZmFMaXN0QWx0fS8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aDM+RWNvc2lzdGVtYS9FY29sb2fDrWE8L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQWx0dXJhIGVudHJlIDMyMDAgeSA1MDAwIG1ldHJvcyBzb2JyZSBlbCBuaXZlbCBkZWwgbWFyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICA8cD5Vc28gbWl4dG8gZGUgc3VlbG9zLCBpbmNsdXRlbmRvIGNhbXBvcyByb3RhY2lvbmFsIChtdXl1eXMpLCBjYW1wb3MgZGUgY3VsdGl2byBwZXJtYW5lbnRlKGNoYWNyYXMpLCBhcmJ1c3RvcyB5IGJvc3F1ZXMgbmF0aXZvcywgYm9zcXVlIG5vLW5hdGl2b3MsIGFyZWFzIGRlIHBhc3RvcmVvLCBsYWdvcywgcsOtb3MgeSBodW1lZGFsZXM8L3A+XG4gICAgICAgICAgICAgICAgICAgIDwvSW5mb0l0ZW0+XG4gICAgICAgICAgICAgICAgICAgIDxWZXJ0aWNhbEJvcmRlcj48L1ZlcnRpY2FsQm9yZGVyPlxuXG4gICAgICAgICAgICAgICAgICAgIDxJbmZvSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxGb250QXdlc29tZUljb25TdHlsZWQgaWNvbj17ZmFMaXN0QWx0fS8+XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5EaXZlcnNpZGFkIEJpb2zDs2dpY2EgeSBHZW7DqXRpY2E8L2gzPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxGb250QXdlc29tZUljb25MaXN0IGljb249e2ZhQXJyb3dBbHRDaXJjbGVSaWdodH0vPkRpdmVyc29zIGN1bHRpdm9zIHRyYWRpY2lvbmFsZXMgY29tbyB0YXJ3aSwgcXVpbm9hLCBraXdpY2hhLCBtYcOteiwgaGFiYXMsIG9sbHVjYSwgb2NhLjwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxGb250QXdlc29tZUljb25MaXN0IGljb249e2ZhQXJyb3dBbHRDaXJjbGVSaWdodH0vPjE0MDAgdmFyaWVkYWRlcyBkZSBwYXBhIG5hdGl2YSB5IG90cm9zIHR1YsOpcmN1bG9zIGFuZGlub3M8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5DcmlhbnphIGRlIGFuaW1hbGVzIHByb3ZlZWRvcmVzIGRlIGNhcm5lIChjdXksIGFscGFjYSksIGxhbmEgZGUgb3ZlamEsIGxsYW1hIHkgYWxwYWNhOyBtZWRpY2luYXMuPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PEZvbnRBd2Vzb21lSWNvbkxpc3QgaWNvbj17ZmFBcnJvd0FsdENpcmNsZVJpZ2h0fS8+TWljcm9nZW5vY2VudHJvIGRlIGRvbWVzdGljYWNpw7NuLiAzIGVzcGVjaWVzIC0gc2lsdmVzdHJlcyBkZSBwYXBhLjwvbGk+IFxuICAgICAgICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICAgICAgPC9JbmZvSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgPFZlcnRpY2FsQm9yZGVyPjwvVmVydGljYWxCb3JkZXI+XG4gICAgICAgICAgICAgICAgICAgIDxJbmZvSXRlbT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvblN0eWxlZCBpY29uPXtmYUxpc3RBbHR9Lz5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICA8aDM+Q29tdW5pZGFkZXM8L2gzPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxGb250QXdlc29tZUljb25MaXN0IGljb249e2ZhQXJyb3dBbHRDaXJjbGVSaWdodH0vPkN1eW8gR3JhbmRlPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PEZvbnRBd2Vzb21lSWNvbkxpc3QgaWNvbj17ZmFBcnJvd0FsdENpcmNsZVJpZ2h0fS8+U2FjYWNhPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PEZvbnRBd2Vzb21lSWNvbkxpc3QgaWNvbj17ZmFBcnJvd0FsdENpcmNsZVJpZ2h0fS8+Q2hhd2F5dGlyZTwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxGb250QXdlc29tZUljb25MaXN0IGljb249e2ZhQXJyb3dBbHRDaXJjbGVSaWdodH0vPkFtYXJ1PC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PEZvbnRBd2Vzb21lSWNvbkxpc3QgaWNvbj17ZmFBcnJvd0FsdENpcmNsZVJpZ2h0fS8+UGFtcGFsbGFxdGE8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48Rm9udEF3ZXNvbWVJY29uTGlzdCBpY29uPXtmYUFycm93QWx0Q2lyY2xlUmlnaHR9Lz5QYXJ1IFBhcnU8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICAgICAgPC9JbmZvSXRlbT5cbiAgICAgICAgICAgICAgICA8L0JyaWVmU2VjdGlvbj5cblxuICAgICAgICAgICAgICAgIDxTZWN0aW9uSW5mb0NvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICAgICAgPGgyPkFjdGl2aWRhZGVzIGVjb27Ds21pY2FzPC9oMj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPEZhc3RJbmZvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxGb250QXdlc29tZUljb25TdHlsZWQgaWNvbj17ZmFUcmFjdG9yfS8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5BZ3JpY3VsdHVyYTwvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvblN0eWxlZCBpY29uPXtmYVNlZWRsaW5nfS8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5FbXByZXNhIGRlIHNlbWlsbGFzPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxGb250QXdlc29tZUljb25TdHlsZWQgaWNvbj17ZmFIaWtpbmd9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPkFncm8tZWNvdHVyaXNtbzwvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L0Zhc3RJbmZvPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8RmFzdEluZm8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvblN0eWxlZCBpY29uPXtmYVV0ZW5zaWxzfS8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5HYXN0cm9ub23DrWE8L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvblN0eWxlZCBpY29uPXtmYUhhbmRzfS8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5BcnRlc2Fuw61hPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Rm9udEF3ZXNvbWVJY29uU3R5bGVkIGljb249e2ZhQ2Fycm90fS8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5Qcm9kdWN0b3MgTmF0dXJhbGVzPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvRmFzdEluZm8+XG4gICAgICAgICAgICAgICAgPC9TZWN0aW9uSW5mb0NvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICA8Q2FyZHNDb250YWluZXI+XG4gICAgICAgICAgICAgICAgICAgIDxDYXJkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2ltZ0lubm92YWNpb25lQmlvfSAvPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8aDM+SW5ub3ZhY2lvbmVzIGJpb2N1bHR1cmFsZXMgZW4gZWwgUGFycXVlIGRlIGxhIFBhcGE8L2gzPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBFbCBQYXJxdWUgZGUgbGEgUGFwYSBubyBlcyBzb2xhbWVudGUgdW5hIGluaWNpYXRpdmEgZGUgY29uc2VydmFjacOzbiBkZSB2YXJpYXMgdmFyaWVkYWRlcyBkZSBwYXBhcy4gRXMsIHNvYnJlIHRvZG8sIHVuIHRlcnJpdG9yaW8gYmlvIGN1bHR1cmFsIGRlZGljYWRvIGEgbGEgY29uc2VydmFjacOzbiBkZWwgcGF0cmltb25pbyBkZSBzZWlzIGNvbXVuaWRhZGVzIGluZMOtZ2VuYXMgcXVlIHZpdmVuIGVuIGxhIHpvbmFcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHA6Ly9hbmRlcy5jZW50ZXIvd3AtY29udGVudC91cGxvYWRzLzIwMTgvMDcvRzAzOTE3LnBkZlwiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCIgPkxFRVIgTUFTPC9hPlxuICAgICAgICAgICAgICAgICAgICA8L0NhcmQ+XG5cblxuICAgICAgICAgICAgICAgICAgICA8Q2FyZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtpbWdTaXN0ZW1hQXlsbHV9IC8+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5FbCBzaXN0ZW1hIEF5bGx1IGVuIGVsIFBhcnF1ZSBkZSBsYSBQYXBhPC9oMz5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICAgICAgICAgIEVsIFBhcnF1ZSBkZSBsYSBQYXBhIG5vIGVzIHNvbGFtZW50ZSB1bmEgaW5pY2lhdGl2YSBkZSBjb25zZXJ2YWNpw7NuIGRlIHZhcmlhcyB2YXJpZWRhZGVzIGRlIHBhcGFzLiBFcywgc29icmUgdG9kbywgdW4gdGVycml0b3JpbyBiaW8gY3VsdHVyYWwgZGVkaWNhZG8gYSBsYSBjb25zZXJ2YWNpw7NuIGRlbCBwYXRyaW1vbmlvIGRlIHNlaXMgY29tdW5pZGFkZXMgaW5kw61nZW5hcyBxdWUgdml2ZW4gZW4gbGEgem9uYVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly9zYXRveWFtYS1pbml0aWF0aXZlLm9yZy9vbGQvdGhlLWF5bGx1LXN5c3RlbS1vZi10aGUtcG90YXRvLXBhcmsvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXJcIiA+TEVFUiBNQVM8L2E+XG4gICAgICAgICAgICAgICAgICAgIDwvQ2FyZD5cblxuICAgICAgICAgICAgICAgICAgICA8Q2FyZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtpbWdBZ3JpY3VsdG9yZXN9IC8+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5BZ3JpY3VsdG9yZXMgUGVydWFub3MgcHVlZGUgc2FsdmFyIGVsIHBsYW5ldGE8L2gzPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBFbCBQYXJxdWUgZGUgbGEgUGFwYSBubyBlcyBzb2xhbWVudGUgdW5hIGluaWNpYXRpdmEgZGUgY29uc2VydmFjacOzbiBkZSB2YXJpYXMgdmFyaWVkYWRlcyBkZSBwYXBhcy4gRXMsIHNvYnJlIHRvZG8sIHVuIHRlcnJpdG9yaW8gYmlvIGN1bHR1cmFsIGRlZGljYWRvIGEgbGEgY29uc2VydmFjacOzbiBkZWwgcGF0cmltb25pbyBkZSBzZWlzIGNvbXVuaWRhZGVzIGluZMOtZ2VuYXMgcXVlIHZpdmVuIGVuIGxhIHpvbmFcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vbW9kZXJuZmFybWVyLmNvbS8yMDE5LzEyL2hvdy1wZXJ1dmlhbi1wb3RhdG9lcy1taWdodC1iZS1rZXktdG8tZmVlZGluZy10aGUtcGxhbmV0L1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyXCIgPkxFRVIgTUFTPC9hPlxuICAgICAgICAgICAgICAgICAgICA8L0NhcmQ+XG4gICAgICAgICAgICAgICAgPC9DYXJkc0NvbnRhaW5lcj5cbiAgICAgICAgICAgIDwvU2VjdGlvbkNvbnRhaW5lcj5cbiAgICAgICAgICAgIFxuICAgICAgICA8L01hcmdpblRvcENvbnRhaW5lcj5cbiAgICApO1xufVxuIFxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChQb3RhdG9QYXJrKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/andes-theme/src/components-spanish/potatoPark.js\n");

/***/ })

})