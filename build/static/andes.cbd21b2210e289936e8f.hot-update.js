webpackHotUpdate("andes",{

/***/ "./packages/andes-theme/src/components-spanish/HomePage.js":
/*!*****************************************************************!*\
  !*** ./packages/andes-theme/src/components-spanish/HomePage.js ***!
  \*****************************************************************/
/*! exports provided: SectionText, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SectionText\", function() { return SectionText; });\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _static_images_link2_jpg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../static//images/link2.jpg */ \"./packages/andes-theme/src/static/images/link2.jpg\");\n/* harmony import */ var _static_images_link2_jpg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_static_images_link2_jpg__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _static_images_homenews_jpeg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../static/images/homenews.jpeg */ \"./packages/andes-theme/src/static/images/homenews.jpeg\");\n/* harmony import */ var _static_images_homenews_jpeg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_static_images_homenews_jpeg__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _static_images_1_jpeg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../static/images/1.jpeg */ \"./packages/andes-theme/src/static/images/1.jpeg\");\n/* harmony import */ var _static_images_1_jpeg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_static_images_1_jpeg__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _static_images_FotogrupalANDESytecnicosscaled_jpg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../static/images/FotogrupalANDESytecnicosscaled.jpg */ \"./packages/andes-theme/src/static/images/FotogrupalANDESytecnicosscaled.jpg\");\n/* harmony import */ var _static_images_FotogrupalANDESytecnicosscaled_jpg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_static_images_FotogrupalANDESytecnicosscaled_jpg__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _static_images_parquepapa_jpg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../static/images/parquepapa.jpg */ \"./packages/andes-theme/src/static/images/parquepapa.jpg\");\n/* harmony import */ var _static_images_parquepapa_jpg__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_static_images_parquepapa_jpg__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _static_images_publicaciones_the_culinary_sanctuary_of_the_potato_park_png__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../static/images/publicaciones/the-culinary-sanctuary-of-the-potato-park.png */ \"./packages/andes-theme/src/static/images/publicaciones/the-culinary-sanctuary-of-the-potato-park.png\");\n/* harmony import */ var _static_images_publicaciones_the_culinary_sanctuary_of_the_potato_park_png__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_static_images_publicaciones_the_culinary_sanctuary_of_the_potato_park_png__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _Link__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Link */ \"./packages/andes-theme/src/components-spanish/Link.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var SectionText=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"eqk8hwi0\",label:\"SectionText\"})( false?undefined:{name:\"1lowsnn\",styles:\"display:flex;justify-content:center;align-items:center;padding:3rem 2rem 1rem 2rem;@media(max-width:768px){flex-direction:column;padding:3rem 1rem 1rem 1rem;}div{display:flex;justify-content:center;align-items:center;flex-direction:column;padding:1rem 2rem 1rem 2rem;@media(max-width:768px){padding:1rem;}h1{color:#44841a;text-align:center;}p{color:#545454;font-size:1.2rem;margin-bottom:0rem;text-align:center;}div{display:flex;justify-content:center;align-items:center;a{text-decoration:none;background-color:#f07723;text-transform:uppercase;color:#fff;padding:1rem;border-radius:10px;text-align:center;margin-bottom:2rem;font-weight:700;}}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var SectionHomePage=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"eqk8hwi1\",label:\"SectionHomePage\"})( false?undefined:{name:\"fstzj5\",styles:\"background-color:#eaeaea;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var CardsHomeContainer=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"eqk8hwi2\",label:\"CardsHomeContainer\"})( false?undefined:{name:\"4ouk1n\",styles:\"display:flex;justify-content:center;align-items:center;padding:2rem;@media (max-width:768px){flex-direction:column;padding:0rem;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var CardsHome=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"eqk8hwi3\",label:\"CardsHome\"})( false?undefined:{name:\"u7398v\",styles:\"display:flex;flex-direction:column;margin:1rem 2rem;flex-basis:33.33%;background-color:#fff;@media (max-width:768px){margin:1rem;}div{position:relative;img{width:100%;}strong{display:flex;justify-content:center;background-color:#f07723;align-items:center;position:absolute;padding:.5rem;border-radius:.5rem;top:-.5rem;left:-1.2rem;font-size:.8rem;color:#fff;transform:rotate(-30deg);}}h3{color:#44841a;text-align:center;}span{padding:1rem 1rem 2rem 1rem;font-weight:400;font-size:1rem;text-align:center;}div{display:flex;flex-basis:50%;justify-content:center;margin-bottom:1rem;a{text-decoration:none;background-color:#44841a;color:#fff;padding:.8rem;border-radius:10px;text-align:center;}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var HomePage=(_ref)=>{var{state}=_ref;return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(SectionText,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"h1\",null,\"Bienvenidos a ANDES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"p\",null,\"ANDES trabaja activamente en los temas de biodiversidad, derechos ind\\xEDgenas y desarrollo solidario. Adem\\xE1s promovemos el intercambio horizontal de experiencias y las pol\\xEDticas que valoran el conocimiento tradicional ind\\xEDgena para aportar en el di\\xE1logo global sobre cambios clim\\xE1ticos.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_Link__WEBPACK_IMPORTED_MODULE_9__[\"default\"],{href:\"/es/filosofia\"},\"Explorar\")))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(SectionHomePage,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(CardsHomeContainer,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(CardsHome,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"img\",{src:_static_images_FotogrupalANDESytecnicosscaled_jpg__WEBPACK_IMPORTED_MODULE_6___default.a})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"h3\",null,\"25 PERSONAS CLAVE\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"span\",null,\"Como parte de las celebraciones de nuestro 25 aniversario, ANDES desea agradecer a todos los que han contribuido al desarrollo institucional, la investigaci\\xF3n colaborativa y el intercambio de conocimientos\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_Link__WEBPACK_IMPORTED_MODULE_9__[\"default\"],{href:\"/es/aniversariopersonas\"},\"LEER MAS\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(CardsHome,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"img\",{src:_static_images_parquepapa_jpg__WEBPACK_IMPORTED_MODULE_7___default.a})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"h3\",null,\"25 PROYECTOS, INTERCAMBIOS Y CAMAPA\\xD1AS\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"span\",null,\"Nos gustar\\xEDa compartir algunos de los resultados de los proyectos, campa\\xF1as y eventos pasados \\u200B\\u200Bde ANDES, que, por supuesto, solo son posibles gracias a las importantes contribuciones de nuestros socios.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_Link__WEBPACK_IMPORTED_MODULE_9__[\"default\"],{href:\"/es/aniversarioproyectos\"},\"LEER MAS\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(CardsHome,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"img\",{src:_static_images_publicaciones_the_culinary_sanctuary_of_the_potato_park_png__WEBPACK_IMPORTED_MODULE_8___default.a})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"h3\",null,\"25 PUBLICACIONES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"span\",null,\"Nos gustar\\xEDa compartir algunos de los resultados de nuestras investigaciones a trav\\xE9s de publicaciones que, por supuesto, solo son posibles gracias a las importantes contribuciones de nuestros socios.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_Link__WEBPACK_IMPORTED_MODULE_9__[\"default\"],{href:\"/es/aniversariopublicaciones\"},\"LEER MAS\"))))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(SectionText,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"h1\",null,\"Pluriversidad - Yachay Kuychi\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"p\",null,\"La Pluriversidad Yachay Kuychi (Arco Iris de Conocimientos), es una instituci\\xF3n internacional de educaci\\xF3n e investigaci\\xF3n intercultural, y un centro de excelencia en sistemas alimentarios ind\\xEDgenas y Paisajes bioculturales\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_Link__WEBPACK_IMPORTED_MODULE_9__[\"default\"],{href:\"/es/quienessomos\"},\"Informarse\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"h1\",null,\"Parque de la Papa\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"p\",null,\"El Parque de la Papa est\\xE1 ubicado en el distrito de Pisac, aproximadamente a 40 kil\\xF3metros de la ciudad de Cusco (Per\\xFA), en el Valle Sagrado de los Incas. Cubriendo una superficie de 9280 hect\\xE1reas y ubicada en una altura entre 3400 y 4600 metros arriba del nivel del mar.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(_Link__WEBPACK_IMPORTED_MODULE_9__[\"default\"],{href:\"/es/parquedelapapa-pisac\"},\"Conocer\")))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(SectionHomePage,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(CardsHomeContainer,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(CardsHome,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"img\",{src:_static_images_homenews_jpeg__WEBPACK_IMPORTED_MODULE_4___default.a}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"strong\",null,\"Noticia\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"h3\",null,\"Indigenous Resilience\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"span\",null,\"From the Mongolian Steppes to the Andean Mountains\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"a\",{href:\"https://www.culturalsurvival.org/publications/cultural-survival-quarterly/indigenous-resilience-mongolian-steppes-andean-mountains\",target:\"_blank\",rel:\"noopener\"},\"LEER MAS\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(CardsHome,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"img\",{src:_static_images_link2_jpg__WEBPACK_IMPORTED_MODULE_3___default.a}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"strong\",null,\"Evento\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"h3\",null,\"Aniversario ANDES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"span\",null,\"\\xDAnete a la celebraci\\xF3n de 25 a\\xF1os de trabajo por salvaguardar la herencia cultural\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"a\",{href:\"/\"},\"LEER MAS\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(CardsHome,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"img\",{src:_static_images_1_jpeg__WEBPACK_IMPORTED_MODULE_5___default.a}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"strong\",null,\"Publicaci\\xF3n\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"h3\",null,\"Research\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"span\",null,\"Interspecies respect and Potato Conservation in the Peruvian cradle of domestication\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_10__[\"jsx\"])(\"a\",{href:\"http://andes.center/wp-content/uploads/2018/04/ASHS_28-2018-4_PIMBERT.pdf\",target:\"_blank\",rel:\"noopener\"},\"LEER MAS\"))))));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(HomePage));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/andes-theme/src/components-spanish/HomePage.js\n");

/***/ })

})